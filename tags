!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ACTIVE	src/cn/hnu/eg/util/State.java	/^	HALT,ACTIVE,DEATH	$/;"	e	enum:State	file:
ALOAD_0	src/kilim/Constants.java	/^    int    ALOAD_0          = 42;$/;"	f	interface:Constants
ASTORE_0	src/kilim/Constants.java	/^    int    ASTORE_0         = 75;$/;"	f	interface:Constants
ArgState	src/kilim/Task.java	/^    static class ArgState extends kilim.State {$/;"	c	class:Task
Asm	src/kilim/tools/Asm.java	/^    public Asm(String afileName) throws IOException {$/;"	m	class:Asm
Asm	src/kilim/tools/Asm.java	/^public class Asm {$/;"	c
AsmDetector	src/kilim/analysis/AsmDetector.java	/^public class AsmDetector {$/;"	c
AsmException	src/kilim/tools/Asm.java	/^    public AsmException(String s) {super(s);}$/;"	m	class:AsmException
AsmException	src/kilim/tools/Asm.java	/^class AsmException extends RuntimeException {$/;"	c
BBComparator	src/kilim/analysis/BasicBlock.java	/^class BBComparator implements Comparator<BasicBlock> {$/;"	c
BBList	src/kilim/analysis/BBList.java	/^    public BBList() {}$/;"	m	class:BBList
BBList	src/kilim/analysis/BBList.java	/^    public BBList(int size) {$/;"	m	class:BBList
BBList	src/kilim/analysis/BBList.java	/^public class BBList extends ArrayList<BasicBlock>$/;"	c
BasicBlock	src/kilim/analysis/BasicBlock.java	/^    public BasicBlock(MethodFlow aflow, LabelNode aStartLabel) {$/;"	m	class:BasicBlock
BasicBlock	src/kilim/analysis/BasicBlock.java	/^public class BasicBlock implements Comparable<BasicBlock> {$/;"	c
BlockingSubscriber	src/kilim/Cell.java	/^    public class BlockingSubscriber implements EventSubscriber {$/;"	c	class:Cell
BlockingSubscriber	src/kilim/Mailbox.java	/^    public class BlockingSubscriber implements EventSubscriber {$/;"	c	class:Mailbox
Bunnies	src/examples/Bunnies.java	/^	Bunnies(){$/;"	m	class:Bunnies
Bunnies	src/examples/Bunnies.java	/^	Bunnies(int x){$/;"	m	class:Bunnies
Bunnies	src/examples/Bunnies.java	/^public class Bunnies {$/;"	c
COALESCED	src/kilim/analysis/BasicBlock.java	/^    static final int              COALESCED          = 1 << 2;$/;"	f	class:BasicBlock
CR	src/kilim/http/HttpRequest.java	/^    public static byte CR = (byte) '\\r';$/;"	f	class:HttpRequest
CRLF	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      CRLF                             = "\\r\\n".getBytes();$/;"	f	class:HttpResponse
CachedClassMirror	src/kilim/mirrors/CachedClassMirrors.java	/^    public CachedClassMirror(byte []bytecode) {$/;"	m	class:CachedClassMirror
CachedClassMirror	src/kilim/mirrors/CachedClassMirrors.java	/^class CachedClassMirror extends ClassVisitor implements ClassMirror  {$/;"	c
CachedClassMirrors	src/kilim/mirrors/CachedClassMirrors.java	/^    public CachedClassMirrors(ClassLoader cl) {$/;"	m	class:CachedClassMirrors
CachedClassMirrors	src/kilim/mirrors/CachedClassMirrors.java	/^public class CachedClassMirrors implements Mirrors {$/;"	c
CachedMethodMirror	src/kilim/mirrors/CachedClassMirrors.java	/^    public CachedMethodMirror(int access, String name, String desc, String[] exceptions) {$/;"	m	class:CachedMethodMirror
CachedMethodMirror	src/kilim/mirrors/CachedClassMirrors.java	/^class CachedMethodMirror implements MethodMirror {$/;"	c
Calculation	src/examples/Calculation.java	/^	public Calculation(BigDecimal dividend, BigDecimal divisor) {$/;"	m	class:Calculation
Calculation	src/examples/Calculation.java	/^public class Calculation {$/;"	c
Calculator	src/examples/Calculator.java	/^	public Calculator(Mailbox<Calculation> mailbox){$/;"	m	class:Calculator
Calculator	src/examples/Calculator.java	/^public class Calculator extends Task{$/;"	c
CallWeaver	src/kilim/analysis/CallWeaver.java	/^    public CallWeaver(MethodWeaver mw, BasicBlock aBB) {$/;"	m	class:CallWeaver
CallWeaver	src/kilim/analysis/CallWeaver.java	/^public class CallWeaver {$/;"	c
Cell	src/kilim/Cell.java	/^    public Cell() {$/;"	m	class:Cell
Cell	src/kilim/Cell.java	/^public class Cell<T> implements PauseReason, EventPublisher {$/;"	c
Chain	src/examples/Chain.java	/^    public Chain(Mailbox<StringBuffer> mb, Mailbox<StringBuffer> next) {$/;"	m	class:Chain
Chain	src/examples/Chain.java	/^public class Chain extends Task {$/;"	c
Chain	src/kilim/examples/Chain.java	/^    public Chain(Mailbox<StringBuffer> mb, Mailbox<StringBuffer> next) {$/;"	m	class:Chain
Chain	src/kilim/examples/Chain.java	/^public class Chain extends Task {$/;"	c
ClassCache	src/kilim/analysis/AsmDetector.java	/^    static class ClassCache {$/;"	c	class:AsmDetector
ClassFlow	src/kilim/analysis/ClassFlow.java	/^    public ClassFlow(InputStream is, Detector detector) throws IOException {$/;"	m	class:ClassFlow
ClassFlow	src/kilim/analysis/ClassFlow.java	/^    public ClassFlow(String aClassName, Detector detector) throws IOException {$/;"	m	class:ClassFlow
ClassFlow	src/kilim/analysis/ClassFlow.java	/^    public ClassFlow(byte[] data, Detector detector) {$/;"	m	class:ClassFlow
ClassFlow	src/kilim/analysis/ClassFlow.java	/^public class ClassFlow extends ClassNode {$/;"	c
ClassInfo	src/kilim/analysis/ClassInfo.java	/^    public ClassInfo(String aClassName, byte[] aBytes) {$/;"	m	class:ClassInfo
ClassInfo	src/kilim/analysis/ClassInfo.java	/^public class ClassInfo {$/;"	c
ClassMirror	src/kilim/mirrors/ClassMirror.java	/^public interface ClassMirror {$/;"	i
ClassMirrorNotFoundException	src/kilim/mirrors/ClassMirrorNotFoundException.java	/^	public ClassMirrorNotFoundException (String msg) {$/;"	m	class:ClassMirrorNotFoundException
ClassMirrorNotFoundException	src/kilim/mirrors/ClassMirrorNotFoundException.java	/^	public ClassMirrorNotFoundException(Throwable cause) {$/;"	m	class:ClassMirrorNotFoundException
ClassMirrorNotFoundException	src/kilim/mirrors/ClassMirrorNotFoundException.java	/^public class ClassMirrorNotFoundException extends Exception {$/;"	c
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^    public ClassWeaver(InputStream is, Detector detector) throws IOException {$/;"	m	class:ClassWeaver
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^    public ClassWeaver(InputStream is, Detector detector, ClassLoader classLoader) throws IOException {$/;"	m	class:ClassWeaver
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^    public ClassWeaver(String className, Detector detector) throws IOException {$/;"	m	class:ClassWeaver
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^    public ClassWeaver(String className, Detector detector, ClassLoader classLoader) throws IOException {$/;"	m	class:ClassWeaver
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^    public ClassWeaver(byte[] data) {$/;"	m	class:ClassWeaver
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^    public ClassWeaver(byte[] data, Detector detector) {$/;"	m	class:ClassWeaver
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^    public ClassWeaver(byte[] data, Detector detector, ClassLoader classLoader) {$/;"	m	class:ClassWeaver
ClassWeaver	src/kilim/analysis/ClassWeaver.java	/^public class ClassWeaver {$/;"	c
ClassWriter	src/kilim/analysis/ClassWriter.java	/^	public ClassWriter(final int flags, final ClassLoader classLoader) {$/;"	m	class:ClassWriter
ClassWriter	src/kilim/analysis/ClassWriter.java	/^	public ClassWriter(final int flags, final Detector detector) {$/;"	m	class:ClassWriter
ClassWriter	src/kilim/analysis/ClassWriter.java	/^public class ClassWriter extends org.objectweb.asm.ClassWriter {$/;"	c
Client	src/examples/Ping.java	/^    public static class Client {$/;"	c	class:Ping
Client	src/kilim/examples/Ping.java	/^    public static class Client {$/;"	c	class:Ping
Constants	src/kilim/Constants.java	/^public interface Constants extends Opcodes {$/;"	i
DEATH	src/cn/hnu/eg/util/State.java	/^	HALT,ACTIVE,DEATH	$/;"	e	enum:State	file:
DEFAULT	src/kilim/mirrors/Detector.java	/^    public static final Detector DEFAULT = new Detector(new RuntimeClassMirrors());$/;"	f	class:Detector
DETECTOR	src/kilim/mirrors/Detector.java	/^    static private final ThreadLocal<Detector> DETECTOR = new ThreadLocal<Detector>();$/;"	f	class:Detector	file:
DLOAD_0	src/kilim/Constants.java	/^    int    DLOAD_0          = 38;$/;"	f	interface:Constants
DSTORE_0	src/kilim/Constants.java	/^    int    DSTORE_0         = 71;$/;"	f	interface:Constants
D_ARRAY_BOOLEAN	src/kilim/Constants.java	/^    String D_ARRAY_BOOLEAN  = "[Z";$/;"	f	interface:Constants
D_ARRAY_BYTE	src/kilim/Constants.java	/^    String D_ARRAY_BYTE     = "[B";$/;"	f	interface:Constants
D_ARRAY_CHAR	src/kilim/Constants.java	/^    String D_ARRAY_CHAR     = "[C";$/;"	f	interface:Constants
D_ARRAY_DOUBLE	src/kilim/Constants.java	/^    String D_ARRAY_DOUBLE   = "[D";$/;"	f	interface:Constants
D_ARRAY_FLOAT	src/kilim/Constants.java	/^    String D_ARRAY_FLOAT    = "[F";$/;"	f	interface:Constants
D_ARRAY_INT	src/kilim/Constants.java	/^    String D_ARRAY_INT      = "[I";$/;"	f	interface:Constants
D_ARRAY_LONG	src/kilim/Constants.java	/^    String D_ARRAY_LONG     = "[J";$/;"	f	interface:Constants
D_ARRAY_SHORT	src/kilim/Constants.java	/^    String D_ARRAY_SHORT    = "[S";$/;"	f	interface:Constants
D_BOOLEAN	src/kilim/Constants.java	/^    String D_BOOLEAN        = "Z";$/;"	f	interface:Constants
D_BYTE	src/kilim/Constants.java	/^    String D_BYTE           = "B";$/;"	f	interface:Constants
D_CHAR	src/kilim/Constants.java	/^    String D_CHAR           = "C";$/;"	f	interface:Constants
D_DOUBLE	src/kilim/Constants.java	/^    String D_DOUBLE         = "D";$/;"	f	interface:Constants
D_FIBER	src/kilim/Constants.java	/^    String D_FIBER          = "Lkilim\/Fiber;";$/;"	f	interface:Constants
D_FIBER_	src/kilim/mirrors/Detector.java	/^    public static String D_FIBER_ = Constants.D_FIBER + ")";$/;"	f	class:Detector
D_FLOAT	src/kilim/Constants.java	/^    String D_FLOAT          = "F";$/;"	f	interface:Constants
D_INT	src/kilim/Constants.java	/^    String D_INT            = "I";$/;"	f	interface:Constants
D_LONG	src/kilim/Constants.java	/^    String D_LONG           = "J";$/;"	f	interface:Constants
D_NULL	src/kilim/Constants.java	/^    String D_NULL           = "NULL";$/;"	f	interface:Constants
D_OBJECT	src/kilim/Constants.java	/^    String D_OBJECT         = "Ljava\/lang\/Object;";$/;"	f	interface:Constants
D_PAUSABLE	src/kilim/Constants.java	/^    String D_PAUSABLE       = "Lkilim\/Pausable;";$/;"	f	interface:Constants
D_RETURN_ADDRESS	src/kilim/Constants.java	/^    String D_RETURN_ADDRESS = "A";$/;"	f	interface:Constants
D_SHORT	src/kilim/Constants.java	/^    String D_SHORT          = "S";$/;"	f	interface:Constants
D_STATE	src/kilim/Constants.java	/^    String D_STATE          = "Lkilim\/State;";$/;"	f	interface:Constants
D_STRING	src/kilim/Constants.java	/^    String D_STRING         = "Ljava\/lang\/String;";$/;"	f	interface:Constants
D_TASK	src/kilim/Constants.java	/^    String D_TASK           = "Lkilim\/Task;";$/;"	f	interface:Constants
D_THROWABLE	src/kilim/Constants.java	/^    String D_THROWABLE      = "Ljava\/lang\/Throwable;";$/;"	f	interface:Constants
D_UNDEFINED	src/kilim/Constants.java	/^    String D_UNDEFINED      = "UNDEFINED";$/;"	f	interface:Constants
D_VOID	src/kilim/Constants.java	/^    String D_VOID           = "V";$/;"	f	interface:Constants
DefferedDivision	src/examples/DefferedDivision.java	/^	public DefferedDivision(Mailbox<Calculation> mailbox){$/;"	m	class:DefferedDivision
DefferedDivision	src/examples/DefferedDivision.java	/^public class DefferedDivision extends Task{$/;"	c
Detector	src/kilim/mirrors/Detector.java	/^    public Detector(Mirrors mirrors) {$/;"	m	class:Detector
Detector	src/kilim/mirrors/Detector.java	/^public class Detector {$/;"	c
DirEntry	src/kilim/analysis/FileLister.java	/^        DirEntry(File f) {file = f;}$/;"	m	class:DirIterator.DirEntry
DirEntry	src/kilim/analysis/FileLister.java	/^    private static class DirEntry extends FileLister.Entry {$/;"	c	class:DirIterator
DirIterator	src/kilim/analysis/FileLister.java	/^    DirIterator(File f) {$/;"	m	class:DirIterator
DirIterator	src/kilim/analysis/FileLister.java	/^class DirIterator extends FileContainer {$/;"	c
DummyAnnotationVisitor	src/kilim/mirrors/CachedClassMirrors.java	/^        public DummyAnnotationVisitor() {$/;"	m	class:CachedClassMirror.DummyAnnotationVisitor
DummyAnnotationVisitor	src/kilim/mirrors/CachedClassMirrors.java	/^    static class DummyAnnotationVisitor extends AnnotationVisitor {$/;"	c	class:CachedClassMirror
DummyAnnotationVisitor	src/kilim/tools/DumpClass.java	/^    public DummyAnnotationVisitor() {$/;"	m	class:DummyAnnotationVisitor
DummyAnnotationVisitor	src/kilim/tools/DumpClass.java	/^class DummyAnnotationVisitor extends AnnotationVisitor {$/;"	c
DumpClass	src/kilim/tools/DumpClass.java	/^    public DumpClass(InputStream is) throws IOException {$/;"	m	class:DumpClass
DumpClass	src/kilim/tools/DumpClass.java	/^    public DumpClass(String className) throws IOException {$/;"	m	class:DumpClass
DumpClass	src/kilim/tools/DumpClass.java	/^public class DumpClass extends ClassVisitor implements Opcodes {$/;"	c
DumpMethodVisitor	src/kilim/tools/DumpClass.java	/^    public DumpMethodVisitor() {$/;"	m	class:DumpMethodVisitor
DumpMethodVisitor	src/kilim/tools/DumpClass.java	/^class DumpMethodVisitor extends MethodVisitor implements Opcodes {$/;"	c
EMPTY_SET	src/kilim/mirrors/CachedClassMirrors.java	/^    final static String[] EMPTY_SET = new String[0];$/;"	f	class:CachedClassMirrors
EMPTY_STRINGS	src/kilim/mirrors/Detector.java	/^    final private static ArrayList<String> EMPTY_STRINGS = new ArrayList<String>(0);$/;"	f	class:Detector	file:
ENQUEUED	src/kilim/analysis/BasicBlock.java	/^    static final int              ENQUEUED           = 1;$/;"	f	class:BasicBlock
EOF	src/kilim/tools/Asm.java	/^class EOF extends RuntimeException {$/;"	c
EasyGraphConstant	src/cn/hnu/eg/util/EasyGraphConstant.java	/^public interface EasyGraphConstant {$/;"	i
EmptySet_MsgAvListener	src/kilim/Mailbox.java	/^    EmptySet_MsgAvListener(Task t, Mailbox<?>[] mbs) {$/;"	m	class:EmptySet_MsgAvListener
EmptySet_MsgAvListener	src/kilim/Mailbox.java	/^class EmptySet_MsgAvListener implements PauseReason, EventSubscriber {$/;"	c
EndPoint	src/kilim/nio/EndPoint.java	/^    public EndPoint() {$/;"	m	class:EndPoint
EndPoint	src/kilim/nio/EndPoint.java	/^    public EndPoint(Mailbox<SockEvent> mbx, AbstractSelectableChannel ch) {$/;"	m	class:EndPoint
EndPoint	src/kilim/nio/EndPoint.java	/^public class EndPoint extends Mailbox<SockEvent> { \/\/ Mailbox for receiving socket ready events.$/;"	c
Entry	src/kilim/analysis/FileLister.java	/^   public static abstract class Entry {$/;"	c	class:FileLister
Event	src/kilim/Event.java	/^    public Event(int evType) {$/;"	m	class:Event
Event	src/kilim/Event.java	/^public class Event {$/;"	c
EventPublisher	src/kilim/EventPublisher.java	/^public interface EventPublisher {$/;"	i
EventSubscriber	src/kilim/EventSubscriber.java	/^public interface EventSubscriber {$/;"	i
ExitMsg	src/kilim/ExitMsg.java	/^    public ExitMsg(Task t, Object res) {$/;"	m	class:ExitMsg
ExitMsg	src/kilim/ExitMsg.java	/^public class ExitMsg {$/;"	c
ExposedBais	src/kilim/nio/ExposedBais.java	/^  public ExposedBais(byte[] buf) {$/;"	m	class:ExposedBais
ExposedBais	src/kilim/nio/ExposedBais.java	/^  public ExposedBais(byte[] buf, int offset, int length) {$/;"	m	class:ExposedBais
ExposedBais	src/kilim/nio/ExposedBais.java	/^  public ExposedBais(int size) {$/;"	m	class:ExposedBais
ExposedBais	src/kilim/nio/ExposedBais.java	/^public class ExposedBais extends ByteArrayInputStream {$/;"	c
ExposedBaos	src/kilim/nio/ExposedBaos.java	/^  public ExposedBaos() {$/;"	m	class:ExposedBaos
ExposedBaos	src/kilim/nio/ExposedBaos.java	/^  public ExposedBaos(int size) {$/;"	m	class:ExposedBaos
ExposedBaos	src/kilim/nio/ExposedBaos.java	/^public class ExposedBaos extends ByteArrayOutputStream {$/;"	c
FIBER_CLASS	src/kilim/Constants.java	/^    String FIBER_CLASS      = "kilim\/Fiber";$/;"	f	interface:Constants
FIBER_SUFFIX	src/kilim/analysis/ClassWeaver.java	/^    static String FIBER_SUFFIX = D_FIBER + ')';$/;"	f	class:ClassWeaver
FIELD	src/kilim/tools/Asm.java	/^    private final static int                      FIELD          = 6;$/;"	f	class:Asm	file:
FIELD_SEP	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      FIELD_SEP                        = ": ".getBytes();$/;"	f	class:HttpResponse
FLOAD_0	src/kilim/Constants.java	/^    int    FLOAD_0          = 34;$/;"	f	interface:Constants
FSTORE_0	src/kilim/Constants.java	/^    int    FSTORE_0         = 67;$/;"	f	interface:Constants
F_DATE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      F_DATE                           = "Date: ".getBytes();$/;"	f	class:HttpResponse
F_SERVER	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      F_SERVER                         = ("Server: kilim "$/;"	f	class:HttpResponse
Fib	src/examples/Fib.java	/^public class Fib extends Generator<BigInteger> {$/;"	c
Fib	src/kilim/examples/Fib.java	/^public class Fib extends Generator<BigInteger> {$/;"	c
Fiber	src/kilim/Fiber.java	/^    public Fiber(Task t) {$/;"	m	class:Fiber
Fiber	src/kilim/Fiber.java	/^public final class Fiber {$/;"	c
FileContainer	src/kilim/analysis/FileLister.java	/^abstract class FileContainer implements Iterator<FileLister.Entry> {$/;"	c
FileLister	src/kilim/analysis/FileLister.java	/^    public FileLister(String dirOrJarName) throws IOException {$/;"	m	class:FileLister
FileLister	src/kilim/analysis/FileLister.java	/^public class FileLister implements Iterable<FileLister.Entry> {$/;"	c
FlowAnalyzer	src/kilim/tools/FlowAnalyzer.java	/^public class FlowAnalyzer {$/;"	c
Frame	src/kilim/analysis/Frame.java	/^    private Frame(Value[] alocals, Value[] astack, int astacklen, int aNumMonitorsActive) {$/;"	m	class:Frame	file:
Frame	src/kilim/analysis/Frame.java	/^    private Frame(int nLocals, int nStack, boolean init) {$/;"	m	class:Frame	file:
Frame	src/kilim/analysis/Frame.java	/^    public Frame(String classDesc, MethodNode method) {$/;"	m	class:Frame
Frame	src/kilim/analysis/Frame.java	/^    public Frame(int nLocals, int nStack) {$/;"	m	class:Frame
Frame	src/kilim/analysis/Frame.java	/^public class Frame {$/;"	c
GMT	src/kilim/http/HttpRequestParser.java	/^    public static TimeZone GMT = TimeZone.getTimeZone("GMT");$/;"	f	class:HttpRequestParser
Generator	src/kilim/Generator.java	/^public class Generator<T> extends Task implements Iterator<T>, Iterable<T> {$/;"	c
Graph	src/cn/hnu/eg/ds/Graph.java	/^	public Graph(String vertexClassName,String filename){$/;"	m	class:Graph
Graph	src/cn/hnu/eg/ds/Graph.java	/^public class Graph {$/;"	c
GraphFilePath	src/cn/hnu/eg/util/EasyGraphConstant.java	/^	public final static String GraphFilePath = "\/home\/dodoro\/EasyGraph\/graph.dat";$/;"	f	interface:EasyGraphConstant
GraphGenerator	src/cn/hnu/eg/util/GraphGenerator.java	/^public class GraphGenerator {$/;"	c
Group	src/examples/Group.java	/^public class Group {$/;"	c
Group	src/kilim/examples/Group.java	/^public class Group {$/;"	c
GroupTask	src/examples/Group.java	/^    static class GroupTask extends Task {$/;"	c	class:Group
GroupTask	src/kilim/examples/Group.java	/^    static class GroupTask extends Task {$/;"	c	class:Group
HALT	src/cn/hnu/eg/util/State.java	/^	HALT,ACTIVE,DEATH	$/;"	e	enum:State	file:
Handler	src/kilim/analysis/Handler.java	/^    public Handler(int aFrom, int aTo, String aType, BasicBlock aCatchBB) {$/;"	m	class:Handler
Handler	src/kilim/analysis/Handler.java	/^public class Handler implements Comparable<Handler> {$/;"	c
HttpFileServer	src/examples/HttpFileServer.java	/^public class HttpFileServer extends HttpSession {$/;"	c
HttpFileServer	src/kilim/examples/HttpFileServer.java	/^public class HttpFileServer extends HttpSession {$/;"	c
HttpMsg	src/kilim/http/HttpMsg.java	/^public class HttpMsg {$/;"	c
HttpRequest	src/kilim/http/HttpRequest.java	/^    public HttpRequest() {$/;"	m	class:HttpRequest
HttpRequest	src/kilim/http/HttpRequest.java	/^public class HttpRequest extends HttpMsg {$/;"	c
HttpRequestParser	src/kilim/http/HttpRequestParser.java	/^public class HttpRequestParser {$/;"	c
HttpResponse	src/kilim/http/HttpResponse.java	/^    public HttpResponse() {$/;"	m	class:HttpResponse
HttpResponse	src/kilim/http/HttpResponse.java	/^    public HttpResponse(String statusMsg) {$/;"	m	class:HttpResponse
HttpResponse	src/kilim/http/HttpResponse.java	/^    public HttpResponse(byte[] statusb) {$/;"	m	class:HttpResponse
HttpResponse	src/kilim/http/HttpResponse.java	/^public class HttpResponse extends HttpMsg {$/;"	c
HttpServer	src/kilim/http/HttpServer.java	/^  public HttpServer() {}$/;"	m	class:HttpServer
HttpServer	src/kilim/http/HttpServer.java	/^  public HttpServer(int port, Class<? extends HttpSession> httpSessionClass) throws IOException {$/;"	m	class:HttpServer
HttpServer	src/kilim/http/HttpServer.java	/^public class HttpServer {$/;"	c
HttpSession	src/kilim/http/HttpSession.java	/^public class HttpSession extends SessionTask {$/;"	c
IINC	src/kilim/tools/Asm.java	/^    private final static int                      IINC           = 11;$/;"	f	class:Asm	file:
ILOAD_0	src/kilim/Constants.java	/^    int    ILOAD_0          = 26;$/;"	f	interface:Constants
INLINE_CHECKED	src/kilim/analysis/BasicBlock.java	/^    static final int              INLINE_CHECKED     = 1 << 7;$/;"	f	class:BasicBlock
INSN	src/kilim/tools/Asm.java	/^    private final static int                      INSN           = 0;$/;"	f	class:Asm	file:
INT	src/kilim/tools/Asm.java	/^    private final static int                      INT            = 10;$/;"	f	class:Asm	file:
ISTORE_0	src/kilim/Constants.java	/^    int    ISTORE_0         = 59;$/;"	f	interface:Constants
IS_SUBROUTINE	src/kilim/analysis/BasicBlock.java	/^    static final int              IS_SUBROUTINE      = 1 << 5;$/;"	f	class:BasicBlock
IncompatibleTypesException	src/kilim/analysis/IncompatibleTypesException.java	/^    public IncompatibleTypesException(String message) {$/;"	m	class:IncompatibleTypesException
IncompatibleTypesException	src/kilim/analysis/IncompatibleTypesException.java	/^public class IncompatibleTypesException extends Exception {$/;"	c
InferiorMessage	src/cn/hnu/eg/sys/InferiorMessage.java	/^	public InferiorMessage(){$/;"	m	class:InferiorMessage
InferiorMessage	src/cn/hnu/eg/sys/InferiorMessage.java	/^	public InferiorMessage(State state){$/;"	m	class:InferiorMessage
InferiorMessage	src/cn/hnu/eg/sys/InferiorMessage.java	/^	public InferiorMessage(State state,int value){$/;"	m	class:InferiorMessage
InferiorMessage	src/cn/hnu/eg/sys/InferiorMessage.java	/^public class InferiorMessage implements Message , Serializable{$/;"	c
IntList	src/kilim/http/IntList.java	/^  public IntList() {this(10);}$/;"	m	class:IntList
IntList	src/kilim/http/IntList.java	/^  public IntList(int initialSize) {$/;"	m	class:IntList
IntList	src/kilim/http/IntList.java	/^public class IntList {$/;"	c
JAVA_LANG_OBJECT	src/kilim/analysis/TypeDesc.java	/^    static String JAVA_LANG_OBJECT = "java.lang.Object";$/;"	f	class:TypeDesc
JAVA_LANG_OBJECT	src/kilim/mirrors/Detector.java	/^    static String JAVA_LANG_OBJECT = "java.lang.Object";$/;"	f	class:Detector
JEntry	src/kilim/analysis/FileLister.java	/^        JEntry(JarEntry j) {jarEntry = j;}$/;"	m	class:JarIterator.JEntry
JEntry	src/kilim/analysis/FileLister.java	/^    private class JEntry extends FileLister.Entry {$/;"	c	class:JarIterator
JUMP	src/kilim/tools/Asm.java	/^    private final static int                      JUMP           = 3;$/;"	f	class:Asm	file:
JarIterator	src/kilim/analysis/FileLister.java	/^    JarIterator(JarFile f) {$/;"	m	class:JarIterator
JarIterator	src/kilim/analysis/FileLister.java	/^class JarIterator extends FileContainer {$/;"	c
Javac	src/kilim/tools/Javac.java	/^public class Javac {$/;"	c
KILIM_CLASSPATH	src/kilim/WeavingClassLoader.java	/^    public static final String KILIM_CLASSPATH = "kilim.class.path";$/;"	f	class:WeavingClassLoader
KILIM_VERSION	src/kilim/Constants.java	/^    String KILIM_VERSION    = "1.0";$/;"	f	interface:Constants
KeyValues	src/kilim/http/KeyValues.java	/^  public KeyValues() {this(5);}$/;"	m	class:KeyValues
KeyValues	src/kilim/http/KeyValues.java	/^  public KeyValues(int size) {$/;"	m	class:KeyValues
KeyValues	src/kilim/http/KeyValues.java	/^public class KeyValues {$/;"	c
Kilim	src/kilim/tools/Kilim.java	/^public class Kilim {$/;"	c
KilimClassLoader	src/kilim/KilimClassLoader.java	/^    public KilimClassLoader(ClassLoader cl) {$/;"	m	class:KilimClassLoader
KilimClassLoader	src/kilim/KilimClassLoader.java	/^public class KilimClassLoader extends ClassLoader {$/;"	c
KilimException	src/kilim/KilimException.java	/^    public KilimException(String msg) {super(msg);}$/;"	m	class:KilimException
KilimException	src/kilim/KilimException.java	/^public class KilimException extends RuntimeException {$/;"	c
LDC	src/kilim/tools/Asm.java	/^    private final static int                      LDC            = 2;$/;"	f	class:Asm	file:
LDC2_W	src/kilim/Constants.java	/^    int    LDC2_W           = 20;$/;"	f	interface:Constants
LF	src/kilim/http/HttpRequest.java	/^    public static byte LF = (byte) '\\n';$/;"	f	class:HttpRequest
LISTEN_BACKLOG	src/kilim/nio/NioSelectorScheduler.java	/^    public static int         LISTEN_BACKLOG  = 1000;$/;"	f	class:NioSelectorScheduler
LLOAD_0	src/kilim/Constants.java	/^    int    LLOAD_0          = 30;$/;"	f	interface:Constants
LOOKUPSWITCH	src/kilim/tools/Asm.java	/^    private final static int                      LOOKUPSWITCH   = 5;$/;"	f	class:Asm	file:
LSTORE_0	src/kilim/Constants.java	/^    int    LSTORE_0         = 63;$/;"	f	interface:Constants
Line	src/kilim/tools/Asm.java	/^    Line(int num, String str) {$/;"	m	class:Line
Line	src/kilim/tools/Asm.java	/^class Line {$/;"	c
ListenTask	src/kilim/nio/NioSelectorScheduler.java	/^        public ListenTask(int port, NioSelectorScheduler selScheduler, Class<? extends SessionTask> sessionClass)$/;"	m	class:NioSelectorScheduler.ListenTask
ListenTask	src/kilim/nio/NioSelectorScheduler.java	/^    public static class ListenTask extends SessionTask {$/;"	c	class:NioSelectorScheduler
METHOD	src/kilim/tools/Asm.java	/^    private final static int                      METHOD         = 7;$/;"	f	class:Asm	file:
METHOD_NOT_FOUND_OR_PAUSABLE	src/kilim/mirrors/Detector.java	/^    public static final int METHOD_NOT_FOUND_OR_PAUSABLE = 0; \/\/ either not found, or not pausable if found.$/;"	f	class:Detector
METHOD_NOT_PAUSABLE	src/kilim/mirrors/Detector.java	/^    public static final int METHOD_NOT_PAUSABLE = 2; \/\/ known to be not pausable$/;"	f	class:Detector
MSG_AVAILABLE	src/kilim/Cell.java	/^    public static final int MSG_AVAILABLE = 2;$/;"	f	class:Cell
MSG_AVAILABLE	src/kilim/Mailbox.java	/^    public static final int MSG_AVAILABLE = 2;$/;"	f	class:Mailbox
MULTIANEWARRAY	src/kilim/tools/Asm.java	/^    private final static int                      MULTIANEWARRAY = 9;$/;"	f	class:Asm	file:
Mailbox	src/kilim/Mailbox.java	/^    public Mailbox() {$/;"	m	class:Mailbox
Mailbox	src/kilim/Mailbox.java	/^    public Mailbox(int initialSize) {$/;"	m	class:Mailbox
Mailbox	src/kilim/Mailbox.java	/^    public Mailbox(int initialSize, int maxSize) {$/;"	m	class:Mailbox
Mailbox	src/kilim/Mailbox.java	/^public class Mailbox<T> implements PauseReason, EventPublisher {$/;"	c
Master	src/cn/hnu/eg/sys/Master.java	/^	private Master(){$/;"	m	class:Master	file:
Master	src/cn/hnu/eg/sys/Master.java	/^public class Master extends Task{$/;"	c
MasterHolder	src/cn/hnu/eg/sys/Master.java	/^	public static class MasterHolder{$/;"	c	class:Master
MaxValueVertex	src/cn/hnu/eg/sys/MaxValueVertex.java	/^public class MaxValueVertex extends Vertex {$/;"	c
Message	src/cn/hnu/eg/sys/Message.java	/^public interface Message {			$/;"	i
MessageTest	src/cn/hnu/eg/util/test/MessageTest.java	/^public class MessageTest {$/;"	c
MethodFlow	src/kilim/analysis/MethodFlow.java	/^    public MethodFlow($/;"	m	class:MethodFlow
MethodFlow	src/kilim/analysis/MethodFlow.java	/^public class MethodFlow extends MethodNode {$/;"	c
MethodMirror	src/kilim/mirrors/MethodMirror.java	/^public interface MethodMirror  {$/;"	i
MethodWeaver	src/kilim/analysis/MethodWeaver.java	/^    MethodWeaver(ClassWeaver cw, MethodFlow mf) {$/;"	m	class:MethodWeaver
MethodWeaver	src/kilim/analysis/MethodWeaver.java	/^public class MethodWeaver {$/;"	c
Mirrors	src/kilim/mirrors/Mirrors.java	/^public interface Mirrors {$/;"	i
NOT_PAUSABLE	src/kilim/mirrors/Detector.java	/^    ClassMirror NOT_PAUSABLE, PAUSABLE, OBJECT;$/;"	f	class:Detector
NOT_PAUSABLE_CLASS	src/kilim/Constants.java	/^    String NOT_PAUSABLE_CLASS   = "kilim\/NotPausable";$/;"	f	interface:Constants
NOT_PAUSING__HAS_STATE	src/kilim/Fiber.java	/^    public static final int   NOT_PAUSING__HAS_STATE = 1;$/;"	f	class:Fiber
NOT_PAUSING__NO_STATE	src/kilim/Fiber.java	/^    public static final int   NOT_PAUSING__NO_STATE  = 0;$/;"	f	class:Fiber
NO_VAL	src/kilim/analysis/Value.java	/^    public static Object NO_VAL = new Object();$/;"	f	class:Value
NioSelectorScheduler	src/kilim/nio/NioSelectorScheduler.java	/^    public NioSelectorScheduler() throws IOException {$/;"	m	class:NioSelectorScheduler
NioSelectorScheduler	src/kilim/nio/NioSelectorScheduler.java	/^public class NioSelectorScheduler extends Scheduler {$/;"	c
NopInsn	src/kilim/analysis/NopInsn.java	/^    public NopInsn() {$/;"	m	class:NopInsn
NopInsn	src/kilim/analysis/NopInsn.java	/^class NopInsn extends AbstractInsnNode {$/;"	c
NotPausable	src/kilim/NotPausable.java	/^public class NotPausable extends RuntimeException {$/;"	c
OBJECT	src/kilim/mirrors/Detector.java	/^    ClassMirror NOT_PAUSABLE, PAUSABLE, OBJECT;$/;"	f	class:Detector
P	src/kilim/tools/P.java	/^public class P {$/;"	c
PACKET_LEN	src/examples/Ping.java	/^    static int PACKET_LEN = 100;$/;"	f	class:Ping
PACKET_LEN	src/kilim/examples/Ping.java	/^    static int PACKET_LEN = 100;$/;"	f	class:Ping
PAUSABLE	src/kilim/analysis/BasicBlock.java	/^    static final int              PAUSABLE           = 1 << 4;$/;"	f	class:BasicBlock
PAUSABLE	src/kilim/mirrors/Detector.java	/^    ClassMirror NOT_PAUSABLE, PAUSABLE, OBJECT;$/;"	f	class:Detector
PAUSABLE_CLASS	src/kilim/Constants.java	/^    String PAUSABLE_CLASS   = "kilim\/Pausable";$/;"	f	interface:Constants
PAUSABLE_METHOD_FOUND	src/kilim/mirrors/Detector.java	/^    public static final int PAUSABLE_METHOD_FOUND = 1; \/\/ known to be pausable$/;"	f	class:Detector
PAUSABLE_SUB	src/kilim/analysis/BasicBlock.java	/^    static final int              PAUSABLE_SUB           = 1 << 8;$/;"	f	class:BasicBlock
PAUSE_STATE	src/kilim/Fiber.java	/^    private static final State PAUSE_STATE             = new State();$/;"	f	class:Fiber	file:
PAUSING__HAS_STATE	src/kilim/Fiber.java	/^    public static final int   PAUSING__HAS_STATE     = 3;$/;"	f	class:Fiber
PAUSING__NO_STATE	src/kilim/Fiber.java	/^    public static final int   PAUSING__NO_STATE      = 2;$/;"	f	class:Fiber
PROTOCOL	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      PROTOCOL                         = "HTTP\/1.1 ".getBytes();$/;"	f	class:HttpResponse
Pausable	src/kilim/Pausable.java	/^    private Pausable() {}$/;"	m	class:Pausable	file:
Pausable	src/kilim/Pausable.java	/^    private Pausable(String msg) {}$/;"	m	class:Pausable	file:
Pausable	src/kilim/Pausable.java	/^public class Pausable extends Exception {$/;"	c
PauseReason	src/kilim/PauseReason.java	/^public interface PauseReason {$/;"	i
Ping	src/examples/Ping.java	/^public class Ping {$/;"	c
Ping	src/kilim/examples/Ping.java	/^public class Ping {$/;"	c
Post	src/examples/Tree.java	/^    Post(Tree t) {_t = t;}$/;"	m	class:Post
Post	src/examples/Tree.java	/^class Post extends Generator<String> {$/;"	c
Post	src/kilim/examples/Tree.java	/^    Post(Tree t) {_t = t;}$/;"	m	class:Post
Post	src/kilim/examples/Tree.java	/^class Post extends Generator<String> {$/;"	c
Pre	src/examples/Tree.java	/^    Pre(Tree t) {_t = t;}$/;"	m	class:Pre
Pre	src/examples/Tree.java	/^class Pre extends Generator<String> {$/;"	c
Pre	src/kilim/examples/Tree.java	/^    Pre(Tree t) {_t = t;}$/;"	m	class:Pre
Pre	src/kilim/examples/Tree.java	/^class Pre extends Generator<String> {$/;"	c
Range	src/kilim/analysis/Range.java	/^    public Range(int aFrom, int aTo) {$/;"	m	class:Range
Range	src/kilim/analysis/Range.java	/^public class Range {$/;"	c
ReentrantLock	src/kilim/ReentrantLock.java	/^    public ReentrantLock() {$/;"	m	class:ReentrantLock
ReentrantLock	src/kilim/ReentrantLock.java	/^    public ReentrantLock(boolean fair) {$/;"	m	class:ReentrantLock
ReentrantLock	src/kilim/ReentrantLock.java	/^public class ReentrantLock extends java.util.concurrent.locks.ReentrantLock {$/;"	c
Reflect	src/examples/Reflect.java	/^public class Reflect extends Task {$/;"	c
Reflect	src/kilim/examples/Reflect.java	/^public class Reflect extends Task {$/;"	c
RegistrationTask	src/kilim/nio/NioSelectorScheduler.java	/^        public RegistrationTask(Mailbox<SockEvent> ambx, Selector asel) {$/;"	m	class:NioSelectorScheduler.RegistrationTask
RegistrationTask	src/kilim/nio/NioSelectorScheduler.java	/^    public static class RegistrationTask extends Task {$/;"	c	class:NioSelectorScheduler
RingQueue	src/kilim/RingQueue.java	/^    public RingQueue(int initialSize) {$/;"	m	class:RingQueue
RingQueue	src/kilim/RingQueue.java	/^    public RingQueue(int initialSize, int maxSize) {$/;"	m	class:RingQueue
RingQueue	src/kilim/RingQueue.java	/^public class RingQueue<T> {$/;"	c
RuntimeClassMirror	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public RuntimeClassMirror(Class<?> clazz) {$/;"	m	class:RuntimeClassMirror
RuntimeClassMirror	src/kilim/mirrors/RuntimeClassMirrors.java	/^class RuntimeClassMirror implements ClassMirror {$/;"	c
RuntimeClassMirrors	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public RuntimeClassMirrors() {$/;"	m	class:RuntimeClassMirrors
RuntimeClassMirrors	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public RuntimeClassMirrors(ClassLoader cl) {$/;"	m	class:RuntimeClassMirrors
RuntimeClassMirrors	src/kilim/mirrors/RuntimeClassMirrors.java	/^public class RuntimeClassMirrors implements Mirrors {$/;"	c
RuntimeMethodMirror	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public RuntimeMethodMirror(Method method) {$/;"	m	class:RuntimeMethodMirror
RuntimeMethodMirror	src/kilim/mirrors/RuntimeClassMirrors.java	/^class RuntimeMethodMirror implements MethodMirror {$/;"	c
SEMI	src/kilim/http/HttpRequest.java	/^    static final byte  SEMI = (byte)';';$/;"	f	class:HttpRequest
SPACE_AVAILABLE	src/kilim/Cell.java	/^    public static final int SPACE_AVAILABLE = 1;$/;"	f	class:Cell
SPACE_AVAILABLE	src/kilim/Mailbox.java	/^    public static final int SPACE_AVAILABLE = 1;$/;"	f	class:Mailbox
STANDARD_DONT_CHECK_LIST	src/kilim/mirrors/Detector.java	/^    static final String[] STANDARD_DONT_CHECK_LIST = { "java.", "javax." };$/;"	f	class:Detector
STATE_CLASS	src/kilim/Constants.java	/^    String STATE_CLASS      = "kilim\/State";$/;"	f	interface:Constants
ST_ACCEPTED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_ACCEPTED                      = "202 Accepted\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_BAD_GATEWAY	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_BAD_GATEWAY                   = "502 Bad Gateway\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_BAD_REQUEST	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_BAD_REQUEST                   = "400 Bad Request\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_CONFLICT	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_CONFLICT                      = "409 Conflict\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_CONTINUE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_CONTINUE                      = "100 Continue\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_CREATED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_CREATED                       = "201 Created\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_EXPECTATION_FAILED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_EXPECTATION_FAILED            = "417 Expectation Failed\\r\\n"$/;"	f	class:HttpResponse
ST_FORBIDDEN	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_FORBIDDEN                     = "403 Forbidden\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_FOUND	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_FOUND                         = "302 Found\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_GATEWAY_TIMEOUT	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_GATEWAY_TIMEOUT               = "504 Gateway Time-out\\r\\n"$/;"	f	class:HttpResponse
ST_GONE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_GONE                          = "410 Gone\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_HTTP_VERSION_NOT_SUPPORTED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_HTTP_VERSION_NOT_SUPPORTED    = "505 HTTP Version not supported\\r\\n"$/;"	f	class:HttpResponse
ST_INTERNAL_SERVER_ERROR	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_INTERNAL_SERVER_ERROR         = "500 Internal Server Error\\r\\n"$/;"	f	class:HttpResponse
ST_LENGTH_REQUIRED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_LENGTH_REQUIRED               = "411 Length Required\\r\\n"$/;"	f	class:HttpResponse
ST_METHOD_NOT_ALLOWED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_METHOD_NOT_ALLOWED            = "405 Method Not Allowed\\r\\n"$/;"	f	class:HttpResponse
ST_MOVED_PERMANENTLY	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_MOVED_PERMANENTLY             = "301 Moved Permanently\\r\\n"$/;"	f	class:HttpResponse
ST_MULTIPLE_CHOICES	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_MULTIPLE_CHOICES              = "300 Multiple Choices\\r\\n"$/;"	f	class:HttpResponse
ST_NON_AUTHORITATIVE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_NON_AUTHORITATIVE             = "203 Non-Authoritative Information\\r\\n"$/;"	f	class:HttpResponse
ST_NOT_ACCEPTABLE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_NOT_ACCEPTABLE                = "406 Not Acceptable\\r\\n"$/;"	f	class:HttpResponse
ST_NOT_FOUND	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_NOT_FOUND                     = "404 Not Found\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_NOT_IMPLEMENTED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_NOT_IMPLEMENTED               = "501 Not Implemented\\r\\n"$/;"	f	class:HttpResponse
ST_NOT_MODIFIED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_NOT_MODIFIED                  = "304 Not Modified\\r\\n"$/;"	f	class:HttpResponse
ST_NO_CONTENT	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_NO_CONTENT                    = "204 No Content\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_OK	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_OK                            = "200 OK\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_PARTIAL_CONTENT	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_PARTIAL_CONTENT               = "206 Partial Content\\r\\n"$/;"	f	class:HttpResponse
ST_PAYMENT_REQUIRED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_PAYMENT_REQUIRED              = "402 Payment Required\\r\\n"$/;"	f	class:HttpResponse
ST_PRECONDITION_FAILED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_PRECONDITION_FAILED           = "412 Precondition Failed\\r\\n"$/;"	f	class:HttpResponse
ST_PROXY_AUTHENTICATION_REQUIRED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_PROXY_AUTHENTICATION_REQUIRED = "407 Proxy Authentication Required\\r\\n"$/;"	f	class:HttpResponse
ST_REQUEST_ENTITY_TOO_LARGE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_REQUEST_ENTITY_TOO_LARGE      = "413 Request Entity Too Large\\r\\n"$/;"	f	class:HttpResponse
ST_REQUEST_RANGE_NOT_SATISFIABLE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_REQUEST_RANGE_NOT_SATISFIABLE = "416 Requested range not satisfiable\\r\\n"$/;"	f	class:HttpResponse
ST_REQUEST_TIMEOUT	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_REQUEST_TIMEOUT               = "408 Request Time-out\\r\\n"$/;"	f	class:HttpResponse
ST_REQUEST_URI_TOO_LONG	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_REQUEST_URI_TOO_LONG          = "414 Request-URI Too Large\\r\\n"$/;"	f	class:HttpResponse
ST_RESET_CONTENT	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_RESET_CONTENT                 = "205 Reset Content\\r\\n"$/;"	f	class:HttpResponse
ST_SEE_OTHER	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_SEE_OTHER                     = "303 See Other\\r\\n".getBytes();$/;"	f	class:HttpResponse
ST_SERVICE_UNAVAILABLE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_SERVICE_UNAVAILABLE           = "503 Service Unavailable\\r\\n"$/;"	f	class:HttpResponse
ST_SWITCHING_PROTOCOLS	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_SWITCHING_PROTOCOLS           = "101 Switching Protocols\\r\\n"$/;"	f	class:HttpResponse
ST_TEMPORARY_REDIRECT	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_TEMPORARY_REDIRECT            = "307 Temporary Redirect\\r\\n"$/;"	f	class:HttpResponse
ST_UNAUTHORIZED	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_UNAUTHORIZED                  = "401 Unauthorized\\r\\n"$/;"	f	class:HttpResponse
ST_UNSUPPORTED_MEDIA_TYPE	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_UNSUPPORTED_MEDIA_TYPE        = "415 Unsupported Media Type\\r\\n"$/;"	f	class:HttpResponse
ST_USE_PROXY	src/kilim/http/HttpResponse.java	/^    public static final byte[]                      ST_USE_PROXY                     = "305 Use Proxy\\r\\n".getBytes();$/;"	f	class:HttpResponse
SUBROUTINE_CLAIMED	src/kilim/analysis/BasicBlock.java	/^    static final int              SUBROUTINE_CLAIMED = 1 << 1;$/;"	f	class:BasicBlock
SUB_BLOCK	src/kilim/analysis/BasicBlock.java	/^    static final int              SUB_BLOCK          = 1 << 6;$/;"	f	class:BasicBlock
Scheduler	src/kilim/Scheduler.java	/^    protected Scheduler() {}$/;"	m	class:Scheduler
Scheduler	src/kilim/Scheduler.java	/^    public Scheduler(int numThreads) {$/;"	m	class:Scheduler
Scheduler	src/kilim/Scheduler.java	/^public class Scheduler {$/;"	c
SelectorThread	src/kilim/nio/NioSelectorScheduler.java	/^        public SelectorThread(NioSelectorScheduler scheduler) {$/;"	m	class:NioSelectorScheduler.SelectorThread
SelectorThread	src/kilim/nio/NioSelectorScheduler.java	/^    static class SelectorThread extends Thread {$/;"	c	class:NioSelectorScheduler
Server	src/examples/Ping.java	/^    public static class Server extends SessionTask {$/;"	c	class:Ping
Server	src/kilim/examples/Ping.java	/^    public static class Server extends SessionTask {$/;"	c	class:Ping
Service	src/cn/hnu/eg/sys/Service.java	/^public class Service {$/;"	c
SessionTask	src/kilim/nio/SessionTask.java	/^public class SessionTask extends Task {$/;"	c
ShutdownException	src/kilim/ShutdownException.java	/^  public ShutdownException() {$/;"	m	class:ShutdownException
ShutdownException	src/kilim/ShutdownException.java	/^public class ShutdownException extends Exception {$/;"	c
Signal	src/cn/hnu/eg/util/Signal.java	/^public enum Signal{$/;"	g
SimpleHttpServer	src/examples/SimpleHttpServer.java	/^public class SimpleHttpServer {$/;"	c
SimpleHttpServer	src/kilim/examples/SimpleHttpServer.java	/^public class SimpleHttpServer {$/;"	c
SimpleHttpSession	src/examples/SimpleHttpServer.java	/^    public static class SimpleHttpSession extends HttpSession {$/;"	c	class:SimpleHttpServer
SimpleHttpSession	src/kilim/examples/SimpleHttpServer.java	/^    public static class SimpleHttpSession extends HttpSession {$/;"	c	class:SimpleHttpServer
SimpleTask	src/examples/SimpleTask.java	/^public class SimpleTask extends Task {$/;"	c
SimpleTask	src/kilim/examples/SimpleTask.java	/^public class SimpleTask extends Task {$/;"	c
SimpleTask2	src/examples/SimpleTask2.java	/^public class SimpleTask2 extends Task {$/;"	c
SimpleTask2	src/kilim/examples/SimpleTask2.java	/^public class SimpleTask2 extends Task {$/;"	c
SockEvent	src/kilim/nio/SockEvent.java	/^  public SockEvent(Mailbox<SockEvent> aReplyTo, AbstractSelectableChannel ach, int ops) {$/;"	m	class:SockEvent
SockEvent	src/kilim/nio/SockEvent.java	/^public class SockEvent {$/;"	c
SolutionPath	src/cn/hnu/eg/util/EasyGraphConstant.java	/^	public final static String SolutionPath = "\/home\/dodoro\/EasyGraph\/Solution";$/;"	f	interface:EasyGraphConstant
SourceInfo	src/kilim/tools/Javac.java	/^        public SourceInfo(String nm, String code) {$/;"	m	class:Javac.SourceInfo
SourceInfo	src/kilim/tools/Javac.java	/^    private static class SourceInfo {$/;"	c	class:Javac
State	src/cn/hnu/eg/util/State.java	/^public enum State {$/;"	g
State	src/kilim/State.java	/^public class State {$/;"	c
StringList	src/kilim/tools/Asm.java	/^class StringList extends ArrayList<String> {$/;"	c
TABLESWITCH	src/kilim/tools/Asm.java	/^    private final static int                      TABLESWITCH    = 4;$/;"	f	class:Asm	file:
TASK_CLASS	src/kilim/Constants.java	/^    String TASK_CLASS       = "kilim\/Task";$/;"	f	interface:Constants
TDOUBLE	src/kilim/analysis/CallWeaver.java	/^    static final int      TDOUBLE   = 3;$/;"	f	class:VMType
TFLOAT	src/kilim/analysis/CallWeaver.java	/^    static final int      TFLOAT    = 4;$/;"	f	class:VMType
THROWABLE_CLASS	src/kilim/Constants.java	/^    String THROWABLE_CLASS  = "java\/lang\/Throwable";$/;"	f	interface:Constants
TIMED_OUT	src/kilim/Cell.java	/^    public static final int TIMED_OUT = 3;$/;"	f	class:Cell
TIMED_OUT	src/kilim/Mailbox.java	/^    public static final int TIMED_OUT = 3;$/;"	f	class:Mailbox
TINT	src/kilim/analysis/CallWeaver.java	/^    static final int      TINT      = 1;$/;"	f	class:VMType
TLONG	src/kilim/analysis/CallWeaver.java	/^    static final int      TLONG     = 2;$/;"	f	class:VMType
TOBJECT	src/kilim/analysis/CallWeaver.java	/^    static final int      TOBJECT   = 0;$/;"	f	class:VMType
TYPE	src/kilim/tools/Asm.java	/^    private final static int                      TYPE           = 8;$/;"	f	class:Asm	file:
Task	src/kilim/Task.java	/^    public Task() {$/;"	m	class:Task
Task	src/kilim/Task.java	/^public abstract class Task implements EventSubscriber {$/;"	c
TaskDoneReason	src/kilim/TaskDoneReason.java	/^    TaskDoneReason(Object o) {exitObj = o;}$/;"	m	class:TaskDoneReason
TaskDoneReason	src/kilim/TaskDoneReason.java	/^public class TaskDoneReason implements PauseReason {$/;"	c
TaskGroup	src/kilim/TaskGroup.java	/^public class TaskGroup extends Task {$/;"	c
TestCalculator	src/examples/TestCalculator.java	/^public class TestCalculator {$/;"	c
TestConcurrencyWithJava	src/examples/TestConcurrencyWithJava.java	/^	public TestConcurrencyWithJava(int thread_id) {$/;"	m	class:TestConcurrencyWithJava
TestConcurrencyWithJava	src/examples/TestConcurrencyWithJava.java	/^public class TestConcurrencyWithJava implements Runnable{$/;"	c
TestConcurrencyWithKilim	src/examples/TestConcurrencyWithKilim.java	/^	public TestConcurrencyWithKilim(int id){$/;"	m	class:TestConcurrencyWithKilim
TestConcurrencyWithKilim	src/examples/TestConcurrencyWithKilim.java	/^public class TestConcurrencyWithKilim extends Task{$/;"	c
TestHelloWorld	src/examples/TestHelloWorld.java	/^public class TestHelloWorld {$/;"	c
TimedTask	src/examples/TimedTask.java	/^public class TimedTask extends Task {$/;"	c
TimedTask	src/kilim/examples/TimedTask.java	/^public class TimedTask extends Task {$/;"	c
Tree	src/examples/Tree.java	/^    Tree(String s) {_val = s;}$/;"	m	class:Tree
Tree	src/examples/Tree.java	/^    Tree(String s, Tree l, Tree r) {this(s); _left = l; _right = r;}$/;"	m	class:Tree
Tree	src/examples/Tree.java	/^public class Tree {$/;"	c
Tree	src/kilim/examples/Tree.java	/^    Tree(String s) {_val = s;}$/;"	m	class:Tree
Tree	src/kilim/examples/Tree.java	/^    Tree(String s, Tree l, Tree r) {this(s); _left = l; _right = r;}$/;"	m	class:Tree
Tree	src/kilim/examples/Tree.java	/^public class Tree {$/;"	c
TypeDesc	src/kilim/analysis/TypeDesc.java	/^public class TypeDesc {$/;"	c
UTF8	src/kilim/http/HttpRequestParser.java	/^  public static final Charset UTF8 = Charset.forName("UTF-8");$/;"	f	class:HttpRequestParser
Usage	src/kilim/analysis/Usage.java	/^    public Usage(int numLocals) {$/;"	m	class:Usage
Usage	src/kilim/analysis/Usage.java	/^public class Usage {$/;"	c
Utils	src/cn/hnu/eg/util/test/Utils.java	/^public class Utils {$/;"	c
Utils	src/kilim/analysis/Utils.java	/^public class Utils {$/;"	c
Utils	src/kilim/http/Utils.java	/^public class Utils {$/;"	c
VAR	src/kilim/tools/Asm.java	/^    private final static int                      VAR            = 1;$/;"	f	class:Asm	file:
VMType	src/kilim/analysis/CallWeaver.java	/^class VMType {$/;"	c
V_UNDEFINED	src/kilim/analysis/Value.java	/^    public static Value V_UNDEFINED = new Value(0, D_UNDEFINED, NO_VAL); $/;"	f	class:Value
ValInfo	src/kilim/analysis/CallWeaver.java	/^    ValInfo(Value v) {$/;"	m	class:ValInfo
ValInfo	src/kilim/analysis/CallWeaver.java	/^class ValInfo implements Comparable<ValInfo> {$/;"	c
ValInfoList	src/kilim/analysis/CallWeaver.java	/^class ValInfoList extends ArrayList<ValInfo> {$/;"	c
Value	src/kilim/analysis/Value.java	/^    private Value(int aPos, String aDesc, Object aConst) {$/;"	m	class:Value	file:
Value	src/kilim/analysis/Value.java	/^    private Value(int newNumSites, int[] newSites, String newType, Object newConst) {$/;"	m	class:Value	file:
Value	src/kilim/analysis/Value.java	/^public class Value {$/;"	c
Vertex	src/cn/hnu/eg/base/Vertex.java	/^public abstract class Vertex extends Task {$/;"	c
WOVEN_FIELD	src/kilim/Constants.java	/^    String  WOVEN_FIELD     = "$isWoven";$/;"	f	interface:Constants
Weaver	src/kilim/tools/Weaver.java	/^    public Weaver() {$/;"	m	class:Weaver
Weaver	src/kilim/tools/Weaver.java	/^    public Weaver(ClassLoader cl) {$/;"	m	class:Weaver
Weaver	src/kilim/tools/Weaver.java	/^public class Weaver {$/;"	c
WeavingClassLoader	src/kilim/WeavingClassLoader.java	/^    public WeavingClassLoader(ClassLoader parent) {$/;"	m	class:WeavingClassLoader
WeavingClassLoader	src/kilim/WeavingClassLoader.java	/^public class WeavingClassLoader extends KilimClassLoader {$/;"	c
WorkerThread	src/kilim/WorkerThread.java	/^    WorkerThread(Scheduler ascheduler) {$/;"	m	class:WorkerThread
WorkerThread	src/kilim/WorkerThread.java	/^public class WorkerThread extends Thread {$/;"	c
YIELD_COUNT	src/kilim/nio/EndPoint.java	/^    static final int                 YIELD_COUNT = Integer.parseInt(System.getProperty("kilim.nio.yieldCount", "4"));$/;"	f	class:EndPoint
YieldReason	src/kilim/YieldReason.java	/^public class YieldReason implements PauseReason {$/;"	c
_http_date_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_date_actions[] = init__http_date_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_date_index_offsets	src/kilim/http/HttpRequestParser.java	/^private static final short _http_date_index_offsets[] = init__http_date_index_offsets_0();$/;"	f	class:HttpRequestParser	file:
_http_date_key_offsets	src/kilim/http/HttpRequestParser.java	/^private static final short _http_date_key_offsets[] = init__http_date_key_offsets_0();$/;"	f	class:HttpRequestParser	file:
_http_date_range_lengths	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_date_range_lengths[] = init__http_date_range_lengths_0();$/;"	f	class:HttpRequestParser	file:
_http_date_single_lengths	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_date_single_lengths[] = init__http_date_single_lengths_0();$/;"	f	class:HttpRequestParser	file:
_http_date_trans_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_date_trans_actions[] = init__http_date_trans_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_date_trans_keys	src/kilim/http/HttpRequestParser.java	/^private static final char _http_date_trans_keys[] = init__http_date_trans_keys_0();$/;"	f	class:HttpRequestParser	file:
_http_date_trans_targs	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_date_trans_targs[] = init__http_date_trans_targs_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_keywords_actions[] = init__http_keywords_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_eof_trans	src/kilim/http/HttpRequestParser.java	/^private static final short _http_keywords_eof_trans[] = init__http_keywords_eof_trans_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_from_state_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_keywords_from_state_actions[] = init__http_keywords_from_state_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_index_offsets	src/kilim/http/HttpRequestParser.java	/^private static final short _http_keywords_index_offsets[] = init__http_keywords_index_offsets_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_key_offsets	src/kilim/http/HttpRequestParser.java	/^private static final short _http_keywords_key_offsets[] = init__http_keywords_key_offsets_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_range_lengths	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_keywords_range_lengths[] = init__http_keywords_range_lengths_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_single_lengths	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_keywords_single_lengths[] = init__http_keywords_single_lengths_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_to_state_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_keywords_to_state_actions[] = init__http_keywords_to_state_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_trans_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_keywords_trans_actions[] = init__http_keywords_trans_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_trans_keys	src/kilim/http/HttpRequestParser.java	/^private static final char _http_keywords_trans_keys[] = init__http_keywords_trans_keys_0();$/;"	f	class:HttpRequestParser	file:
_http_keywords_trans_targs	src/kilim/http/HttpRequestParser.java	/^private static final short _http_keywords_trans_targs[] = init__http_keywords_trans_targs_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_parser_actions[] = init__http_parser_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_index_offsets	src/kilim/http/HttpRequestParser.java	/^private static final short _http_parser_index_offsets[] = init__http_parser_index_offsets_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_indicies	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_parser_indicies[] = init__http_parser_indicies_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_key_offsets	src/kilim/http/HttpRequestParser.java	/^private static final short _http_parser_key_offsets[] = init__http_parser_key_offsets_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_range_lengths	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_parser_range_lengths[] = init__http_parser_range_lengths_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_single_lengths	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_parser_single_lengths[] = init__http_parser_single_lengths_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_trans_actions	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_parser_trans_actions[] = init__http_parser_trans_actions_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_trans_keys	src/kilim/http/HttpRequestParser.java	/^private static final char _http_parser_trans_keys[] = init__http_parser_trans_keys_0();$/;"	f	class:HttpRequestParser	file:
_http_parser_trans_targs	src/kilim/http/HttpRequestParser.java	/^private static final byte _http_parser_trans_targs[] = init__http_parser_trans_targs_0();$/;"	f	class:HttpRequestParser	file:
_left	src/examples/Tree.java	/^    Tree _left;$/;"	f	class:Tree
_left	src/kilim/examples/Tree.java	/^    Tree _left;$/;"	f	class:Tree
_right	src/examples/Tree.java	/^    Tree _right;$/;"	f	class:Tree
_right	src/kilim/examples/Tree.java	/^    Tree _right;$/;"	f	class:Tree
_runExecute	src/kilim/Task.java	/^    public void _runExecute(WorkerThread thread) throws NotPausable {$/;"	m	class:Task
_scheduler	src/kilim/nio/NioSelectorScheduler.java	/^        NioSelectorScheduler _scheduler;$/;"	f	class:NioSelectorScheduler.SelectorThread
_t	src/examples/Tree.java	/^    Tree _t;$/;"	f	class:Post
_t	src/examples/Tree.java	/^    Tree _t;$/;"	f	class:Pre
_t	src/kilim/examples/Tree.java	/^    Tree _t;$/;"	f	class:Post
_t	src/kilim/examples/Tree.java	/^    Tree _t;$/;"	f	class:Pre
_val	src/examples/Tree.java	/^    public String _val;$/;"	f	class:Tree
_val	src/kilim/examples/Tree.java	/^    public String _val;$/;"	f	class:Tree
abbrev	src/kilim/analysis/CallWeaver.java	/^    static final String[] abbrev    = { "O", "I", "L", "D", "F" };$/;"	f	class:VMType
absorb	src/kilim/analysis/Usage.java	/^    void absorb(Usage succ) {$/;"	m	class:Usage
accept	src/kilim/analysis/ClassWeaver.java	/^    private void accept(final ClassVisitor cv) {$/;"	m	class:ClassWeaver	file:
accept	src/kilim/analysis/MethodWeaver.java	/^    public void accept(ClassVisitor cv) {$/;"	m	class:MethodWeaver
accept	src/kilim/analysis/MethodWeaver.java	/^    void accept(MethodVisitor mv) {$/;"	m	class:MethodWeaver
accept	src/kilim/analysis/NopInsn.java	/^    public void accept(MethodVisitor mv) {$/;"	m	class:NopInsn
acceptAnnotation	src/kilim/analysis/MethodFlow.java	/^    public static void acceptAnnotation(final AnnotationVisitor av, final String name,$/;"	m	class:MethodFlow
add	src/kilim/TaskGroup.java	/^    public void add(Task t) {$/;"	m	class:TaskGroup
add	src/kilim/http/IntList.java	/^  public void add(int element) {$/;"	m	class:IntList
addClassInfo	src/kilim/analysis/ClassWeaver.java	/^    void addClassInfo(ClassInfo ci) {$/;"	m	class:ClassWeaver
addClasses	src/kilim/tools/Javac.java	/^    private static void addClasses(List<ClassInfo> ret, String pkgName, File dir)$/;"	m	class:Javac	file:
addField	src/kilim/http/HttpRequest.java	/^    public void addField(String key, int valRange) {$/;"	m	class:HttpRequest
addField	src/kilim/http/HttpResponse.java	/^    public HttpResponse addField(String key, String value) {$/;"	m	class:HttpResponse
addFollower	src/kilim/analysis/BasicBlock.java	/^    void addFollower(BasicBlock bb) {$/;"	m	class:BasicBlock
addInlinedBlock	src/kilim/analysis/MethodFlow.java	/^    void addInlinedBlock(BasicBlock bb) {$/;"	m	class:MethodFlow
addMsgAvailableListener	src/kilim/Cell.java	/^    public synchronized void addMsgAvailableListener(EventSubscriber msgSub) {$/;"	m	class:Cell
addMsgAvailableListener	src/kilim/Mailbox.java	/^    public synchronized void addMsgAvailableListener(EventSubscriber msgSub) {$/;"	m	class:Mailbox
addRunnable	src/kilim/nio/NioSelectorScheduler.java	/^    synchronized void addRunnable(Task t) {$/;"	m	class:NioSelectorScheduler
addRunnableTask	src/kilim/WorkerThread.java	/^    public synchronized void addRunnableTask(Task t) {$/;"	m	class:WorkerThread
addSpaceAvailableListener	src/kilim/Cell.java	/^    public synchronized void addSpaceAvailableListener(EventSubscriber spcSub) {$/;"	m	class:Cell
addSpaceAvailableListener	src/kilim/Mailbox.java	/^    public synchronized void addSpaceAvailableListener(EventSubscriber spcSub) {$/;"	m	class:Mailbox
addSuccessor	src/kilim/analysis/BasicBlock.java	/^    void addSuccessor(BasicBlock bb) {$/;"	m	class:BasicBlock
addSuper	src/kilim/analysis/AsmDetector.java	/^        public void addSuper(String superName) {$/;"	m	class:AsmDetector.ClassCache
addTo	src/kilim/analysis/Value.java	/^    private int addTo(int[] newSites, int site) {$/;"	m	class:Value	file:
addWaitingThread	src/kilim/Scheduler.java	/^    void addWaitingThread(WorkerThread wt) {$/;"	m	class:Scheduler
addedTasksMB	src/kilim/TaskGroup.java	/^    private Mailbox<Task> addedTasksMB = new Mailbox<Task>();$/;"	f	class:TaskGroup	file:
allThreads	src/kilim/Scheduler.java	/^    public LinkedList<WorkerThread> allThreads = new LinkedList<WorkerThread>();$/;"	f	class:Scheduler
allocVar	src/kilim/analysis/CallWeaver.java	/^    private int allocVar(int size) {$/;"	m	class:CallWeaver	file:
analyze	src/kilim/analysis/ClassFlow.java	/^    public ArrayList<MethodFlow> analyze(boolean forceAnalysis) throws KilimException {$/;"	m	class:ClassFlow
analyze	src/kilim/analysis/MethodFlow.java	/^    public void analyze() throws KilimException {$/;"	m	class:MethodFlow
analyzeClass	src/kilim/tools/FlowAnalyzer.java	/^    private static void analyzeClass(String className, Detector detector) {$/;"	m	class:FlowAnalyzer	file:
analyzeJar	src/kilim/tools/FlowAnalyzer.java	/^    public static void analyzeJar(String jarFile, Detector detector) {$/;"	m	class:FlowAnalyzer
annotationPattern	src/kilim/tools/Asm.java	/^    static Pattern annotationPattern = Pattern.compile(".annotation +((visible) )?([\\\\w\/;]+)");$/;"	f	class:Asm
answer	src/examples/Calculation.java	/^	private BigDecimal answer;$/;"	f	class:Calculation	file:
array	src/kilim/http/IntList.java	/^  public int[] array;$/;"	f	class:IntList
assignCatchHandlers	src/kilim/analysis/MethodFlow.java	/^    private void assignCatchHandlers() {$/;"	m	class:MethodFlow	file:
assignRegisters	src/kilim/analysis/CallWeaver.java	/^    private void assignRegisters() {$/;"	m	class:CallWeaver	file:
b0	src/kilim/http/HttpRequest.java	/^    static final byte  b0 = (byte) '0', b9 = (byte) '9';$/;"	f	class:HttpRequest
b9	src/kilim/http/HttpRequest.java	/^    static final byte  b0 = (byte) '0', b9 = (byte) '9';$/;"	f	class:HttpRequest
bA	src/kilim/http/HttpRequest.java	/^    static final byte  bA = (byte) 'A', bF = (byte) 'F';$/;"	f	class:HttpRequest
bF	src/kilim/http/HttpRequest.java	/^    static final byte  bA = (byte) 'A', bF = (byte) 'F';$/;"	f	class:HttpRequest
ba	src/kilim/http/HttpRequest.java	/^    static final byte  ba = (byte) 'a', bf = (byte) 'f';$/;"	f	class:HttpRequest
baseDirectory	src/examples/HttpFileServer.java	/^    public static File   baseDirectory;$/;"	f	class:HttpFileServer
baseDirectory	src/kilim/examples/HttpFileServer.java	/^    public static File   baseDirectory;$/;"	f	class:HttpFileServer
baseDirectoryName	src/examples/HttpFileServer.java	/^    public static String baseDirectoryName;$/;"	f	class:HttpFileServer
baseDirectoryName	src/kilim/examples/HttpFileServer.java	/^    public static String baseDirectoryName;$/;"	f	class:HttpFileServer
basicBlocks	src/kilim/analysis/MethodFlow.java	/^    private BBList      basicBlocks;$/;"	f	class:MethodFlow	file:
bb	src/kilim/analysis/CallWeaver.java	/^    BasicBlock           bb;$/;"	f	class:CallWeaver
begin	src/kilim/Fiber.java	/^    public final Fiber begin() {$/;"	m	class:Fiber
bf	src/kilim/http/HttpRequest.java	/^    static final byte  ba = (byte) 'a', bf = (byte) 'f';$/;"	f	class:HttpRequest
blockingWait	src/kilim/Cell.java	/^        public void blockingWait(final long timeoutMillis) {$/;"	m	class:Cell.BlockingSubscriber
blockingWait	src/kilim/Mailbox.java	/^        public void blockingWait(final long timeoutMillis) {$/;"	m	class:Mailbox.BlockingSubscriber
bodyStream	src/kilim/http/HttpResponse.java	/^    public ExposedBaos                              bodyStream;$/;"	f	class:HttpResponse
buffer	src/kilim/http/HttpMsg.java	/^  ByteBuffer buffer;$/;"	f	class:HttpMsg
bufferedLine	src/kilim/tools/Asm.java	/^    private Line                    line, bufferedLine;$/;"	f	class:Asm	file:
buildBasicBlocks	src/kilim/analysis/MethodFlow.java	/^    void buildBasicBlocks() {$/;"	m	class:MethodFlow
byteCache	src/kilim/http/HttpResponse.java	/^    public static ConcurrentHashMap<String, byte[]> byteCache                        = new ConcurrentHashMap<String, byte[]>();$/;"	f	class:HttpResponse
bytes	src/kilim/analysis/ClassInfo.java	/^    public byte[] bytes;$/;"	f	class:ClassInfo
cache	src/kilim/analysis/AsmDetector.java	/^    private static ClassCache cache(String className, ClassNode cn) {$/;"	m	class:AsmDetector	file:
cachedClasses	src/kilim/mirrors/CachedClassMirrors.java	/^    ConcurrentHashMap<String,ClassMirror> cachedClasses = new ConcurrentHashMap<String, ClassMirror>();$/;"	f	class:CachedClassMirrors
cachedClasses	src/kilim/mirrors/RuntimeClassMirrors.java	/^    Map<String, RuntimeClassMirror> cachedClasses = Collections$/;"	f	class:RuntimeClassMirrors
callLabel	src/kilim/analysis/CallWeaver.java	/^    LabelNode            callLabel;$/;"	f	class:CallWeaver
callWeavers	src/kilim/analysis/MethodWeaver.java	/^    private ArrayList<CallWeaver> callWeavers = new ArrayList<CallWeaver>(5);$/;"	f	class:MethodWeaver	file:
cancel	src/kilim/Mailbox.java	/^    public void cancel() {$/;"	m	class:EmptySet_MsgAvListener
casePattern	src/kilim/tools/Asm.java	/^    static final Pattern casePattern       = Pattern.compile("(\\\\w+) *: *(\\\\w+)");$/;"	f	class:Asm
catchBB	src/kilim/analysis/Handler.java	/^    public BasicBlock catchBB;$/;"	f	class:Handler
catchPattern	src/kilim/tools/Asm.java	/^    static Pattern catchPattern      = Pattern.compile(".catch +(" + classNamePatternStr + ") +from +([\\\\w]+) +to +([\\\\w]+) +using +([\\\\w]+)");$/;"	f	class:Asm
category	src/kilim/analysis/CallWeaver.java	/^    static final int[]    category  = { 1, 1, 2, 2, 1 };$/;"	f	class:VMType
category	src/kilim/analysis/Value.java	/^    public int category() {$/;"	m	class:Value
caughtExceptionType	src/kilim/analysis/BasicBlock.java	/^    String                caughtExceptionType;$/;"	f	class:BasicBlock
ch	src/kilim/nio/SockEvent.java	/^  public AbstractSelectableChannel ch;$/;"	f	class:SockEvent
changeJSR_RET_toGOTOs	src/kilim/analysis/BasicBlock.java	/^    void changeJSR_RET_toGOTOs() throws KilimException {$/;"	m	class:BasicBlock
changeLastInsnToGOTO	src/kilim/analysis/BasicBlock.java	/^    void changeLastInsnToGOTO(LabelNode label) {$/;"	m	class:BasicBlock
check	src/examples/HttpFileServer.java	/^    public boolean check(HttpResponse resp, File file) throws IOException, Pausable {$/;"	m	class:HttpFileServer
check	src/kilim/examples/HttpFileServer.java	/^    public boolean check(HttpResponse resp, File file) throws IOException, Pausable {$/;"	m	class:HttpFileServer
checkKill	src/kilim/Task.java	/^    public void checkKill() {$/;"	m	class:Task
checkLabelDeclarations	src/kilim/tools/Asm.java	/^    private void checkLabelDeclarations() {$/;"	m	class:Asm	file:
checkNoBasicBlockLeftBehind	src/kilim/analysis/MethodFlow.java	/^    private boolean checkNoBasicBlockLeftBehind() { \/\/ like "no child left behind"$/;"	m	class:MethodFlow	file:
checkPausableJSR	src/kilim/analysis/BasicBlock.java	/^    void checkPausableJSR() throws KilimException {$/;"	m	class:BasicBlock
checkStatus	src/kilim/analysis/MethodFlow.java	/^    private void checkStatus(String superClassName, String methodName, String desc) throws KilimException {$/;"	m	class:MethodFlow	file:
checkType	src/kilim/analysis/Frame.java	/^    private boolean checkType(String desc) {$/;"	m	class:Frame	file:
checkcast	src/kilim/analysis/CallWeaver.java	/^    private void checkcast(MethodVisitor mv, Value v) {$/;"	m	class:CallWeaver	file:
chooseCatchHandlers	src/kilim/analysis/BasicBlock.java	/^    public void chooseCatchHandlers(ArrayList<Handler> handlerList) {$/;"	m	class:BasicBlock
classCacheMap	src/kilim/analysis/AsmDetector.java	/^    static HashMap<String, ClassCache> classCacheMap= new HashMap<String, ClassCache>();$/;"	f	class:AsmDetector
classDesc	src/kilim/analysis/ClassFlow.java	/^    String                classDesc;$/;"	f	class:ClassFlow
classFlow	src/kilim/analysis/ClassWeaver.java	/^    public ClassFlow classFlow;$/;"	f	class:ClassWeaver
classFlow	src/kilim/analysis/MethodFlow.java	/^    ClassFlow                  classFlow;$/;"	f	class:MethodFlow
classForName	src/kilim/mirrors/CachedClassMirrors.java	/^    public ClassMirror classForName(String className)$/;"	m	class:CachedClassMirrors
classForName	src/kilim/mirrors/Detector.java	/^    public ClassMirror classForName(String className) throws ClassMirrorNotFoundException {$/;"	m	class:Detector
classForName	src/kilim/mirrors/Mirrors.java	/^	abstract public ClassMirror classForName(String className)$/;"	m	interface:Mirrors
classForName	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public ClassMirror classForName(String className) throws ClassMirrorNotFoundException {$/;"	m	class:RuntimeClassMirrors
classForNames	src/kilim/mirrors/Detector.java	/^    public ClassMirror[] classForNames(String[] classNames) throws ClassMirrorNotFoundException {$/;"	m	class:Detector
classInfoList	src/kilim/analysis/ClassWeaver.java	/^    List<ClassInfo> classInfoList = new LinkedList<ClassInfo>();$/;"	f	class:ClassWeaver
classLoader	src/kilim/analysis/ClassWeaver.java	/^    private final ClassLoader classLoader;$/;"	f	class:ClassWeaver	file:
classLoader	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public final KilimClassLoader classLoader;$/;"	f	class:RuntimeClassMirrors
className	src/kilim/analysis/AsmDetector.java	/^        String className;$/;"	f	class:AsmDetector.ClassCache
className	src/kilim/analysis/ClassInfo.java	/^    public String className;$/;"	f	class:ClassInfo
className	src/kilim/tools/Asm.java	/^    private String                  className;$/;"	f	class:Asm	file:
className	src/kilim/tools/Javac.java	/^        public String className;$/;"	f	class:Javac.SourceInfo
classNamePatternStr	src/kilim/tools/Asm.java	/^    private static String classNamePatternStr = "[\\\\w\/$]+";$/;"	f	class:Asm	file:
classNameRegexp	src/kilim/tools/Javac.java	/^    static Pattern classNameRegexp = Pattern.compile("(?:class|interface) +(\\\\w+)");$/;"	f	class:Javac
classPattern	src/kilim/tools/Asm.java	/^    private static Pattern classPattern = Pattern.compile("\\\\.(class|interface) ((" + modifierPatternStr + ")*)(" + classNamePatternStr + ")$");$/;"	f	class:Asm	file:
classWeaver	src/kilim/analysis/MethodWeaver.java	/^    private ClassWeaver           classWeaver;$/;"	f	class:MethodWeaver	file:
clazz	src/kilim/mirrors/RuntimeClassMirrors.java	/^    private final Class<?> clazz;$/;"	f	class:RuntimeClassMirror	file:
clearPausing	src/kilim/Fiber.java	/^    void clearPausing() {$/;"	m	class:Fiber
clearStack	src/kilim/analysis/Frame.java	/^    void clearStack() {$/;"	m	class:Frame
clone	src/kilim/analysis/NopInsn.java	/^    public AbstractInsnNode clone(@SuppressWarnings("rawtypes") Map labels) {$/;"	m	class:NopInsn
close	src/kilim/nio/EndPoint.java	/^    public void close() {$/;"	m	class:EndPoint
close	src/kilim/nio/SessionTask.java	/^  public void close() {$/;"	m	class:SessionTask
cn.hnu.eg.base	src/cn/hnu/eg/base/Vertex.java	/^package cn.hnu.eg.base;$/;"	p
cn.hnu.eg.ds	src/cn/hnu/eg/ds/Graph.java	/^package cn.hnu.eg.ds;$/;"	p
cn.hnu.eg.sys	src/cn/hnu/eg/sys/InferiorMessage.java	/^package cn.hnu.eg.sys;$/;"	p
cn.hnu.eg.sys	src/cn/hnu/eg/sys/Master.java	/^package cn.hnu.eg.sys;$/;"	p
cn.hnu.eg.sys	src/cn/hnu/eg/sys/MaxValueVertex.java	/^package cn.hnu.eg.sys;$/;"	p
cn.hnu.eg.sys	src/cn/hnu/eg/sys/Message.java	/^package cn.hnu.eg.sys;$/;"	p
cn.hnu.eg.sys	src/cn/hnu/eg/sys/Service.java	/^package cn.hnu.eg.sys;$/;"	p
cn.hnu.eg.util	src/cn/hnu/eg/util/EasyGraphConstant.java	/^package cn.hnu.eg.util;$/;"	p
cn.hnu.eg.util	src/cn/hnu/eg/util/GraphGenerator.java	/^package cn.hnu.eg.util;$/;"	p
cn.hnu.eg.util	src/cn/hnu/eg/util/Signal.java	/^package cn.hnu.eg.util;$/;"	p
cn.hnu.eg.util	src/cn/hnu/eg/util/State.java	/^package cn.hnu.eg.util;$/;"	p
cn.hnu.eg.util.test	src/cn/hnu/eg/util/test/MessageTest.java	/^package cn.hnu.eg.util.test;$/;"	p
cn.hnu.eg.util.test	src/cn/hnu/eg/util/test/Utils.java	/^package cn.hnu.eg.util.test;$/;"	p
coalesceTrivialFollowers	src/kilim/analysis/BasicBlock.java	/^    void coalesceTrivialFollowers() {$/;"	m	class:BasicBlock
commentPattern	src/kilim/tools/Asm.java	/^    static Pattern                  commentPattern = Pattern.compile("^;.*$| ;[^\\"]*");$/;"	f	class:Asm
commonSuperType	src/kilim/analysis/TypeDesc.java	/^    public static String commonSuperType(String oa, String ob) {$/;"	m	class:TypeDesc
commonSuperType	src/kilim/mirrors/Detector.java	/^    public String commonSuperType(String oa, String ob) throws ClassMirrorNotFoundException {$/;"	m	class:Detector
compare	src/kilim/analysis/BasicBlock.java	/^    public int compare(BasicBlock o1, BasicBlock o2) {$/;"	m	class:BBComparator
compareTo	src/kilim/analysis/BasicBlock.java	/^    public int compareTo(BasicBlock o) {$/;"	m	class:BasicBlock
compareTo	src/kilim/analysis/CallWeaver.java	/^    public int compareTo(ValInfo that) {$/;"	m	class:ValInfo
compareTo	src/kilim/analysis/Handler.java	/^    public int compareTo(Handler h) {$/;"	m	class:Handler
compile	src/kilim/tools/Javac.java	/^    public static List<ClassInfo> compile(List<String> srcCodes) throws IOException {$/;"	m	class:Javac
computeFrames	src/kilim/tools/Asm.java	/^    private static boolean computeFrames = true;$/;"	f	class:Asm	file:
consolidate	src/kilim/analysis/Handler.java	/^    public static ArrayList<Handler> consolidate( ArrayList<Handler> list) {$/;"	m	class:Handler
consolidateBasicBlocks	src/kilim/analysis/MethodFlow.java	/^    private void consolidateBasicBlocks() {$/;"	m	class:MethodFlow	file:
constInsn	src/kilim/analysis/CallWeaver.java	/^    static final int[]    constInsn = { ACONST_NULL, ICONST_0, LCONST_0,$/;"	f	class:VMType
constVal	src/kilim/analysis/Value.java	/^    private Object constVal;$/;"	f	class:Value	file:
containerRef	src/kilim/analysis/FileLister.java	/^    volatile WeakReference<FileContainer> containerRef;$/;"	f	class:FileLister
contains	src/kilim/RingQueue.java	/^    public boolean contains(T obj) {$/;"	m	class:RingQueue
contains	src/kilim/analysis/CallWeaver.java	/^    public boolean contains(Value v) {$/;"	m	class:ValInfoList
contentLength	src/kilim/http/HttpRequest.java	/^    public int    contentLength;$/;"	f	class:HttpRequest
contentOffset	src/kilim/http/HttpRequest.java	/^    public int    contentOffset;$/;"	f	class:HttpRequest
copy	src/cn/hnu/eg/util/test/Utils.java	/^ public static Object copy(final Object o) throws IOException,$/;"	m	class:Utils
copy	src/kilim/analysis/Usage.java	/^    Usage copy() {$/;"	m	class:Usage
count	src/examples/Bunnies.java	/^	static int count = 0;$/;"	f	class:Bunnies
count	src/kilim/http/KeyValues.java	/^  public int      count;$/;"	f	class:KeyValues
cr	src/kilim/analysis/ClassFlow.java	/^    ClassReader           cr;$/;"	f	class:ClassFlow
createCallWeavers	src/kilim/analysis/MethodWeaver.java	/^    private void createCallWeavers() {$/;"	m	class:MethodWeaver	file:
createStateClass	src/kilim/analysis/CallWeaver.java	/^    private String createStateClass() {$/;"	m	class:CallWeaver	file:
createStateClass	src/kilim/analysis/ClassWeaver.java	/^    String createStateClass(ValInfoList valInfoList) {$/;"	m	class:ClassWeaver
createStateClass	src/kilim/analysis/MethodWeaver.java	/^    public String createStateClass(ValInfoList valInfoList) {$/;"	m	class:MethodWeaver
crlf	src/kilim/http/HttpRequestParser.java	/^  public static String crlf = "\\r\\n";$/;"	f	class:HttpRequestParser
curState	src/kilim/Fiber.java	/^    public State               curState;$/;"	f	class:Fiber
currentThread	src/kilim/Task.java	/^    public volatile Thread currentThread = null;$/;"	f	class:Task
cv	src/kilim/tools/Asm.java	/^    private ClassWriter             cv;$/;"	f	class:Asm	file:
dark	src/cn/hnu/eg/util/Signal.java	/^	red,dark$/;"	e	enum:Signal	file:
dataChannel	src/kilim/nio/EndPoint.java	/^    public SocketChannel dataChannel() {$/;"	m	class:EndPoint
dataFlow	src/kilim/analysis/MethodFlow.java	/^    private void dataFlow() {$/;"	m	class:MethodFlow	file:
declaredLabels	src/kilim/tools/Asm.java	/^    private HashSet<String>         declaredLabels = new HashSet<String>();$/;"	f	class:Asm	file:
declaredMethods	src/kilim/mirrors/CachedClassMirrors.java	/^    MethodMirror[] declaredMethods;$/;"	f	class:CachedClassMirror
dedent	src/kilim/analysis/Utils.java	/^    public static void dedent(int numSpaces) {$/;"	m	class:Utils
def	src/kilim/analysis/Usage.java	/^    private BitSet def;$/;"	f	class:Usage	file:
defaultNumberThreads	src/kilim/Scheduler.java	/^    public static int defaultNumberThreads;$/;"	f	class:Scheduler
defaultScheduler	src/kilim/Scheduler.java	/^    public static volatile Scheduler defaultScheduler = null;$/;"	f	class:Scheduler
delegate	src/kilim/mirrors/CachedClassMirrors.java	/^    final RuntimeClassMirrors delegate;$/;"	f	class:CachedClassMirrors
deleteDir	src/kilim/tools/Javac.java	/^    private static void deleteDir(File rootDir) {$/;"	m	class:Javac	file:
dequeue	src/kilim/analysis/MethodFlow.java	/^    private BasicBlock dequeue() {$/;"	m	class:MethodFlow	file:
desc	src/kilim/mirrors/CachedClassMirrors.java	/^    private String desc;$/;"	f	class:CachedMethodMirror	file:
descPatternStr	src/kilim/tools/Asm.java	/^    private static String descPatternStr = "[$\\\\[\\\\w\/;]+";$/;"	f	class:Asm	file:
detector	src/kilim/analysis/BasicBlock.java	/^    Detector detector() {$/;"	m	class:BasicBlock
detector	src/kilim/analysis/ClassFlow.java	/^    private Detector      detector;$/;"	f	class:ClassFlow	file:
detector	src/kilim/analysis/ClassFlow.java	/^    public Detector detector() {$/;"	m	class:ClassFlow
detector	src/kilim/analysis/ClassWriter.java	/^	private final Detector detector;$/;"	f	class:ClassWriter	file:
detector	src/kilim/analysis/MethodFlow.java	/^	private final Detector detector;$/;"	f	class:MethodFlow	file:
detector	src/kilim/analysis/MethodFlow.java	/^	public Detector detector() {$/;"	m	class:MethodFlow
detector	src/kilim/tools/Weaver.java	/^    private Detector detector;$/;"	f	class:Weaver	file:
dividend	src/examples/Calculation.java	/^	private BigDecimal dividend;$/;"	f	class:Calculation	file:
divisor	src/examples/Calculation.java	/^	private BigDecimal divisor;$/;"	f	class:Calculation	file:
doLiveVarAnalysis	src/kilim/analysis/MethodFlow.java	/^    private void doLiveVarAnalysis() {$/;"	m	class:MethodFlow	file:
done	src/kilim/Task.java	/^    protected boolean  done = false;$/;"	f	class:Task
down	src/kilim/Fiber.java	/^    public Fiber down() {$/;"	m	class:Fiber
ds	src/kilim/Fiber.java	/^    static void ds() {$/;"	m	class:Fiber
dump	src/kilim/Scheduler.java	/^    public void dump() {$/;"	m	class:Scheduler
dump	src/kilim/Task.java	/^    public String dump() {$/;"	m	class:Task
dumpBuffer	src/kilim/http/HttpRequest.java	/^    public void dumpBuffer(ByteBuffer buffer) {$/;"	m	class:HttpRequest
dup	src/kilim/analysis/Frame.java	/^    public Frame dup() {$/;"	m	class:Frame
dupArray	src/kilim/analysis/Frame.java	/^    public static Value[] dupArray(Value[] a) {$/;"	m	class:Frame
dupBBAndLabels	src/kilim/analysis/BasicBlock.java	/^    void dupBBAndLabels(boolean deepCopy,$/;"	m	class:BasicBlock
dupCopyContents	src/kilim/analysis/BasicBlock.java	/^    static ArrayList<BasicBlock> dupCopyContents(boolean deepCopy,$/;"	m	class:BasicBlock
elements	src/kilim/RingQueue.java	/^    protected T[] elements;$/;"	f	class:RingQueue
encodeRange	src/kilim/http/HttpRequestParser.java	/^  public static int encodeRange(int start, int end) {$/;"	m	class:HttpRequestParser
end	src/kilim/Fiber.java	/^    public final boolean end() {$/;"	m	class:Fiber
endPos	src/kilim/analysis/BasicBlock.java	/^    public int                    endPos = -1;$/;"	f	class:BasicBlock
endpoint	src/kilim/nio/SessionTask.java	/^  public EndPoint endpoint;$/;"	f	class:SessionTask
enqueue	src/kilim/analysis/MethodFlow.java	/^    void enqueue(BasicBlock bb) {$/;"	m	class:MethodFlow
ensureMaxStack	src/kilim/analysis/MethodWeaver.java	/^    void ensureMaxStack(int numStack) {$/;"	m	class:MethodWeaver
ensureMaxVars	src/kilim/analysis/MethodWeaver.java	/^    void ensureMaxVars(int numVars) {$/;"	m	class:MethodWeaver
ensureSize	src/kilim/Fiber.java	/^    private State[] ensureSize(int newsize) {$/;"	m	class:Fiber	file:
eofOK	src/kilim/tools/Asm.java	/^    private boolean                 eofOK          = false;$/;"	f	class:Asm	file:
eofSeen	src/kilim/tools/Asm.java	/^    boolean eofSeen = false;$/;"	f	class:Asm
equals	src/kilim/ExitMsg.java	/^    public boolean equals(Object obj) {$/;"	m	class:ExitMsg
equals	src/kilim/Task.java	/^    public boolean equals(Object obj) {$/;"	m	class:Task
equals	src/kilim/analysis/ClassInfo.java	/^    public boolean equals(Object obj) {$/;"	m	class:ClassInfo
equals	src/kilim/analysis/Frame.java	/^    public boolean equals(Object other) {$/;"	m	class:Frame
equals	src/kilim/analysis/Value.java	/^    public boolean equals(Object obj) {$/;"	m	class:Value
equals	src/kilim/mirrors/CachedClassMirrors.java	/^    public boolean equals(Object obj) {$/;"	m	class:CachedClassMirror
equals	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public boolean equals(Object obj) {$/;"	m	class:RuntimeClassMirror
err	src/kilim/http/HttpRequestParser.java	/^  public static void err(String msg) throws IOException{$/;"	m	class:HttpRequestParser
err	src/kilim/tools/Asm.java	/^    private void err(String s) {$/;"	m	class:Asm	file:
err	src/kilim/tools/Weaver.java	/^    static int err = 0;$/;"	f	class:Weaver
errNotWoven	src/kilim/Task.java	/^    public static void errNotWoven() {$/;"	m	class:Task
errNotWoven	src/kilim/Task.java	/^    public static void errNotWoven(Task t) {$/;"	m	class:Task
errorExit	src/kilim/Task.java	/^    public static void errorExit(Throwable ex) throws Pausable {  }$/;"	m	class:Task
errorExit	src/kilim/Task.java	/^    public static void errorExit(Throwable ex, Fiber f)  {$/;"	m	class:Task
esc	src/kilim/tools/DumpClass.java	/^    private static String esc(String s) {$/;"	m	class:DumpMethodVisitor	file:
evalLiveIn	src/kilim/analysis/Usage.java	/^    public boolean evalLiveIn(ArrayList<Usage> succUsage) {$/;"	m	class:Usage
eventRcvd	src/kilim/Cell.java	/^        public volatile boolean eventRcvd = false;$/;"	f	class:Cell.BlockingSubscriber
eventRcvd	src/kilim/Mailbox.java	/^        public volatile boolean eventRcvd = false;$/;"	f	class:Mailbox.BlockingSubscriber
eventType	src/kilim/Event.java	/^    public final int eventType; $/;"	f	class:Event
examples	src/examples/Bunnies.java	/^package examples;$/;"	p
examples	src/examples/Calculation.java	/^package examples;$/;"	p
examples	src/examples/Calculator.java	/^package examples;$/;"	p
examples	src/examples/Chain.java	/^package examples;$/;"	p
examples	src/examples/DefferedDivision.java	/^package examples;$/;"	p
examples	src/examples/Fib.java	/^package examples;$/;"	p
examples	src/examples/Group.java	/^package examples;$/;"	p
examples	src/examples/HttpFileServer.java	/^package examples;$/;"	p
examples	src/examples/Ping.java	/^package examples;$/;"	p
examples	src/examples/Reflect.java	/^package examples;$/;"	p
examples	src/examples/SimpleHttpServer.java	/^package examples;$/;"	p
examples	src/examples/SimpleTask.java	/^package examples;$/;"	p
examples	src/examples/SimpleTask2.java	/^package examples;$/;"	p
examples	src/examples/TestCalculator.java	/^package examples;$/;"	p
examples	src/examples/TestConcurrencyWithJava.java	/^package examples;$/;"	p
examples	src/examples/TestConcurrencyWithKilim.java	/^package examples;$/;"	p
examples	src/examples/TestHelloWorld.java	/^package examples;$/;"	p
examples	src/examples/TimedTask.java	/^package examples;$/;"	p
examples	src/examples/Tree.java	/^package examples;$/;"	p
exceptions	src/kilim/mirrors/CachedClassMirrors.java	/^    private String[] exceptions;$/;"	f	class:CachedMethodMirror	file:
exclude	src/kilim/tools/Weaver.java	/^    static boolean exclude(String name) {$/;"	m	class:Weaver
excludePattern	src/kilim/tools/Weaver.java	/^    public static Pattern excludePattern = null;$/;"	f	class:Weaver
execute	src/cn/hnu/eg/sys/Master.java	/^	@Override public void execute() throws Pausable{$/;"	m	class:Master
execute	src/cn/hnu/eg/sys/MaxValueVertex.java	/^	public void execute() throws Pausable {$/;"	m	class:MaxValueVertex
execute	src/examples/Calculator.java	/^	public void execute() throws Pausable{$/;"	m	class:Calculator
execute	src/examples/Chain.java	/^    public void execute() throws Pausable{$/;"	m	class:Chain
execute	src/examples/DefferedDivision.java	/^	public void execute() throws Pausable{$/;"	m	class:DefferedDivision
execute	src/examples/Fib.java	/^    public void execute() throws Pausable {$/;"	m	class:Fib
execute	src/examples/Group.java	/^        public void execute() throws Pausable {$/;"	m	class:Group.GroupTask
execute	src/examples/HttpFileServer.java	/^    public void execute() throws Pausable, Exception {$/;"	m	class:HttpFileServer
execute	src/examples/Ping.java	/^        public void execute() throws Pausable, Exception {$/;"	m	class:Ping.Server
execute	src/examples/Reflect.java	/^  public void execute() throws Pausable, Exception {$/;"	m	class:Reflect
execute	src/examples/SimpleHttpServer.java	/^        public void execute() throws Pausable, Exception {$/;"	m	class:SimpleHttpServer.SimpleHttpSession
execute	src/examples/SimpleTask.java	/^    public void execute() throws Pausable{$/;"	m	class:SimpleTask
execute	src/examples/SimpleTask2.java	/^    public void execute() throws Pausable{$/;"	m	class:SimpleTask2
execute	src/examples/TestConcurrencyWithKilim.java	/^	public void execute() throws Pausable{$/;"	m	class:TestConcurrencyWithKilim
execute	src/examples/TimedTask.java	/^    public void execute() throws Pausable {$/;"	m	class:TimedTask
execute	src/examples/Tree.java	/^    public void execute() throws Pausable {$/;"	m	class:Post
execute	src/examples/Tree.java	/^    public void execute() throws Pausable{$/;"	m	class:Pre
execute	src/kilim/Task.java	/^    public  void execute() throws Pausable, Exception {$/;"	m	class:Task
execute	src/kilim/Task.java	/^    public void execute(Fiber f) throws Exception {$/;"	m	class:Task
execute	src/kilim/TaskGroup.java	/^    public void execute() throws Pausable {$/;"	m	class:TaskGroup
execute	src/kilim/examples/Chain.java	/^    public void execute() throws Pausable{$/;"	m	class:Chain
execute	src/kilim/examples/Fib.java	/^    public void execute() throws Pausable {$/;"	m	class:Fib
execute	src/kilim/examples/Group.java	/^        public void execute() throws Pausable {$/;"	m	class:Group.GroupTask
execute	src/kilim/examples/HttpFileServer.java	/^    public void execute() throws Pausable, Exception {$/;"	m	class:HttpFileServer
execute	src/kilim/examples/Ping.java	/^        public void execute() throws Pausable, Exception {$/;"	m	class:Ping.Server
execute	src/kilim/examples/Reflect.java	/^  public void execute() throws Pausable, Exception {$/;"	m	class:Reflect
execute	src/kilim/examples/SimpleHttpServer.java	/^        public void execute() throws Pausable, Exception {$/;"	m	class:SimpleHttpServer.SimpleHttpSession
execute	src/kilim/examples/SimpleTask.java	/^    public void execute() throws Pausable{$/;"	m	class:SimpleTask
execute	src/kilim/examples/SimpleTask2.java	/^    public void execute() throws Pausable{$/;"	m	class:SimpleTask2
execute	src/kilim/examples/TimedTask.java	/^    public void execute() throws Pausable {$/;"	m	class:TimedTask
execute	src/kilim/examples/Tree.java	/^    public void execute() throws Pausable {$/;"	m	class:Post
execute	src/kilim/examples/Tree.java	/^    public void execute() throws Pausable{$/;"	m	class:Pre
execute	src/kilim/nio/NioSelectorScheduler.java	/^        public void execute() throws Pausable, Exception {$/;"	m	class:NioSelectorScheduler.ListenTask
execute	src/kilim/nio/NioSelectorScheduler.java	/^        public void execute() throws Pausable, Exception {$/;"	m	class:NioSelectorScheduler.RegistrationTask
exit	src/kilim/Task.java	/^    public static void exit(Object aExitValue) throws Pausable {    }$/;"	m	class:Task
exit	src/kilim/Task.java	/^    public static void exit(Object aExitValue, Fiber f) {$/;"	m	class:Task
exitMBs	src/kilim/Task.java	/^    private LinkedList<Mailbox<ExitMsg>>  exitMBs;$/;"	f	class:Task	file:
exitObj	src/kilim/TaskDoneReason.java	/^    Object exitObj;$/;"	f	class:TaskDoneReason
exitResult	src/kilim/Task.java	/^    public    Object           exitResult = "OK";$/;"	f	class:Task
exitmb	src/examples/SimpleTask2.java	/^    static Mailbox<ExitMsg> exitmb = new Mailbox<ExitMsg>();$/;"	f	class:SimpleTask2
exitmb	src/kilim/TaskGroup.java	/^    private Mailbox<ExitMsg> exitmb = new Mailbox<ExitMsg>();$/;"	f	class:TaskGroup	file:
exitmb	src/kilim/examples/SimpleTask2.java	/^    static Mailbox<ExitMsg> exitmb = new Mailbox<ExitMsg>();$/;"	f	class:SimpleTask2
extractRange	src/kilim/http/HttpRequest.java	/^    public String extractRange(int beg, int end) {$/;"	m	class:HttpRequest
extractRange	src/kilim/http/HttpRequest.java	/^    public String extractRange(int range) {$/;"	m	class:HttpRequest
fargs	src/kilim/Task.java	/^      Object[] fargs;$/;"	f	class:Task.ArgState
fiber	src/kilim/Task.java	/^    protected Fiber            fiber;$/;"	f	class:Task
fiberArg	src/kilim/analysis/CallWeaver.java	/^    static String fiberArg = D_FIBER + ')';$/;"	f	class:CallWeaver
fiberVar	src/kilim/analysis/MethodWeaver.java	/^    private int                   fiberVar;$/;"	f	class:MethodWeaver	file:
fieldDesc	src/kilim/analysis/CallWeaver.java	/^    String fieldDesc() {$/;"	m	class:ValInfo
fieldDesc	src/kilim/analysis/CallWeaver.java	/^    static final String[] fieldDesc = { D_OBJECT, D_INT, D_LONG, D_DOUBLE,$/;"	f	class:VMType
fieldName	src/kilim/analysis/CallWeaver.java	/^    String fieldName;$/;"	f	class:ValInfo
fieldPattern	src/kilim/tools/Asm.java	/^    private static Pattern fieldPattern  = $/;"	f	class:Asm	file:
fieldSpecPattern	src/kilim/tools/Asm.java	/^    static final Pattern fieldSpecPattern  = Pattern.compile("([\\\\w\/.$]+)[\/.]([\\\\w$]+) +([^\\\\s]+)");$/;"	f	class:Asm
file	src/kilim/analysis/FileLister.java	/^        final File file;$/;"	f	class:DirIterator.DirEntry
fileContainers	src/kilim/WeavingClassLoader.java	/^    ArrayList<FileLister> fileContainers;$/;"	f	class:WeavingClassLoader
fileName	src/kilim/tools/Asm.java	/^    private String                  fileName;$/;"	f	class:Asm	file:
filename	src/cn/hnu/eg/ds/Graph.java	/^	private String filename;$/;"	f	class:Graph	file:
fill	src/kilim/http/HttpRequest.java	/^    public void fill(EndPoint endpoint, int offset, int size) throws IOException, Pausable {$/;"	m	class:HttpRequest
fill	src/kilim/nio/EndPoint.java	/^    public ByteBuffer fill(ByteBuffer buf, int atleastN) throws IOException, Pausable {$/;"	m	class:EndPoint
fillMessage	src/kilim/nio/EndPoint.java	/^    public ByteBuffer fillMessage(ByteBuffer bb, int lengthLength, boolean lengthIncludesItself) throws IOException, Pausable {$/;"	m	class:EndPoint
find	src/kilim/analysis/CallWeaver.java	/^    public ValInfo find(Value v) {$/;"	m	class:ValInfoList
findClass	src/kilim/WeavingClassLoader.java	/^    protected Class<?> findClass(String name) throws ClassNotFoundException {$/;"	m	class:WeavingClassLoader
findPausableMethod	src/kilim/mirrors/Detector.java	/^    private MethodMirror findPausableMethod(String className, String methodName, String desc)$/;"	m	class:Detector	file:
flags	src/kilim/analysis/BasicBlock.java	/^    int                           flags;$/;"	f	class:BasicBlock
flow	src/kilim/analysis/BasicBlock.java	/^    public MethodFlow             flow;$/;"	f	class:BasicBlock
flowVarUsage	src/kilim/analysis/BasicBlock.java	/^    public boolean flowVarUsage() {$/;"	m	class:BasicBlock
follower	src/kilim/analysis/BasicBlock.java	/^    BasicBlock            follower;$/;"	f	class:BasicBlock
format	src/kilim/analysis/Utils.java	/^    public static String format(String s) {$/;"	m	class:Utils
formatter	src/kilim/tools/DumpClass.java	/^    static Formatter formatter = new Formatter(fsb);$/;"	f	class:DumpMethodVisitor
frameNodes	src/kilim/analysis/MethodFlow.java	/^    private HashMap<Integer, FrameNode> frameNodes = new HashMap<Integer, FrameNode>();$/;"	f	class:MethodFlow	file:
from	src/kilim/analysis/Handler.java	/^    public int        from;$/;"	f	class:Handler
from	src/kilim/analysis/Range.java	/^    int from;$/;"	f	class:Range
fsb	src/kilim/tools/DumpClass.java	/^    static StringBuilder fsb = new StringBuilder(100);$/;"	f	class:DumpMethodVisitor
gcd	src/examples/Bunnies.java	/^	public int gcd(int a, int b){$/;"	m	class:Bunnies
genCall	src/kilim/analysis/CallWeaver.java	/^    void genCall(MethodVisitor mv) {$/;"	m	class:CallWeaver
genException	src/kilim/analysis/MethodWeaver.java	/^    private void genException(MethodVisitor mv, BasicBlock bb, List<CallWeaver> cwList) {$/;"	m	class:MethodWeaver	file:
genGetCurrentTask	src/kilim/analysis/MethodWeaver.java	/^    void genGetCurrentTask(MethodVisitor mv, BasicBlock bb) {$/;"	m	class:MethodWeaver
genPausableMethod	src/kilim/analysis/MethodWeaver.java	/^    private void genPausableMethod(MethodVisitor mv, BasicBlock bb) {$/;"	m	class:MethodWeaver	file:
genPostCall	src/kilim/analysis/CallWeaver.java	/^    void genPostCall(MethodVisitor mv) {$/;"	m	class:CallWeaver
genPrelude	src/kilim/analysis/MethodWeaver.java	/^    private void genPrelude(MethodVisitor mv) {$/;"	m	class:MethodWeaver	file:
genRestore	src/kilim/analysis/CallWeaver.java	/^    private void genRestore(MethodVisitor mv, LabelNode restoreLabel) {$/;"	m	class:CallWeaver	file:
genRestoreEx	src/kilim/analysis/CallWeaver.java	/^    void genRestoreEx(MethodVisitor mv, LabelNode restoreLabel) {$/;"	m	class:CallWeaver
genRestoreVars	src/kilim/analysis/CallWeaver.java	/^    private void genRestoreVars(MethodVisitor mv, int stateVar) {$/;"	m	class:CallWeaver	file:
genRewind	src/kilim/analysis/CallWeaver.java	/^    void genRewind(MethodVisitor mv) {$/;"	m	class:CallWeaver
genSave	src/kilim/analysis/CallWeaver.java	/^    private void genSave(MethodVisitor mv, LabelNode saveLabel) {$/;"	m	class:CallWeaver	file:
genUnwind	src/kilim/analysis/CallWeaver.java	/^    private void genUnwind(MethodVisitor mv, LabelNode unwindLabel) {$/;"	m	class:CallWeaver	file:
get	src/kilim/Cell.java	/^    public T get() throws Pausable{$/;"	m	class:Cell
get	src/kilim/Cell.java	/^    public T get(EventSubscriber eo) {$/;"	m	class:Cell
get	src/kilim/Cell.java	/^    public T get(long timeoutMillis) throws Pausable {$/;"	m	class:Cell
get	src/kilim/Mailbox.java	/^    public T get() throws Pausable{$/;"	m	class:Mailbox
get	src/kilim/Mailbox.java	/^    public T get(EventSubscriber eo) {$/;"	m	class:Mailbox
get	src/kilim/Mailbox.java	/^    public T get(long timeoutMillis) throws Pausable {$/;"	m	class:Mailbox
get	src/kilim/RingQueue.java	/^    public T get() {$/;"	m	class:RingQueue
get	src/kilim/http/IntList.java	/^  public int get(int index) {$/;"	m	class:IntList
get	src/kilim/http/KeyValues.java	/^  public String get(String key) {$/;"	m	class:KeyValues
getAnswer	src/examples/Calculation.java	/^	public BigDecimal getAnswer() {$/;"	m	class:Calculation
getArgumentTypes	src/kilim/analysis/TypeDesc.java	/^    public static String[] getArgumentTypes(String methodDescriptor) {$/;"	m	class:TypeDesc
getBasicBlock	src/kilim/analysis/CallWeaver.java	/^    BasicBlock getBasicBlock() {$/;"	m	class:CallWeaver
getBasicBlock	src/kilim/analysis/MethodFlow.java	/^    BasicBlock getBasicBlock(LabelNode l) { $/;"	m	class:MethodFlow
getBasicBlocks	src/kilim/analysis/MethodFlow.java	/^    public BBList getBasicBlocks() {$/;"	m	class:MethodFlow
getCallee	src/kilim/Fiber.java	/^    public Object getCallee() {$/;"	m	class:Fiber
getCallsUnderCatchBlock	src/kilim/analysis/MethodWeaver.java	/^    private List<CallWeaver> getCallsUnderCatchBlock(BasicBlock catchBB) {$/;"	m	class:MethodWeaver	file:
getClassDescriptor	src/kilim/analysis/ClassFlow.java	/^    public String getClassDescriptor() {$/;"	m	class:ClassFlow
getClassInfos	src/kilim/analysis/ClassWeaver.java	/^    public List<ClassInfo>  getClassInfos() {$/;"	m	class:ClassWeaver
getClassName	src/kilim/analysis/ClassFlow.java	/^    public String getClassName() {$/;"	m	class:ClassFlow
getCommonSuperClass	src/kilim/analysis/ClassWriter.java	/^	protected String getCommonSuperClass(final String type1, final String type2) {$/;"	m	class:ClassWriter
getComponentType	src/kilim/analysis/TypeDesc.java	/^    public static String getComponentType(String t) {$/;"	m	class:TypeDesc
getConstVal	src/kilim/analysis/Value.java	/^    public Object getConstVal() {return constVal;}$/;"	m	class:Value
getContainer	src/kilim/analysis/FileLister.java	/^    private FileContainer getContainer() throws IOException {$/;"	m	class:FileLister	file:
getCreationSites	src/kilim/analysis/Value.java	/^    public int[] getCreationSites() {return sites;}$/;"	m	class:Value
getCurrentTask	src/kilim/Task.java	/^    public static Task getCurrentTask() throws Pausable {return null;}$/;"	m	class:Task
getCurrentTask	src/kilim/WorkerThread.java	/^    public Task getCurrentTask() {$/;"	m	class:WorkerThread
getDeclaredMethods	src/kilim/mirrors/CachedClassMirrors.java	/^    public MethodMirror[] getDeclaredMethods() {$/;"	m	class:CachedClassMirror
getDeclaredMethods	src/kilim/mirrors/ClassMirror.java	/^	public abstract MethodMirror[] getDeclaredMethods();$/;"	m	interface:ClassMirror
getDeclaredMethods	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public MethodMirror[] getDeclaredMethods() {$/;"	m	class:RuntimeClassMirror
getDefaultScheduler	src/kilim/Scheduler.java	/^    public synchronized static Scheduler getDefaultScheduler() {$/;"	m	class:Scheduler
getDetector	src/kilim/mirrors/Detector.java	/^    public static Detector getDetector() {$/;"	m	class:Detector
getDirName	src/kilim/tools/Asm.java	/^    private static String getDirName(String className) {$/;"	m	class:Asm	file:
getDirName	src/kilim/tools/Weaver.java	/^    static String getDirName(String className) {$/;"	m	class:Weaver
getDividend	src/examples/Calculation.java	/^	public BigDecimal getDividend() {$/;"	m	class:Calculation
getDivisor	src/examples/Calculation.java	/^	public BigDecimal getDivisor() {$/;"	m	class:Calculation
getEndPoint	src/kilim/nio/SessionTask.java	/^  public EndPoint getEndPoint() {$/;"	m	class:SessionTask
getExceptionTypes	src/kilim/mirrors/CachedClassMirrors.java	/^    public String[] getExceptionTypes() throws ClassMirrorNotFoundException {$/;"	m	class:CachedMethodMirror
getExceptionTypes	src/kilim/mirrors/MethodMirror.java	/^	public abstract String[] getExceptionTypes() throws ClassMirrorNotFoundException;$/;"	m	interface:MethodMirror
getExceptionTypes	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public String[] getExceptionTypes() {$/;"	m	class:RuntimeMethodMirror
getFiberArgVar	src/kilim/analysis/MethodWeaver.java	/^    int getFiberArgVar() {$/;"	m	class:MethodWeaver
getFiberVar	src/kilim/analysis/MethodWeaver.java	/^    int getFiberVar() {$/;"	m	class:MethodWeaver
getFileName	src/kilim/analysis/FileLister.java	/^        public String getFileName() {$/;"	m	class:DirIterator.DirEntry
getFileName	src/kilim/analysis/FileLister.java	/^        public String getFileName() {$/;"	m	class:JarIterator.JEntry
getFileName	src/kilim/analysis/FileLister.java	/^        public abstract String getFileName();$/;"	m	class:FileLister.Entry
getFilename	src/cn/hnu/eg/ds/Graph.java	/^	public String getFilename() {$/;"	m	class:Graph
getFollowingBlock	src/kilim/analysis/BasicBlock.java	/^    BasicBlock getFollowingBlock() {$/;"	m	class:BasicBlock
getGraph	src/cn/hnu/eg/sys/Master.java	/^	public Graph getGraph() {$/;"	m	class:Master
getHeader	src/kilim/http/HttpRequest.java	/^    public String getHeader(String key) {$/;"	m	class:HttpRequest
getHeaderValue	src/kilim/http/HttpResponse.java	/^    public String getHeaderValue(String key) {$/;"	m	class:HttpResponse
getInputStream	src/kilim/analysis/FileLister.java	/^        public InputStream getInputStream() throws IOException {$/;"	m	class:DirIterator.DirEntry
getInputStream	src/kilim/analysis/FileLister.java	/^        public InputStream getInputStream() throws IOException {$/;"	m	class:JarIterator.JEntry
getInputStream	src/kilim/analysis/FileLister.java	/^        public abstract InputStream getInputStream() throws IOException;$/;"	m	class:FileLister.Entry
getInstruction	src/kilim/analysis/BasicBlock.java	/^    public AbstractInsnNode getInstruction(int pos) {$/;"	m	class:BasicBlock
getInterfaces	src/kilim/mirrors/CachedClassMirrors.java	/^    public String[] getInterfaces() throws ClassMirrorNotFoundException {$/;"	m	class:CachedClassMirror
getInterfaces	src/kilim/mirrors/ClassMirror.java	/^	public abstract String[] getInterfaces() throws ClassMirrorNotFoundException;$/;"	m	interface:ClassMirror
getInterfaces	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public String[] getInterfaces() {$/;"	m	class:RuntimeClassMirror
getInternalName	src/kilim/analysis/TypeDesc.java	/^    public static String getInternalName(String desc) {$/;"	m	class:TypeDesc
getInterned	src/kilim/analysis/TypeDesc.java	/^    public static String getInterned(String desc) {$/;"	m	class:TypeDesc
getJSRTarget	src/kilim/analysis/BasicBlock.java	/^    public BasicBlock getJSRTarget() {$/;"	m	class:BasicBlock
getLabel	src/kilim/tools/Asm.java	/^    Label getLabel(String s) {$/;"	m	class:Asm
getLabelAt	src/kilim/analysis/MethodFlow.java	/^    public LabelNode getLabelAt(int pos) {$/;"	m	class:MethodFlow
getLabelPosition	src/kilim/analysis/MethodFlow.java	/^    int getLabelPosition(LabelNode l) {$/;"	m	class:MethodFlow
getLine	src/kilim/tools/Asm.java	/^    private Line getLine() {$/;"	m	class:Asm	file:
getListOfVertices	src/cn/hnu/eg/ds/Graph.java	/^	public List<Vertex> getListOfVertices() {$/;"	m	class:Graph
getLoadedClass	src/kilim/KilimClassLoader.java	/^    public Class<?> getLoadedClass(String className) {$/;"	m	class:KilimClassLoader
getLoadedClass	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public Class<?> getLoadedClass(String className) {$/;"	m	class:RuntimeClassMirrors
getLocal	src/kilim/analysis/Frame.java	/^    public Value getLocal(int local) {$/;"	m	class:Frame
getLocal	src/kilim/analysis/Frame.java	/^    public Value getLocal(int local, int opcode) {$/;"	m	class:Frame
getMailbox	src/cn/hnu/eg/base/Vertex.java	/^	public Mailbox<Message> getMailbox() {$/;"	m	class:Vertex
getMailbox	src/cn/hnu/eg/sys/Master.java	/^	public Mailbox<Signal> getMailbox() {$/;"	m	class:Master
getMaster	src/cn/hnu/eg/sys/Master.java	/^	public static Master getMaster(){$/;"	m	class:Master
getMaxLocals	src/kilim/analysis/Frame.java	/^    public int getMaxLocals() {$/;"	m	class:Frame
getMethodDescriptor	src/kilim/mirrors/CachedClassMirrors.java	/^    public String getMethodDescriptor() {$/;"	m	class:CachedMethodMirror
getMethodDescriptor	src/kilim/mirrors/MethodMirror.java	/^	public abstract String getMethodDescriptor();$/;"	m	interface:MethodMirror
getMethodDescriptor	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public String getMethodDescriptor() {$/;"	m	class:RuntimeMethodMirror
getMethodFlows	src/kilim/analysis/ClassFlow.java	/^    public ArrayList<MethodFlow> getMethodFlows() {$/;"	m	class:ClassFlow
getMethodInsn	src/kilim/analysis/CallWeaver.java	/^    final MethodInsnNode getMethodInsn() {$/;"	m	class:CallWeaver
getName	src/kilim/mirrors/CachedClassMirrors.java	/^    public String getName() {$/;"	m	class:CachedClassMirror
getName	src/kilim/mirrors/CachedClassMirrors.java	/^    public String getName() {$/;"	m	class:CachedMethodMirror
getName	src/kilim/mirrors/ClassMirror.java	/^	public abstract String getName();$/;"	m	interface:ClassMirror
getName	src/kilim/mirrors/MethodMirror.java	/^    public abstract String getName();$/;"	m	interface:MethodMirror
getName	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public String getName() {$/;"	m	class:RuntimeClassMirror
getName	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public String getName() {$/;"	m	class:RuntimeMethodMirror
getNextTask	src/kilim/WorkerThread.java	/^    protected Task getNextTask(WorkerThread workerThread) throws ShutdownException {$/;"	m	class:WorkerThread
getNextTask	src/kilim/WorkerThread.java	/^    public synchronized Task getNextTask() {$/;"	m	class:WorkerThread
getNowState	src/cn/hnu/eg/base/Vertex.java	/^	public State getNowState() {$/;"	m	class:Vertex
getNumArgs	src/kilim/analysis/CallWeaver.java	/^    int getNumArgs() {$/;"	m	class:CallWeaver
getNumArgs	src/kilim/analysis/MethodFlow.java	/^    public int getNumArgs() {$/;"	m	class:MethodFlow
getNumArgs	src/kilim/tools/FlowAnalyzer.java	/^    private static int getNumArgs(MethodInsnNode m) {$/;"	m	class:FlowAnalyzer	file:
getNumArgumentTypes	src/kilim/analysis/TypeDesc.java	/^    public static int getNumArgumentTypes(String desc) {$/;"	m	class:TypeDesc
getNumArgumentTypes	src/kilim/analysis/TypeDesc.java	/^    public static int getNumArgumentTypes(char[] buf) {$/;"	m	class:TypeDesc
getNumBottom	src/kilim/analysis/CallWeaver.java	/^    int getNumBottom() {$/;"	m	class:CallWeaver
getNumOfHalt	src/cn/hnu/eg/sys/Master.java	/^	public int getNumOfHalt() {$/;"	m	class:Master
getNumOfVertices	src/cn/hnu/eg/ds/Graph.java	/^	public int getNumOfVertices() {$/;"	m	class:Graph
getNumSites	src/kilim/analysis/Value.java	/^    public int getNumSites() {return numSites;}$/;"	m	class:Value
getNumWordsInSig	src/kilim/analysis/MethodWeaver.java	/^    int getNumWordsInSig() {$/;"	m	class:MethodWeaver
getOrCreateBasicBlock	src/kilim/analysis/MethodFlow.java	/^    BasicBlock getOrCreateBasicBlock(LabelNode l) {$/;"	m	class:MethodFlow
getOrCreateLabelAtPos	src/kilim/analysis/MethodFlow.java	/^    LabelNode getOrCreateLabelAtPos(int pos) {$/;"	m	class:MethodFlow
getOrigWithSameSig	src/kilim/analysis/ClassFlow.java	/^    private MethodFlow getOrigWithSameSig(MethodFlow bridgeMethod) {$/;"	m	class:ClassFlow	file:
getOutputStream	src/kilim/http/HttpResponse.java	/^    public OutputStream getOutputStream() {$/;"	m	class:HttpResponse
getOwner	src/kilim/ReentrantLock.java	/^    public Thread getOwner() {$/;"	m	class:ReentrantLock
getPC	src/kilim/analysis/MethodWeaver.java	/^    int getPC(CallWeaver weaver) {$/;"	m	class:MethodWeaver
getPausableStatus	src/kilim/analysis/AsmDetector.java	/^        public int getPausableStatus(String methodName, String desc) {$/;"	m	class:AsmDetector.ClassCache
getPausableStatus	src/kilim/analysis/AsmDetector.java	/^    public static int getPausableStatus(String className, String methodName,$/;"	m	class:AsmDetector
getPausableStatus	src/kilim/mirrors/Detector.java	/^    public int getPausableStatus(String className, String methodName, String desc) {$/;"	m	class:Detector
getPauseReason	src/kilim/Task.java	/^    public final PauseReason getPauseReason() {$/;"	m	class:Task
getQuery	src/kilim/http/HttpRequest.java	/^    public String getQuery() {$/;"	m	class:HttpRequest
getQueryComponents	src/kilim/http/HttpRequest.java	/^    public KeyValues getQueryComponents() {$/;"	m	class:HttpRequest
getReceiverTypename	src/kilim/analysis/CallWeaver.java	/^    private String getReceiverTypename() {$/;"	m	class:CallWeaver	file:
getRelPath	src/examples/HttpFileServer.java	/^    private String getRelPath(File file) throws IOException {$/;"	m	class:HttpFileServer	file:
getRelPath	src/kilim/examples/HttpFileServer.java	/^    private String getRelPath(File file) throws IOException {$/;"	m	class:HttpFileServer	file:
getReturnType	src/kilim/analysis/CallWeaver.java	/^    private String getReturnType() {$/;"	m	class:CallWeaver	file:
getReturnTypeDesc	src/kilim/analysis/TypeDesc.java	/^    public static String getReturnTypeDesc(String desc) {$/;"	m	class:TypeDesc
getScheduler	src/kilim/Task.java	/^    public synchronized Scheduler getScheduler() {$/;"	m	class:Task
getSize	src/kilim/analysis/FileLister.java	/^        public abstract long getSize();$/;"	m	class:FileLister.Entry
getSize	src/kilim/analysis/FileLister.java	/^        public long getSize() {$/;"	m	class:DirIterator.DirEntry
getSize	src/kilim/analysis/FileLister.java	/^        public long getSize() {$/;"	m	class:JarIterator.JEntry
getSourceInfo	src/kilim/tools/Javac.java	/^    private static SourceInfo getSourceInfo(String srcCode) {$/;"	m	class:Javac	file:
getSourceInfos	src/kilim/tools/Javac.java	/^    private static List<SourceInfo> getSourceInfos(List<String> srcCodes) {$/;"	m	class:Javac	file:
getStack	src/kilim/analysis/Frame.java	/^    public Value getStack(int pos) {$/;"	m	class:Frame
getStackDepth	src/kilim/Task.java	/^    public int getStackDepth() {$/;"	m	class:Task
getStackLen	src/kilim/analysis/CallWeaver.java	/^    int getStackLen() {$/;"	m	class:CallWeaver
getStackLen	src/kilim/analysis/Frame.java	/^    public int getStackLen() {$/;"	m	class:Frame
getState	src/kilim/Fiber.java	/^    public State getState() {$/;"	m	class:Fiber
getSubBlocks	src/kilim/analysis/BasicBlock.java	/^    public ArrayList<BasicBlock> getSubBlocks() throws KilimException {$/;"	m	class:BasicBlock
getSuperClasses	src/kilim/mirrors/Detector.java	/^    public ArrayList<String> getSuperClasses(String name) throws ClassMirrorNotFoundException {$/;"	m	class:Detector
getSuperclass	src/kilim/mirrors/CachedClassMirrors.java	/^    public String getSuperclass() throws ClassMirrorNotFoundException {$/;"	m	class:CachedClassMirror
getSuperclass	src/kilim/mirrors/ClassMirror.java	/^	public abstract String getSuperclass() throws ClassMirrorNotFoundException;$/;"	m	interface:ClassMirror
getSuperclass	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public String getSuperclass() {$/;"	m	class:RuntimeClassMirror
getTmpDir	src/kilim/tools/Javac.java	/^    private static File getTmpDir() throws IOException {$/;"	m	class:Javac	file:
getType	src/kilim/analysis/NopInsn.java	/^    public int getType() {$/;"	m	class:NopInsn
getTypeDesc	src/kilim/analysis/TypeDesc.java	/^    public static String getTypeDesc(Object object) {$/;"	m	class:TypeDesc
getTypeDesc	src/kilim/analysis/Value.java	/^    public String getTypeDesc() {return typeDesc;}$/;"	m	class:Value
getV_id	src/cn/hnu/eg/base/Vertex.java	/^	public int getV_id() {$/;"	m	class:Vertex
getValue	src/cn/hnu/eg/base/Vertex.java	/^	public int getValue() {$/;"	m	class:Vertex
getVarUsage	src/kilim/analysis/BasicBlock.java	/^    public Usage getVarUsage() {$/;"	m	class:BasicBlock
getVertexClassName	src/cn/hnu/eg/ds/Graph.java	/^	public String getVertexClassName() {$/;"	m	class:Graph
getWaitingThread	src/kilim/Scheduler.java	/^    WorkerThread getWaitingThread() {$/;"	m	class:Scheduler
getWovenMethod	src/kilim/Task.java	/^    private static Method getWovenMethod(Method m) {$/;"	m	class:Task	file:
getYellowBook	src/cn/hnu/eg/base/Vertex.java	/^	public List<Mailbox<Message>> getYellowBook() {$/;"	m	class:Vertex
getb	src/kilim/Cell.java	/^    public T getb() {$/;"	m	class:Cell
getb	src/kilim/Cell.java	/^    public T getb(final long timeoutMillis) {$/;"	m	class:Cell
getb	src/kilim/Mailbox.java	/^    public T getb() {$/;"	m	class:Mailbox
getb	src/kilim/Mailbox.java	/^    public T getb(final long timeoutMillis) {$/;"	m	class:Mailbox
getnb	src/kilim/Cell.java	/^    public T getnb() {$/;"	m	class:Cell
getnb	src/kilim/Mailbox.java	/^    public T getnb() {$/;"	m	class:Mailbox
gid	src/kilim/WorkerThread.java	/^    static AtomicInteger gid        = new AtomicInteger();$/;"	f	class:WorkerThread
gmtdf	src/kilim/http/HttpResponse.java	/^    public static final SimpleDateFormat            gmtdf;$/;"	f	class:HttpResponse
graph	src/cn/hnu/eg/sys/Master.java	/^	private Graph graph;$/;"	f	class:Master	file:
group	src/kilim/tools/Asm.java	/^    String group(int i) {$/;"	m	class:Asm
groupCount	src/kilim/tools/Asm.java	/^    int groupCount() {$/;"	m	class:Asm
growArray	src/kilim/http/Utils.java	/^  public static Object[] growArray(Object[] input, int extraRoom) {$/;"	m	class:Utils
growArray	src/kilim/http/Utils.java	/^  public static int[] growArray(int[] input, int extraRoom) {$/;"	m	class:Utils
handlers	src/kilim/analysis/BasicBlock.java	/^    public ArrayList<Handler>     handlers           = new ArrayList<Handler>(2);$/;"	f	class:BasicBlock
hasFlag	src/kilim/analysis/BasicBlock.java	/^    public boolean hasFlag(int bitFlag) {$/;"	m	class:BasicBlock
hasGetCurrentTask	src/kilim/analysis/MethodWeaver.java	/^    private boolean hasGetCurrentTask() {$/;"	m	class:MethodWeaver	file:
hasMessage	src/kilim/Cell.java	/^    public synchronized boolean hasMessage() {$/;"	m	class:Cell
hasMessage	src/kilim/Mailbox.java	/^	public boolean hasMessage(Task eo) {$/;"	m	class:Mailbox
hasMessage	src/kilim/Mailbox.java	/^    public synchronized boolean hasMessage() {$/;"	m	class:Mailbox
hasMessages	src/kilim/Mailbox.java	/^	public boolean hasMessages(int num, Task eo) {$/;"	m	class:Mailbox
hasNext	src/kilim/Generator.java	/^    public boolean hasNext() {$/;"	m	class:Generator
hasNext	src/kilim/analysis/FileLister.java	/^    public boolean hasNext() {$/;"	m	class:DirIterator
hasNext	src/kilim/analysis/FileLister.java	/^    public boolean hasNext() {$/;"	m	class:JarIterator
hasPausableAnnotation	src/kilim/analysis/MethodFlow.java	/^    private boolean hasPausableAnnotation;$/;"	f	class:MethodFlow	file:
hasSpace	src/kilim/Cell.java	/^    public synchronized boolean hasSpace() {$/;"	m	class:Cell
hasSpace	src/kilim/Mailbox.java	/^    public synchronized boolean hasSpace() {$/;"	m	class:Mailbox
hasTasks	src/kilim/WorkerThread.java	/^    public synchronized boolean hasTasks() {$/;"	m	class:WorkerThread
hashCode	src/kilim/ExitMsg.java	/^    public int hashCode() {$/;"	m	class:ExitMsg
hashCode	src/kilim/Task.java	/^    public int hashCode() {$/;"	m	class:Task
hashCode	src/kilim/analysis/ClassInfo.java	/^    public int hashCode() {$/;"	m	class:ClassInfo
hashCode	src/kilim/analysis/Frame.java	/^    public int hashCode() {$/;"	m	class:Frame
hashCode	src/kilim/analysis/Value.java	/^    public int hashCode() {$/;"	m	class:Value
hashCode	src/kilim/mirrors/CachedClassMirrors.java	/^    public int hashCode() {$/;"	m	class:CachedClassMirror
hashCode	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public int hashCode() {$/;"	m	class:RuntimeClassMirror
help	src/kilim/tools/Weaver.java	/^    static void help() {$/;"	m	class:Weaver
http_date_en_main	src/kilim/http/HttpRequestParser.java	/^static final int http_date_en_main = 1;$/;"	f	class:HttpRequestParser
http_date_error	src/kilim/http/HttpRequestParser.java	/^static final int http_date_error = 0;$/;"	f	class:HttpRequestParser
http_date_first_final	src/kilim/http/HttpRequestParser.java	/^static final int http_date_first_final = 98;$/;"	f	class:HttpRequestParser
http_date_start	src/kilim/http/HttpRequestParser.java	/^static final int http_date_start = 1;$/;"	f	class:HttpRequestParser
http_keywords_en_main	src/kilim/http/HttpRequestParser.java	/^static final int http_keywords_en_main = 307;$/;"	f	class:HttpRequestParser
http_keywords_error	src/kilim/http/HttpRequestParser.java	/^static final int http_keywords_error = 0;$/;"	f	class:HttpRequestParser
http_keywords_first_final	src/kilim/http/HttpRequestParser.java	/^static final int http_keywords_first_final = 307;$/;"	f	class:HttpRequestParser
http_keywords_start	src/kilim/http/HttpRequestParser.java	/^static final int http_keywords_start = 307;$/;"	f	class:HttpRequestParser
http_parser_en_main	src/kilim/http/HttpRequestParser.java	/^static final int http_parser_en_main = 1;$/;"	f	class:HttpRequestParser
http_parser_error	src/kilim/http/HttpRequestParser.java	/^static final int http_parser_error = 0;$/;"	f	class:HttpRequestParser
http_parser_first_final	src/kilim/http/HttpRequestParser.java	/^static final int http_parser_first_final = 56;$/;"	f	class:HttpRequestParser
http_parser_start	src/kilim/http/HttpRequestParser.java	/^static final int http_parser_start = 1;$/;"	f	class:HttpRequestParser
iStack	src/kilim/Fiber.java	/^    private int                iStack                  = -1;$/;"	f	class:Fiber	file:
icons	src/kilim/Mailbox.java	/^    private int icons = 0; \/\/ consumer index;$/;"	f	class:Mailbox	file:
icons	src/kilim/RingQueue.java	/^    protected int icons;   \/\/ consumer index;$/;"	f	class:RingQueue
id	src/kilim/Task.java	/^    public final int           id;$/;"	f	class:Task
id	src/kilim/Task.java	/^    public int id() {$/;"	m	class:Task
id	src/kilim/analysis/BasicBlock.java	/^    public int                    id;$/;"	f	class:BasicBlock
idSource	src/kilim/Task.java	/^    static final AtomicInteger idSource = new AtomicInteger();$/;"	f	class:Task
idSperatorId	src/cn/hnu/eg/util/EasyGraphConstant.java	/^	public final static String idSperatorId = "->";$/;"	f	interface:EasyGraphConstant
idSperatorValue	src/cn/hnu/eg/util/EasyGraphConstant.java	/^	public final static String idSperatorValue = ":";$/;"	f	interface:EasyGraphConstant
implementsPattern	src/kilim/tools/Asm.java	/^    private static Pattern implementsPattern = Pattern.compile("\\\\.implements +(" + classNamePatternStr + ")$");$/;"	f	class:Asm	file:
in	src/kilim/analysis/Usage.java	/^    private BitSet in;$/;"	f	class:Usage	file:
indent	src/kilim/analysis/Utils.java	/^    public static void indent(int numSpaces) {$/;"	m	class:Utils
indentStr	src/kilim/analysis/Utils.java	/^    public static String indentStr = "";$/;"	f	class:Utils
indentWith	src/kilim/analysis/Utils.java	/^    public static void indentWith(String s) {$/;"	m	class:Utils
indexOf	src/kilim/analysis/CallWeaver.java	/^    public int indexOf(Value v) {$/;"	m	class:ValInfoList
indexOf	src/kilim/http/KeyValues.java	/^  public int indexOf(String key) {$/;"	m	class:KeyValues
informOnExit	src/kilim/Task.java	/^    public void informOnExit(Mailbox<ExitMsg> exit) {$/;"	m	class:Task
init	src/cn/hnu/eg/base/Vertex.java	/^	public void init(int vid,int value){$/;"	m	class:Vertex
init	src/cn/hnu/eg/ds/Graph.java	/^	public void init(String vertexClassName,String filename){$/;"	m	class:Graph
initHeader	src/kilim/http/HttpRequestParser.java	/^  public static void initHeader(HttpRequest req, int headerLength) throws IOException {$/;"	m	class:HttpRequestParser
init__http_date_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_date_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_date_index_offsets_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_date_index_offsets_0()$/;"	m	class:HttpRequestParser	file:
init__http_date_key_offsets_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_date_key_offsets_0()$/;"	m	class:HttpRequestParser	file:
init__http_date_range_lengths_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_date_range_lengths_0()$/;"	m	class:HttpRequestParser	file:
init__http_date_single_lengths_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_date_single_lengths_0()$/;"	m	class:HttpRequestParser	file:
init__http_date_trans_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_date_trans_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_date_trans_keys_0	src/kilim/http/HttpRequestParser.java	/^private static char[] init__http_date_trans_keys_0()$/;"	m	class:HttpRequestParser	file:
init__http_date_trans_targs_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_date_trans_targs_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_keywords_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_eof_trans_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_keywords_eof_trans_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_from_state_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_keywords_from_state_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_index_offsets_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_keywords_index_offsets_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_key_offsets_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_keywords_key_offsets_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_range_lengths_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_keywords_range_lengths_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_single_lengths_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_keywords_single_lengths_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_to_state_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_keywords_to_state_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_trans_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_keywords_trans_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_trans_keys_0	src/kilim/http/HttpRequestParser.java	/^private static char[] init__http_keywords_trans_keys_0()$/;"	m	class:HttpRequestParser	file:
init__http_keywords_trans_targs_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_keywords_trans_targs_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_parser_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_index_offsets_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_parser_index_offsets_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_indicies_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_parser_indicies_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_key_offsets_0	src/kilim/http/HttpRequestParser.java	/^private static short[] init__http_parser_key_offsets_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_range_lengths_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_parser_range_lengths_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_single_lengths_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_parser_single_lengths_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_trans_actions_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_parser_trans_actions_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_trans_keys_0	src/kilim/http/HttpRequestParser.java	/^private static char[] init__http_parser_trans_keys_0()$/;"	m	class:HttpRequestParser	file:
init__http_parser_trans_targs_0	src/kilim/http/HttpRequestParser.java	/^private static byte[] init__http_parser_trans_targs_0()$/;"	m	class:HttpRequestParser	file:
initialize	src/kilim/analysis/BasicBlock.java	/^    int initialize(int pos) {$/;"	m	class:BasicBlock
inline	src/kilim/analysis/BasicBlock.java	/^    ArrayList<BasicBlock> inline() throws KilimException {$/;"	m	class:BasicBlock
inlineSubroutines	src/kilim/analysis/MethodFlow.java	/^    private void inlineSubroutines() throws KilimException {$/;"	m	class:MethodFlow	file:
insnPattern	src/kilim/tools/Asm.java	/^    static final Pattern insnPattern       = Pattern.compile("(\\\\w+)( +(.*))?");$/;"	f	class:Asm
interestOps	src/kilim/nio/SockEvent.java	/^  public int interestOps; \/\/ SelectionKey.OP_* ..$/;"	f	class:SockEvent
interfaceNames	src/kilim/mirrors/CachedClassMirrors.java	/^    String[] interfaceNames;$/;"	f	class:CachedClassMirror
interpret	src/kilim/analysis/BasicBlock.java	/^    void interpret() {$/;"	m	class:BasicBlock
intersect	src/kilim/analysis/Range.java	/^    static Range intersect(int a1, int e1, int a2, int e2) {$/;"	m	class:Range
invoke	src/kilim/Task.java	/^    public static Object invoke(Method mthd, Object target, Object ... args)$/;"	m	class:Task
iprod	src/kilim/Mailbox.java	/^    private int iprod = 0; \/\/ producer index$/;"	f	class:Mailbox	file:
iprod	src/kilim/RingQueue.java	/^    protected int iprod;   \/\/ producer index$/;"	f	class:RingQueue
iread	src/kilim/http/HttpRequest.java	/^    public int    iread;$/;"	f	class:HttpRequest
isAbstract	src/kilim/analysis/MethodFlow.java	/^    public boolean isAbstract() {$/;"	m	class:MethodFlow
isActive	src/cn/hnu/eg/sys/InferiorMessage.java	/^	public boolean isActive() {$/;"	m	class:InferiorMessage
isActive	src/cn/hnu/eg/sys/Message.java	/^	public boolean isActive();$/;"	m	interface:Message
isAssignableFrom	src/kilim/mirrors/CachedClassMirrors.java	/^    public boolean isAssignableFrom(ClassMirror c) throws ClassMirrorNotFoundException {$/;"	m	class:CachedClassMirror
isAssignableFrom	src/kilim/mirrors/ClassMirror.java	/^	public abstract boolean isAssignableFrom(ClassMirror c) throws ClassMirrorNotFoundException;$/;"	m	interface:ClassMirror
isAssignableFrom	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public boolean isAssignableFrom(ClassMirror c) {$/;"	m	class:RuntimeClassMirror
isBridge	src/kilim/analysis/MethodFlow.java	/^    public boolean isBridge() {$/;"	m	class:MethodFlow
isBridge	src/kilim/mirrors/CachedClassMirrors.java	/^    private boolean isBridge;$/;"	f	class:CachedMethodMirror	file:
isBridge	src/kilim/mirrors/CachedClassMirrors.java	/^    public boolean isBridge() {$/;"	m	class:CachedMethodMirror
isBridge	src/kilim/mirrors/MethodMirror.java	/^	public abstract boolean isBridge();$/;"	m	interface:MethodMirror
isBridge	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public boolean isBridge() {$/;"	m	class:RuntimeMethodMirror
isCatchHandler	src/kilim/analysis/BasicBlock.java	/^    public boolean isCatchHandler() {$/;"	m	class:BasicBlock
isCategory1	src/kilim/analysis/Value.java	/^    public boolean isCategory1() {$/;"	m	class:Value
isCategory2	src/kilim/analysis/Value.java	/^    public boolean isCategory2() {$/;"	m	class:Value
isConstant	src/kilim/analysis/Value.java	/^    public boolean isConstant() {$/;"	m	class:Value
isDeath	src/cn/hnu/eg/sys/InferiorMessage.java	/^	public boolean isDeath() {$/;"	m	class:InferiorMessage
isDeath	src/cn/hnu/eg/sys/Message.java	/^	public boolean isDeath();$/;"	m	interface:Message
isDone	src/cn/hnu/eg/sys/Master.java	/^	public boolean isDone(){$/;"	m	class:Master
isDone	src/kilim/Fiber.java	/^    boolean                    isDone;$/;"	f	class:Fiber
isDone	src/kilim/Fiber.java	/^    public boolean isDone() {$/;"	m	class:Fiber
isDone	src/kilim/Task.java	/^    public synchronized boolean isDone() {$/;"	m	class:Task
isDoubleWord	src/kilim/analysis/TypeDesc.java	/^    static boolean isDoubleWord(String desc) {$/;"	m	class:TypeDesc
isGetCurrentTask	src/kilim/analysis/BasicBlock.java	/^    public boolean isGetCurrentTask() {$/;"	m	class:BasicBlock
isHalt	src/cn/hnu/eg/sys/InferiorMessage.java	/^	public boolean isHalt() {		$/;"	m	class:InferiorMessage
isHalt	src/cn/hnu/eg/sys/Message.java	/^	public boolean isHalt();$/;"	m	interface:Message
isInitialized	src/kilim/analysis/BasicBlock.java	/^    boolean isInitialized() {$/;"	m	class:BasicBlock
isIntType	src/kilim/analysis/TypeDesc.java	/^    public static boolean isIntType(String typeDesc) {$/;"	m	class:TypeDesc
isInterface	src/kilim/analysis/ClassFlow.java	/^    boolean isInterface() {$/;"	m	class:ClassFlow
isInterface	src/kilim/analysis/ClassWeaver.java	/^    boolean isInterface() {$/;"	m	class:ClassWeaver
isInterface	src/kilim/mirrors/CachedClassMirrors.java	/^    boolean isInterface;$/;"	f	class:CachedClassMirror
isInterface	src/kilim/mirrors/CachedClassMirrors.java	/^    public boolean isInterface() {$/;"	m	class:CachedClassMirror
isInterface	src/kilim/mirrors/ClassMirror.java	/^	public abstract boolean isInterface();$/;"	m	interface:ClassMirror
isInterface	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public boolean isInterface() {$/;"	m	class:RuntimeClassMirror
isLiveIn	src/kilim/analysis/Usage.java	/^    public boolean isLiveIn(int var) {$/;"	m	class:Usage
isLoaded	src/kilim/KilimClassLoader.java	/^    public boolean isLoaded(String className) {$/;"	m	class:KilimClassLoader
isLoaded	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public boolean isLoaded(String className) {$/;"	m	class:RuntimeClassMirrors
isNonPausableClass	src/kilim/mirrors/Detector.java	/^    static boolean isNonPausableClass(String className) {$/;"	m	class:Detector
isNonPausableMethod	src/kilim/mirrors/Detector.java	/^    static boolean isNonPausableMethod(String methodName) {$/;"	m	class:Detector
isOldHttp	src/kilim/http/HttpRequest.java	/^    public boolean isOldHttp() {$/;"	m	class:HttpRequest
isPausable	src/kilim/analysis/BasicBlock.java	/^    public boolean isPausable() {$/;"	m	class:BasicBlock
isPausable	src/kilim/analysis/ClassFlow.java	/^    private boolean       isPausable;$/;"	f	class:ClassFlow	file:
isPausable	src/kilim/analysis/ClassFlow.java	/^    public boolean isPausable() {$/;"	m	class:ClassFlow
isPausable	src/kilim/analysis/MethodFlow.java	/^    public boolean isPausable() {$/;"	m	class:MethodFlow
isPausable	src/kilim/analysis/MethodWeaver.java	/^    private boolean               isPausable;$/;"	f	class:MethodWeaver	file:
isPausable	src/kilim/mirrors/Detector.java	/^    public boolean isPausable(String className, String methodName, String desc) {$/;"	m	class:Detector
isPausableMethodInsn	src/kilim/analysis/MethodFlow.java	/^    boolean isPausableMethodInsn(MethodInsnNode min) {$/;"	m	class:MethodFlow
isPausing	src/kilim/Fiber.java	/^    boolean                    isPausing;$/;"	f	class:Fiber
isRefType	src/kilim/analysis/TypeDesc.java	/^    public static boolean isRefType(String typeDesc) {$/;"	m	class:TypeDesc
isShutdown	src/kilim/Scheduler.java	/^    public boolean isShutdown() {$/;"	m	class:Scheduler
isSingleWord	src/kilim/analysis/TypeDesc.java	/^    static boolean isSingleWord(String desc) {$/;"	m	class:TypeDesc
isStatic	src/kilim/analysis/MethodFlow.java	/^    public boolean isStatic() {$/;"	m	class:MethodFlow
isStatic	src/kilim/analysis/MethodWeaver.java	/^    boolean isStatic() {$/;"	m	class:MethodWeaver
isStaticCall	src/kilim/analysis/CallWeaver.java	/^    final boolean isStaticCall() {$/;"	m	class:CallWeaver
isValid	src/kilim/Cell.java	/^    public boolean isValid(Task t) {$/;"	m	class:Cell
isValid	src/kilim/Mailbox.java	/^    public boolean isValid(Task t) {$/;"	m	class:EmptySet_MsgAvListener
isValid	src/kilim/Mailbox.java	/^    public boolean isValid(Task t) {$/;"	m	class:Mailbox
isValid	src/kilim/PauseReason.java	/^    boolean isValid(Task t);$/;"	m	interface:PauseReason
isValid	src/kilim/TaskDoneReason.java	/^    public boolean isValid(Task t) {$/;"	m	class:TaskDoneReason
isValid	src/kilim/YieldReason.java	/^    public boolean isValid(Task t) {$/;"	m	class:YieldReason
isWoven	src/kilim/analysis/ClassFlow.java	/^    public boolean        isWoven = false;$/;"	f	class:ClassFlow
iterator	src/kilim/Generator.java	/^    public Iterator<T> iterator() {$/;"	m	class:Generator
iterator	src/kilim/analysis/FileLister.java	/^    public Iterator<FileLister.Entry> iterator() {$/;"	m	class:FileLister
jarEntry	src/kilim/analysis/FileLister.java	/^        private final JarEntry jarEntry;$/;"	f	class:JarIterator.JEntry	file:
jarEnum	src/kilim/analysis/FileLister.java	/^    Enumeration<JarEntry> jarEnum;$/;"	f	class:JarIterator
jarFile	src/kilim/analysis/FileLister.java	/^    JarFile   jarFile;$/;"	f	class:JarIterator
join	src/kilim/Task.java	/^    public ExitMsg join() throws Pausable {$/;"	m	class:Task
join	src/kilim/TaskGroup.java	/^    public ExitMsg join() throws Pausable {$/;"	m	class:TaskGroup
joinb	src/kilim/Task.java	/^    public ExitMsg joinb() {$/;"	m	class:Task
joinb	src/kilim/TaskGroup.java	/^    public ExitMsg joinb() {$/;"	m	class:TaskGroup
keepAlive	src/kilim/http/HttpRequest.java	/^    public boolean keepAlive() {$/;"	m	class:HttpRequest
keys	src/kilim/http/HttpRequest.java	/^    public String keys[];$/;"	f	class:HttpRequest
keys	src/kilim/http/HttpResponse.java	/^    public ArrayList<String>                        keys                             = new ArrayList<String>();$/;"	f	class:HttpResponse
keys	src/kilim/http/KeyValues.java	/^  public String[] keys;$/;"	f	class:KeyValues
kilim	src/kilim/Cell.java	/^package kilim;$/;"	p
kilim	src/kilim/Constants.java	/^package kilim;$/;"	p
kilim	src/kilim/Event.java	/^package kilim;$/;"	p
kilim	src/kilim/EventPublisher.java	/^package kilim;$/;"	p
kilim	src/kilim/EventSubscriber.java	/^package kilim;$/;"	p
kilim	src/kilim/ExitMsg.java	/^package kilim;$/;"	p
kilim	src/kilim/Fiber.java	/^package kilim;$/;"	p
kilim	src/kilim/Generator.java	/^package kilim;$/;"	p
kilim	src/kilim/KilimClassLoader.java	/^package kilim;$/;"	p
kilim	src/kilim/KilimException.java	/^package kilim;$/;"	p
kilim	src/kilim/Mailbox.java	/^package kilim;$/;"	p
kilim	src/kilim/NotPausable.java	/^package kilim;$/;"	p
kilim	src/kilim/Pausable.java	/^package kilim;$/;"	p
kilim	src/kilim/PauseReason.java	/^package kilim;$/;"	p
kilim	src/kilim/ReentrantLock.java	/^package kilim;$/;"	p
kilim	src/kilim/RingQueue.java	/^package kilim;$/;"	p
kilim	src/kilim/Scheduler.java	/^package kilim;$/;"	p
kilim	src/kilim/ShutdownException.java	/^package kilim;$/;"	p
kilim	src/kilim/State.java	/^package kilim;$/;"	p
kilim	src/kilim/Task.java	/^package kilim;$/;"	p
kilim	src/kilim/TaskDoneReason.java	/^package kilim;$/;"	p
kilim	src/kilim/TaskGroup.java	/^package kilim;$/;"	p
kilim	src/kilim/WeavingClassLoader.java	/^package kilim;$/;"	p
kilim	src/kilim/WorkerThread.java	/^package kilim;$/;"	p
kilim	src/kilim/YieldReason.java	/^package kilim;$/;"	p
kilim.analysis	src/kilim/analysis/AsmDetector.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/BBList.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/BasicBlock.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/CallWeaver.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/ClassFlow.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/ClassInfo.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/ClassWeaver.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/ClassWriter.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/FileLister.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/Frame.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/Handler.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/IncompatibleTypesException.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/MethodFlow.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/MethodWeaver.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/NopInsn.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/Range.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/TypeDesc.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/Usage.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/Utils.java	/^package kilim.analysis;$/;"	p
kilim.analysis	src/kilim/analysis/Value.java	/^package kilim.analysis;$/;"	p
kilim.examples	src/kilim/examples/Chain.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/Fib.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/Group.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/HttpFileServer.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/Ping.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/Reflect.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/SimpleHttpServer.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/SimpleTask.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/SimpleTask2.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/TimedTask.java	/^package kilim.examples;$/;"	p
kilim.examples	src/kilim/examples/Tree.java	/^package kilim.examples;$/;"	p
kilim.http	src/kilim/http/HttpMsg.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/HttpRequest.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/HttpRequestParser.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/HttpResponse.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/HttpServer.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/HttpSession.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/IntList.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/KeyValues.java	/^package kilim.http;$/;"	p
kilim.http	src/kilim/http/Utils.java	/^package kilim.http;$/;"	p
kilim.mirrors	src/kilim/mirrors/CachedClassMirrors.java	/^package kilim.mirrors;$/;"	p
kilim.mirrors	src/kilim/mirrors/ClassMirror.java	/^package kilim.mirrors;$/;"	p
kilim.mirrors	src/kilim/mirrors/ClassMirrorNotFoundException.java	/^package kilim.mirrors;$/;"	p
kilim.mirrors	src/kilim/mirrors/Detector.java	/^package kilim.mirrors;$/;"	p
kilim.mirrors	src/kilim/mirrors/MethodMirror.java	/^package kilim.mirrors;$/;"	p
kilim.mirrors	src/kilim/mirrors/Mirrors.java	/^package kilim.mirrors;$/;"	p
kilim.mirrors	src/kilim/mirrors/RuntimeClassMirrors.java	/^package kilim.mirrors;$/;"	p
kilim.nio	src/kilim/nio/EndPoint.java	/^package kilim.nio;$/;"	p
kilim.nio	src/kilim/nio/ExposedBais.java	/^package kilim.nio;$/;"	p
kilim.nio	src/kilim/nio/ExposedBaos.java	/^package kilim.nio;$/;"	p
kilim.nio	src/kilim/nio/NioSelectorScheduler.java	/^package kilim.nio;$/;"	p
kilim.nio	src/kilim/nio/SessionTask.java	/^package kilim.nio;$/;"	p
kilim.nio	src/kilim/nio/SockEvent.java	/^package kilim.nio;$/;"	p
kilim.tools	src/kilim/tools/Asm.java	/^package kilim.tools;$/;"	p
kilim.tools	src/kilim/tools/DumpClass.java	/^package kilim.tools;$/;"	p
kilim.tools	src/kilim/tools/FlowAnalyzer.java	/^package kilim.tools;$/;"	p
kilim.tools	src/kilim/tools/Javac.java	/^package kilim.tools;$/;"	p
kilim.tools	src/kilim/tools/Kilim.java	/^package kilim.tools;$/;"	p
kilim.tools	src/kilim/tools/P.java	/^package kilim.tools;$/;"	p
kilim.tools	src/kilim/tools/Weaver.java	/^package kilim.tools;$/;"	p
knownTypes	src/kilim/analysis/TypeDesc.java	/^    static final HashMap<String, String> knownTypes = new HashMap<String, String>(30);$/;"	f	class:TypeDesc
kw_lookup	src/kilim/http/HttpRequestParser.java	/^  public static String kw_lookup(byte[] data, int start, int len) {$/;"	m	class:HttpRequestParser
lab	src/kilim/tools/DumpClass.java	/^    private String lab(Label label) {$/;"	m	class:DumpMethodVisitor	file:
labCount	src/kilim/tools/DumpClass.java	/^    int labCount = 1;$/;"	f	class:DumpMethodVisitor
labelPattern	src/kilim/tools/Asm.java	/^    private static Pattern labelPattern = Pattern.compile("^(\\\\w+) *: *$");$/;"	f	class:Asm	file:
labelToBBMap	src/kilim/analysis/MethodFlow.java	/^    private HashMap<LabelNode, BasicBlock> labelToBBMap;$/;"	f	class:MethodFlow	file:
labelToPosMap	src/kilim/analysis/MethodFlow.java	/^    private HashMap<LabelNode, Integer>    labelToPosMap;$/;"	f	class:MethodFlow	file:
labels	src/kilim/tools/Asm.java	/^    private HashMap<String, Label>  labels         = new HashMap<String, Label>();$/;"	f	class:Asm	file:
labels	src/kilim/tools/DumpClass.java	/^    HashMap<Label,String> labels = new HashMap<Label, String>();$/;"	f	class:DumpMethodVisitor
lastInstruction	src/kilim/analysis/BasicBlock.java	/^    int lastInstruction() {$/;"	m	class:BasicBlock
lastMatch	src/kilim/tools/Asm.java	/^    private Matcher                 lastMatch= null; \/\/ for error context$/;"	f	class:Asm	file:
lastPattern	src/kilim/tools/Asm.java	/^    private Pattern                 lastPattern = null;$/;"	f	class:Asm	file:
ldInsn	src/kilim/analysis/CallWeaver.java	/^    static final int[]    ldInsn    = { ALOAD_0, ILOAD_0, LLOAD_0, DLOAD_0,$/;"	f	class:VMType
line	src/kilim/tools/Asm.java	/^    private Line                    line, bufferedLine;$/;"	f	class:Asm	file:
line	src/kilim/tools/DumpClass.java	/^    int line = 0;$/;"	f	class:DumpMethodVisitor
lineMatch	src/kilim/tools/Asm.java	/^    boolean lineMatch(Pattern p) {$/;"	m	class:Asm
lineNumberNodes	src/kilim/analysis/MethodFlow.java	/^    private HashMap<Integer, LineNumberNode> lineNumberNodes = new HashMap<Integer, LineNumberNode>();$/;"	f	class:MethodFlow	file:
lineNumbers	src/kilim/tools/DumpClass.java	/^    static boolean lineNumbers = true;$/;"	f	class:DumpClass
listOfVertices	src/cn/hnu/eg/ds/Graph.java	/^	private List<Vertex> listOfVertices;	$/;"	f	class:Graph	file:
listen	src/kilim/http/HttpServer.java	/^  public void listen(int port, Class<? extends HttpSession> httpSessionClass, Scheduler httpSessionScheduler) throws IOException {$/;"	m	class:HttpServer
listen	src/kilim/nio/NioSelectorScheduler.java	/^    public int listen(int port, Class<? extends SessionTask> sockTaskClass, Scheduler sockTaskScheduler)$/;"	m	class:NioSelectorScheduler
loadConstant	src/kilim/analysis/CallWeaver.java	/^    private void loadConstant(MethodVisitor mv, Value v) {$/;"	m	class:CallWeaver	file:
loadInsn	src/kilim/analysis/CallWeaver.java	/^    static final int[]    loadInsn  = { ALOAD, ILOAD, LLOAD, DLOAD, FLOAD };$/;"	f	class:VMType
loadNextTask	src/kilim/Scheduler.java	/^    void loadNextTask(WorkerThread wt) throws ShutdownException {$/;"	m	class:Scheduler
loadVar	src/kilim/analysis/CallWeaver.java	/^    static void loadVar(MethodVisitor mv, int vmt, int var) {$/;"	m	class:VMType
loadedClassForName	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public ClassMirror loadedClassForName(String className) {$/;"	m	class:RuntimeClassMirrors
locals	src/kilim/analysis/Frame.java	/^    Value[] locals;$/;"	f	class:Frame
localsPattern	src/kilim/tools/Asm.java	/^    static Pattern localsPattern     = Pattern.compile(".limit +locals +([0-9]+)");$/;"	f	class:Asm
lock	src/kilim/ReentrantLock.java	/^    public void lock() {$/;"	m	class:ReentrantLock
locker	src/kilim/ReentrantLock.java	/^    Thread locker = null; \/\/\/***************************$/;"	f	class:ReentrantLock
mailbox	src/cn/hnu/eg/base/Vertex.java	/^	private Mailbox<Message> mailbox = new Mailbox<Message>();$/;"	f	class:Vertex	file:
mailbox	src/cn/hnu/eg/sys/Master.java	/^	private Mailbox<Signal> mailbox = new Mailbox<Signal>();$/;"	f	class:Master	file:
mailbox	src/examples/Calculator.java	/^	private Mailbox<Calculation> mailbox;$/;"	f	class:Calculator	file:
mailbox	src/examples/DefferedDivision.java	/^	private Mailbox<Calculation> mailbox;$/;"	f	class:DefferedDivision	file:
main	src/cn/hnu/eg/sys/Service.java	/^	public static void main(String[] args) {$/;"	m	class:Service
main	src/cn/hnu/eg/util/GraphGenerator.java	/^	public static void main(String[] args) {$/;"	m	class:GraphGenerator
main	src/cn/hnu/eg/util/test/MessageTest.java	/^	public static void main(String[] args) throws IOException{$/;"	m	class:MessageTest
main	src/examples/Bunnies.java	/^	public static void main(String[] args) {$/;"	m	class:Bunnies
main	src/examples/Chain.java	/^    public static void main(String args[]) {$/;"	m	class:Chain
main	src/examples/Fib.java	/^    public static void main(String[] args) {$/;"	m	class:Fib
main	src/examples/Group.java	/^    public static void main(String[] args) {$/;"	m	class:Group
main	src/examples/HttpFileServer.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:HttpFileServer
main	src/examples/Ping.java	/^    public static void main(String args[]) throws Exception {$/;"	m	class:Ping
main	src/examples/Reflect.java	/^  public static void main(String args[]) {$/;"	m	class:Reflect
main	src/examples/SimpleHttpServer.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:SimpleHttpServer
main	src/examples/SimpleTask.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:SimpleTask
main	src/examples/SimpleTask2.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:SimpleTask2
main	src/examples/TestCalculator.java	/^	public static void main(String[] args) {$/;"	m	class:TestCalculator
main	src/examples/TestConcurrencyWithJava.java	/^	public static void main(String[] args) {$/;"	m	class:TestConcurrencyWithJava
main	src/examples/TestConcurrencyWithKilim.java	/^	public static void main(String[] args) {$/;"	m	class:TestConcurrencyWithKilim
main	src/examples/TestHelloWorld.java	/^	public static void main(String[] args) {$/;"	m	class:TestHelloWorld
main	src/examples/TimedTask.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:TimedTask
main	src/examples/Tree.java	/^    public static void main(String[] args) {$/;"	m	class:Tree
main	src/kilim/analysis/AsmDetector.java	/^    public static void main(String[] args) {$/;"	m	class:AsmDetector
main	src/kilim/examples/Chain.java	/^    public static void main(String args[]) {$/;"	m	class:Chain
main	src/kilim/examples/Fib.java	/^    public static void main(String[] args) {$/;"	m	class:Fib
main	src/kilim/examples/Group.java	/^    public static void main(String[] args) {$/;"	m	class:Group
main	src/kilim/examples/HttpFileServer.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:HttpFileServer
main	src/kilim/examples/Ping.java	/^    public static void main(String args[]) throws Exception {$/;"	m	class:Ping
main	src/kilim/examples/Reflect.java	/^  public static void main(String args[]) {$/;"	m	class:Reflect
main	src/kilim/examples/SimpleHttpServer.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:SimpleHttpServer
main	src/kilim/examples/SimpleTask.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:SimpleTask
main	src/kilim/examples/SimpleTask2.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:SimpleTask2
main	src/kilim/examples/TimedTask.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:TimedTask
main	src/kilim/examples/Tree.java	/^    public static void main(String[] args) {$/;"	m	class:Tree
main	src/kilim/http/HttpRequestParser.java	/^  public static void main(String args[]) throws Exception {$/;"	m	class:HttpRequestParser
main	src/kilim/tools/Asm.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:Asm
main	src/kilim/tools/DumpClass.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:DumpClass
main	src/kilim/tools/FlowAnalyzer.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:FlowAnalyzer
main	src/kilim/tools/Kilim.java	/^    public static void main(String[] args) throws Exception {$/;"	m	class:Kilim
main	src/kilim/tools/Weaver.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:Weaver
make	src/kilim/analysis/Value.java	/^    public static Value make(int pos, String desc) {$/;"	m	class:Value
make	src/kilim/analysis/Value.java	/^    public static Value make(int pos, String desc, Object aConstVal) {$/;"	m	class:Value
make	src/kilim/mirrors/RuntimeClassMirrors.java	/^    private RuntimeClassMirror make(Class<?> c) {$/;"	m	class:RuntimeClassMirrors	file:
makeClassName	src/kilim/analysis/ClassWeaver.java	/^    private String makeClassName(int[] numByType) {$/;"	m	class:ClassWeaver	file:
makeNotWovenMethod	src/kilim/analysis/MethodWeaver.java	/^    void makeNotWovenMethod(ClassVisitor cv, MethodFlow mf) {$/;"	m	class:MethodWeaver
markPausableJSRs	src/kilim/analysis/MethodFlow.java	/^    private void markPausableJSRs() throws KilimException {$/;"	m	class:MethodFlow	file:
master	src/cn/hnu/eg/sys/Master.java	/^		public static Master master = new Master();$/;"	f	class:Master.MasterHolder
match	src/kilim/tools/Asm.java	/^    boolean match(String s, Pattern p) {$/;"	m	class:Asm
maxLocals	src/kilim/tools/Asm.java	/^    private int                     maxLocals = 1;$/;"	f	class:Asm	file:
maxMsgs	src/kilim/Mailbox.java	/^    private int maxMsgs = 300;$/;"	f	class:Mailbox	file:
maxSize	src/kilim/RingQueue.java	/^    protected int maxSize;$/;"	f	class:RingQueue
maxStack	src/kilim/analysis/MethodWeaver.java	/^    private int                   maxStack;$/;"	f	class:MethodWeaver	file:
maxStack	src/kilim/tools/Asm.java	/^    private int                     maxStack = 1;$/;"	f	class:Asm	file:
maxVars	src/kilim/analysis/MethodWeaver.java	/^    private int                   maxVars;$/;"	f	class:MethodWeaver	file:
mb	src/examples/SimpleTask.java	/^    static Mailbox<String> mb = new Mailbox<String>();$/;"	f	class:SimpleTask
mb	src/examples/SimpleTask2.java	/^    static Mailbox<String> mb = new Mailbox<String>();$/;"	f	class:SimpleTask2
mb	src/kilim/examples/SimpleTask.java	/^    static Mailbox<String> mb = new Mailbox<String>();$/;"	f	class:SimpleTask
mb	src/kilim/examples/SimpleTask2.java	/^    static Mailbox<String> mb = new Mailbox<String>();$/;"	f	class:SimpleTask2
mbx	src/kilim/nio/NioSelectorScheduler.java	/^        Mailbox<SockEvent> mbx;$/;"	f	class:NioSelectorScheduler.RegistrationTask
mbxs	src/kilim/Mailbox.java	/^    final Mailbox<?>[] mbxs;$/;"	f	class:EmptySet_MsgAvListener
merge	src/kilim/analysis/BasicBlock.java	/^    void merge(Frame inframe, boolean localsOnly) {$/;"	m	class:BasicBlock
merge	src/kilim/analysis/Frame.java	/^    public Frame merge(Frame inframe, boolean localsOnly, Usage usage) {$/;"	m	class:Frame
merge	src/kilim/analysis/Value.java	/^    public Value merge(Value other) {$/;"	m	class:Value
mergeSites	src/kilim/analysis/Value.java	/^    private int mergeSites(int[]newSites, Value other) {$/;"	m	class:Value	file:
mergeSuccessors	src/kilim/analysis/BasicBlock.java	/^    void mergeSuccessors(Frame frame) {$/;"	m	class:BasicBlock
mergeType	src/kilim/analysis/TypeDesc.java	/^    public static String mergeType(String a, String b) throws IncompatibleTypesException {$/;"	m	class:TypeDesc
messageAvailable	src/kilim/Cell.java	/^    public static final Event messageAvailable = new Event(SPACE_AVAILABLE);$/;"	f	class:Cell
messageAvailable	src/kilim/Mailbox.java	/^    public static final Event messageAvailable = new Event(SPACE_AVAILABLE);$/;"	f	class:Mailbox
messages	src/kilim/Mailbox.java	/^	public synchronized Object[] messages() {$/;"	m	class:Mailbox
method	src/kilim/http/HttpRequest.java	/^    public String method;$/;"	f	class:HttpRequest
method	src/kilim/mirrors/RuntimeClassMirrors.java	/^    private final Method method;$/;"	f	class:RuntimeMethodMirror	file:
methodFlow	src/kilim/analysis/MethodWeaver.java	/^    private MethodFlow            methodFlow;$/;"	f	class:MethodWeaver	file:
methodFlows	src/kilim/analysis/ClassFlow.java	/^    ArrayList<MethodFlow> methodFlows;$/;"	f	class:ClassFlow
methodInvokePattern	src/kilim/tools/Asm.java	/^    static final Pattern methodInvokePattern = Pattern.compile("("+ classNamePatternStr + ")[\/.](" + methodNamePatternStr + ") *([(].*?[)]" + descPatternStr + ") *(, *\\\\d+)?");$/;"	f	class:Asm
methodName	src/kilim/tools/Asm.java	/^    private String                  methodName;$/;"	f	class:Asm	file:
methodNamePatternStr	src/kilim/tools/Asm.java	/^    private static String methodNamePatternStr = "[<>\\\\w]+"; \/\/ $/;"	f	class:Asm	file:
methodPattern	src/kilim/tools/Asm.java	/^    private static Pattern methodPattern = Pattern.compile(".method +(("+ modifierPatternStr + ")*) ("+ methodNamePatternStr + ") *([(][^\\\\s]+)");$/;"	f	class:Asm	file:
methodWeaver	src/kilim/analysis/CallWeaver.java	/^    private MethodWeaver methodWeaver;$/;"	f	class:CallWeaver	file:
methods	src/kilim/mirrors/RuntimeClassMirrors.java	/^    private MethodMirror[] methods; $/;"	f	class:RuntimeClassMirror	file:
mimeType	src/examples/HttpFileServer.java	/^    public static String mimeType(File file) {$/;"	m	class:HttpFileServer
mimeType	src/kilim/examples/HttpFileServer.java	/^    public static String mimeType(File file) {$/;"	m	class:HttpFileServer
mimeTypes	src/examples/HttpFileServer.java	/^    public static HashMap<String, String> mimeTypes = new HashMap<String, String>();$/;"	f	class:HttpFileServer
mimeTypes	src/kilim/examples/HttpFileServer.java	/^    public static HashMap<String, String> mimeTypes = new HashMap<String, String>();$/;"	f	class:HttpFileServer
mirror	src/kilim/mirrors/CachedClassMirrors.java	/^    public ClassMirror mirror(Class<?> clazz) {$/;"	m	class:CachedClassMirrors
mirror	src/kilim/mirrors/CachedClassMirrors.java	/^    public ClassMirror mirror(String className, byte[] bytecode) {$/;"	m	class:CachedClassMirrors
mirror	src/kilim/mirrors/Mirrors.java	/^	public abstract ClassMirror  mirror(Class<?> clazz);$/;"	m	interface:Mirrors
mirror	src/kilim/mirrors/Mirrors.java	/^    public abstract ClassMirror  mirror(String className, byte[] bytecode);$/;"	m	interface:Mirrors
mirror	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public ClassMirror mirror(Class<?> clazz) {$/;"	m	class:RuntimeClassMirrors
mirror	src/kilim/mirrors/RuntimeClassMirrors.java	/^    public ClassMirror mirror(String className, byte[] bytecode) {$/;"	m	class:RuntimeClassMirrors
mirrors	src/kilim/mirrors/Detector.java	/^    public final Mirrors mirrors;$/;"	f	class:Detector
mirrors	src/kilim/tools/Weaver.java	/^    private CachedClassMirrors mirrors;$/;"	f	class:Weaver	file:
mkdir	src/kilim/tools/Asm.java	/^    private static void mkdir(String dir) throws IOException {$/;"	m	class:Asm	file:
mkdir	src/kilim/tools/Weaver.java	/^    static void mkdir(String dir) throws IOException {$/;"	m	class:Weaver
modifierPatternStr	src/kilim/tools/Asm.java	/^    private static String modifierPatternStr = "public|private|protected|static|final|synchronized|volatile|transient|native|abstract|strict| ";$/;"	f	class:Asm	file:
modifiers	src/kilim/tools/Asm.java	/^    static HashMap<String, Integer> modifiers      = new HashMap<String, Integer>();$/;"	f	class:Asm
msg	src/kilim/Cell.java	/^    T msg;$/;"	f	class:Cell
msgs	src/kilim/Mailbox.java	/^    T[] msgs;$/;"	f	class:Mailbox
mthd	src/kilim/Task.java	/^      Object mthd;$/;"	f	class:Task.ArgState
mv	src/kilim/tools/Asm.java	/^    private MethodVisitor           mv;$/;"	f	class:Asm	file:
mymb	src/examples/Chain.java	/^    Mailbox<StringBuffer> mymb, nextmb;$/;"	f	class:Chain
mymb	src/kilim/examples/Chain.java	/^    Mailbox<StringBuffer> mymb, nextmb;$/;"	f	class:Chain
n	src/kilim/tools/Asm.java	/^    int            n;$/;"	f	class:Line
nFields	src/kilim/http/HttpRequest.java	/^    public int    nFields;$/;"	f	class:HttpRequest
nLocals	src/kilim/analysis/Usage.java	/^    private int nLocals;$/;"	f	class:Usage	file:
name	src/kilim/analysis/FileLister.java	/^    String name;$/;"	f	class:FileLister
name	src/kilim/mirrors/CachedClassMirrors.java	/^    String name;$/;"	f	class:CachedClassMirror
name	src/kilim/mirrors/CachedClassMirrors.java	/^    private String name;$/;"	f	class:CachedMethodMirror	file:
namePatternStr	src/kilim/tools/Asm.java	/^    private static String namePatternStr = "[$\\\\w]+";$/;"	f	class:Asm	file:
needsWeaving	src/kilim/analysis/ClassWeaver.java	/^    boolean needsWeaving() {$/;"	m	class:ClassWeaver
needsWeaving	src/kilim/analysis/ClassWeaver.java	/^    boolean needsWeaving(MethodFlow mf) {$/;"	m	class:ClassWeaver
next	src/kilim/Generator.java	/^    public T next() {$/;"	m	class:Generator
next	src/kilim/analysis/FileLister.java	/^    public FileLister.Entry next() {$/;"	m	class:DirIterator
next	src/kilim/analysis/FileLister.java	/^    public FileLister.Entry next() {$/;"	m	class:JarIterator
nextName	src/kilim/analysis/FileLister.java	/^    String    nextName;$/;"	f	class:JarIterator
nextVal	src/kilim/Generator.java	/^    T nextVal;$/;"	f	class:Generator
nextmb	src/examples/Chain.java	/^    Mailbox<StringBuffer> mymb, nextmb;$/;"	f	class:Chain
nextmb	src/kilim/examples/Chain.java	/^    Mailbox<StringBuffer> mymb, nextmb;$/;"	f	class:Chain
nio	src/kilim/http/HttpServer.java	/^  public NioSelectorScheduler nio;$/;"	f	class:HttpServer
nowState	src/cn/hnu/eg/base/Vertex.java	/^	private State nowState = State.ACTIVE;$/;"	f	class:Vertex	file:
numActivePins	src/kilim/Task.java	/^    int numActivePins;$/;"	f	class:Task
numArgs	src/kilim/analysis/CallWeaver.java	/^    int                  numArgs = -1;$/;"	f	class:CallWeaver
numElements	src/kilim/http/IntList.java	/^  public int   numElements;$/;"	f	class:IntList
numMonitorsActive	src/kilim/analysis/Frame.java	/^    int numMonitorsActive = 0;$/;"	f	class:Frame
numMsgs	src/kilim/Mailbox.java	/^    private int numMsgs = 0;$/;"	f	class:Mailbox	file:
numOfHalt	src/cn/hnu/eg/sys/Master.java	/^	private int numOfHalt = 0;$/;"	f	class:Master	file:
numOfVertices	src/cn/hnu/eg/ds/Graph.java	/^	private int numOfVertices;$/;"	f	class:Graph	file:
numPredecessors	src/kilim/analysis/BasicBlock.java	/^    int                           numPredecessors;$/;"	f	class:BasicBlock
numResumes	src/kilim/WorkerThread.java	/^    public int           numResumes = 0;$/;"	f	class:WorkerThread
numRunnables	src/kilim/nio/NioSelectorScheduler.java	/^    public synchronized int numRunnables() {$/;"	m	class:NioSelectorScheduler
numSites	src/kilim/analysis/Value.java	/^    private int  numSites;$/;"	f	class:Value	file:
numVars	src/kilim/analysis/CallWeaver.java	/^    int                  numVars;$/;"	f	class:CallWeaver
numWordsInSig	src/kilim/analysis/MethodWeaver.java	/^    private int                   numWordsInSig;$/;"	f	class:MethodWeaver	file:
obj	src/kilim/Task.java	/^      Object obj;$/;"	f	class:Task.ArgState
onEvent	src/kilim/Cell.java	/^        public void onEvent(EventPublisher ep, Event e) {$/;"	m	class:Cell.BlockingSubscriber
onEvent	src/kilim/EventSubscriber.java	/^    void onEvent(EventPublisher ep, Event e);$/;"	m	interface:EventSubscriber
onEvent	src/kilim/Mailbox.java	/^        public void onEvent(EventPublisher ep, Event e) {$/;"	m	class:Mailbox.BlockingSubscriber
onEvent	src/kilim/Mailbox.java	/^    public void onEvent(EventPublisher ep, Event e) {$/;"	m	class:EmptySet_MsgAvListener
onEvent	src/kilim/Task.java	/^    public void onEvent(EventPublisher ep, Event e) {$/;"	m	class:Task
opcheck	src/kilim/tools/Asm.java	/^    private void opcheck(String errMessage, String operand) {$/;"	m	class:Asm	file:
opcodeMap	src/kilim/tools/Asm.java	/^    private final static HashMap<String, Integer> opcodeMap      = new HashMap<String, Integer>();$/;"	f	class:Asm	file:
opcodeStrs	src/kilim/tools/Asm.java	/^    static String                                 opcodeStrs[]   = { "nop",$/;"	f	class:Asm
open	src/kilim/analysis/FileLister.java	/^    FileLister.Entry open(String fileName) throws IOException {$/;"	m	class:DirIterator
open	src/kilim/analysis/FileLister.java	/^    FileLister.Entry open(String relativeFileName) throws IOException {$/;"	m	class:JarIterator
open	src/kilim/analysis/FileLister.java	/^    abstract FileLister.Entry open(String relativeFileName) throws IOException;$/;"	m	class:FileContainer
open	src/kilim/analysis/FileLister.java	/^    public Entry open(String relativeFileName) throws IOException {$/;"	m	class:FileLister
openJar	src/kilim/analysis/FileLister.java	/^    private FileContainer openJar(String jarFile) throws IOException {$/;"	m	class:FileLister	file:
os	src/kilim/tools/DumpClass.java	/^    static String[] os = {$/;"	f	class:DumpMethodVisitor
otherMethods	src/kilim/analysis/AsmDetector.java	/^        LinkedList<String> otherMethods = new LinkedList<String>();$/;"	f	class:AsmDetector.ClassCache
outputDir	src/kilim/tools/Asm.java	/^    static String                   outputDir      = ".";$/;"	f	class:Asm
outputDir	src/kilim/tools/Weaver.java	/^    public static String outputDir = null;$/;"	f	class:Weaver
p	src/kilim/analysis/Utils.java	/^    public static void p(String s) {$/;"	m	class:Utils
p	src/kilim/tools/P.java	/^    public static void p(Object o) {$/;"	m	class:P
parseAnnotation	src/kilim/tools/Asm.java	/^    private void parseAnnotation() {$/;"	m	class:Asm	file:
parseArgs	src/kilim/tools/Asm.java	/^    private static List<String> parseArgs(String[] args) {$/;"	m	class:Asm	file:
parseArgs	src/kilim/tools/Weaver.java	/^    static ArrayList<String> parseArgs(String[] args) throws IOException {$/;"	m	class:Weaver
parseChunkSize	src/kilim/http/HttpRequest.java	/^    public static int parseChunkSize(ByteBuffer buffer, int start, int end) throws IOException {$/;"	m	class:HttpRequest
parseClass	src/kilim/tools/Asm.java	/^    private void parseClass() {$/;"	m	class:Asm	file:
parseClassBody	src/kilim/tools/Asm.java	/^    private void parseClassBody() {$/;"	m	class:Asm	file:
parseDate	src/kilim/http/HttpRequestParser.java	/^  public static long parseDate(byte[] data, int pos, int len) {$/;"	m	class:HttpRequestParser
parseDouble	src/kilim/tools/Asm.java	/^    double parseDouble(String s) {$/;"	m	class:Asm
parseField	src/kilim/tools/Asm.java	/^    private void parseField() {$/;"	m	class:Asm	file:
parseFloat	src/kilim/tools/Asm.java	/^    float parseFloat(String s) {$/;"	m	class:Asm
parseInstructions	src/kilim/tools/Asm.java	/^    private void parseInstructions() {$/;"	m	class:Asm	file:
parseInt	src/kilim/tools/Asm.java	/^    int parseInt(String s) {$/;"	m	class:Asm
parseInterfaces	src/kilim/tools/Asm.java	/^    private String[] parseInterfaces() {$/;"	m	class:Asm	file:
parseLabel	src/kilim/tools/Asm.java	/^    private void parseLabel() {$/;"	m	class:Asm	file:
parseLong	src/kilim/tools/Asm.java	/^    long parseLong(String s) {$/;"	m	class:Asm
parseMethod	src/kilim/tools/Asm.java	/^    private void parseMethod() {$/;"	m	class:Asm	file:
parseMethodBody	src/kilim/tools/Asm.java	/^    private void parseMethodBody() {$/;"	m	class:Asm	file:
parseMethodDirective	src/kilim/tools/Asm.java	/^    private void parseMethodDirective() {$/;"	m	class:Asm	file:
parseMethodExceptions	src/kilim/tools/Asm.java	/^    private String[] parseMethodExceptions() {$/;"	m	class:Asm	file:
parseModifiers	src/kilim/tools/Asm.java	/^    private int parseModifiers(String s) {$/;"	m	class:Asm	file:
parsePort	src/examples/Ping.java	/^    static void parsePort(String portstr) {$/;"	m	class:Ping
parsePort	src/kilim/examples/Ping.java	/^    static void parsePort(String portstr) {$/;"	m	class:Ping
parseSuper	src/kilim/tools/Asm.java	/^    private String parseSuper() {$/;"	m	class:Asm	file:
parseValue	src/kilim/tools/Asm.java	/^    private Object parseValue(String s, boolean isDoubleWord) {$/;"	m	class:Asm	file:
pausableMethods	src/kilim/analysis/AsmDetector.java	/^        LinkedList<String> pausableMethods = new LinkedList<String>();$/;"	f	class:AsmDetector.ClassCache
pausableMethods	src/kilim/analysis/MethodFlow.java	/^    private List<MethodInsnNode> pausableMethods = new LinkedList<MethodInsnNode>();$/;"	f	class:MethodFlow	file:
pause	src/kilim/Fiber.java	/^    public static void pause() throws Pausable {$/;"	m	class:Fiber
pause	src/kilim/Fiber.java	/^    public static void pause(Fiber f) {$/;"	m	class:Fiber
pause	src/kilim/Task.java	/^    public static void pause(PauseReason pauseReason) throws Pausable {errNotWoven();}$/;"	m	class:Task
pause	src/kilim/Task.java	/^    public static void pause(PauseReason pauseReason, Fiber f) {$/;"	m	class:Task
pauseReason	src/kilim/Task.java	/^    protected PauseReason      pauseReason;$/;"	f	class:Task
pauseUntilAcceptable	src/kilim/nio/EndPoint.java	/^    public void pauseUntilAcceptable() throws Pausable, IOException {$/;"	m	class:EndPoint
pauseUntilReadble	src/kilim/nio/EndPoint.java	/^    public void pauseUntilReadble() throws Pausable, IOException {$/;"	m	class:EndPoint
pauseUntilWritable	src/kilim/nio/EndPoint.java	/^    public void pauseUntilWritable() throws Pausable, IOException {$/;"	m	class:EndPoint
pc	src/kilim/Fiber.java	/^    public int                 pc;$/;"	f	class:Fiber
pc	src/kilim/State.java	/^    public int pc;$/;"	f	class:State
peek	src/kilim/Mailbox.java	/^	public T peek(int idx) {$/;"	m	class:Mailbox
peek	src/kilim/RingQueue.java	/^    public T peek() {$/;"	m	class:RingQueue
pi	src/kilim/tools/P.java	/^    public static void pi(int i) {$/;"	m	class:P
pinToThread	src/kilim/Task.java	/^    public void pinToThread() {$/;"	m	class:Task
pn	src/kilim/analysis/Utils.java	/^    public static void pn() {$/;"	m	class:Utils
pn	src/kilim/analysis/Utils.java	/^    public static void pn(Object o) {$/;"	m	class:Utils
pn	src/kilim/analysis/Utils.java	/^    public static void pn(String s) {$/;"	m	class:Utils
pn	src/kilim/analysis/Utils.java	/^    public static void pn(int i) {$/;"	m	class:Utils
pn	src/kilim/tools/P.java	/^    public static void pn() {$/;"	m	class:P
pn	src/kilim/tools/P.java	/^    public static void pn(Object o) {$/;"	m	class:P
pop	src/kilim/analysis/Frame.java	/^    public Value pop() {$/;"	m	class:Frame
popWord	src/kilim/analysis/Frame.java	/^    public Value popWord() {$/;"	m	class:Frame
popn	src/kilim/analysis/Frame.java	/^    public void popn(int n) {$/;"	m	class:Frame
port	src/examples/Ping.java	/^    static int port = 7262;$/;"	f	class:Ping
port	src/kilim/examples/Ping.java	/^    static int port = 7262;$/;"	f	class:Ping
port	src/kilim/nio/NioSelectorScheduler.java	/^        int                          port;$/;"	f	class:NioSelectorScheduler.ListenTask
port	src/kilim/nio/NioSelectorScheduler.java	/^        public int port() {$/;"	m	class:NioSelectorScheduler.ListenTask
posToLabelMap	src/kilim/analysis/MethodFlow.java	/^    private ArrayList<LabelNode>           posToLabelMap;$/;"	f	class:MethodFlow	file:
post	src/kilim/http/HttpSession.java	/^    static byte[] post = "<\/body><\/html>".getBytes();$/;"	f	class:HttpSession
ppn	src/kilim/tools/DumpClass.java	/^    public void ppn(String s) {$/;"	m	class:DumpMethodVisitor
pre	src/kilim/http/HttpSession.java	/^    static byte[] pre  = "<html><body><p>".getBytes();$/;"	f	class:HttpSession
preferredResumeThread	src/kilim/Task.java	/^    volatile WorkerThread    preferredResumeThread;$/;"	f	class:Task
preferredScheduler	src/kilim/nio/SessionTask.java	/^  public Scheduler preferredScheduler;$/;"	f	class:SessionTask
printAnswer	src/examples/Calculation.java	/^	public String printAnswer() {$/;"	m	class:Calculation
printBits	src/kilim/analysis/Usage.java	/^    private void printBits(StringBuffer sb, BitSet b) {$/;"	m	class:Usage	file:
problem	src/examples/HttpFileServer.java	/^    public void problem(File file, HttpResponse resp, byte[] statusCode, String msg) throws IOException, Pausable {$/;"	m	class:HttpFileServer
problem	src/kilim/examples/HttpFileServer.java	/^    public void problem(File file, HttpResponse resp, byte[] statusCode, String msg) throws IOException, Pausable {$/;"	m	class:HttpFileServer
problem	src/kilim/http/HttpSession.java	/^    public void problem(HttpResponse resp, byte[] statusCode, String htmlMsg) throws IOException, Pausable {$/;"	m	class:HttpSession
processArgs	src/kilim/tools/Kilim.java	/^    private static String[] processArgs(String[] args) {$/;"	m	class:Kilim	file:
ps	src/kilim/tools/P.java	/^    public static void ps(Object o) {$/;"	m	class:P
ptest	src/kilim/tools/P.java	/^    public static void ptest() {$/;"	m	class:P
publicClassNameRegexp	src/kilim/tools/Javac.java	/^    static Pattern publicClassNameRegexp = Pattern.compile("public +(?:class|interface) +(\\\\w+)");$/;"	f	class:Javac
push	src/kilim/analysis/Frame.java	/^    public Value push(Value v) {$/;"	m	class:Frame
put	src/kilim/Cell.java	/^    public boolean put(T amsg, EventSubscriber eo) {$/;"	m	class:Cell
put	src/kilim/Cell.java	/^    public boolean put(T msg, int timeoutMillis) throws Pausable {$/;"	m	class:Cell
put	src/kilim/Cell.java	/^    public void put(T msg) throws Pausable {$/;"	m	class:Cell
put	src/kilim/Mailbox.java	/^    public boolean put(T msg, EventSubscriber eo) {$/;"	m	class:Mailbox
put	src/kilim/Mailbox.java	/^    public boolean put(T msg, int timeoutMillis) throws Pausable {$/;"	m	class:Mailbox
put	src/kilim/Mailbox.java	/^    public void put(T msg) throws Pausable {$/;"	m	class:Mailbox
put	src/kilim/RingQueue.java	/^    public boolean put(T elem) {$/;"	m	class:RingQueue
put	src/kilim/http/KeyValues.java	/^  public void put(String key, String value) {$/;"	m	class:KeyValues
putBackLine	src/kilim/tools/Asm.java	/^    private void putBackLine() {$/;"	m	class:Asm	file:
putb	src/kilim/Cell.java	/^    public void putb(T msg) {$/;"	m	class:Cell
putb	src/kilim/Cell.java	/^    public void putb(T msg, final long timeoutMillis) {$/;"	m	class:Cell
putb	src/kilim/Mailbox.java	/^    public void putb(T msg) {$/;"	m	class:Mailbox
putb	src/kilim/Mailbox.java	/^    public void putb(T msg, final long timeoutMillis) {$/;"	m	class:Mailbox
putnb	src/kilim/Cell.java	/^    public boolean putnb(T msg) {$/;"	m	class:Cell
putnb	src/kilim/Mailbox.java	/^    public boolean putnb(T msg) {$/;"	m	class:Mailbox
queryStringRange	src/kilim/http/HttpRequest.java	/^    public int    queryStringRange;$/;"	f	class:HttpRequest
quiet	src/kilim/tools/Asm.java	/^    static boolean                  quiet          = false;$/;"	f	class:Asm
quotedPattern	src/kilim/tools/Asm.java	/^    static final Pattern quotedPattern     = Pattern.compile("(.*)");$/;"	f	class:Asm
read	src/kilim/analysis/Usage.java	/^    public void read(int var) {$/;"	m	class:Usage
readAllChunks	src/kilim/http/HttpRequest.java	/^    public void readAllChunks(EndPoint endpoint) throws IOException, Pausable {$/;"	m	class:HttpRequest
readBody	src/kilim/http/HttpRequest.java	/^    public void readBody(EndPoint endpoint) throws Pausable, IOException {$/;"	m	class:HttpRequest
readFile	src/kilim/tools/Javac.java	/^    private static byte[] readFile(File f) throws IOException {$/;"	m	class:Javac	file:
readFrom	src/kilim/http/HttpRequest.java	/^    public void readFrom(EndPoint endpoint) throws Pausable, IOException {$/;"	m	class:HttpRequest
readFully	src/kilim/WeavingClassLoader.java	/^    private static byte[] readFully(FileLister.Entry fe) throws IOException {$/;"	m	class:WeavingClassLoader	file:
readHeader	src/kilim/http/HttpRequest.java	/^    public void readHeader(EndPoint endpoint) throws Pausable, IOException {$/;"	m	class:HttpRequest
readLine	src/kilim/http/HttpRequest.java	/^    public int readLine(EndPoint endpoint) throws IOException, Pausable {$/;"	m	class:HttpRequest
readLine	src/kilim/tools/Asm.java	/^    private Line readLine() {$/;"	m	class:Asm	file:
readPkt	src/examples/Ping.java	/^        private static void readPkt(SocketChannel ch, ByteBuffer bb) throws IOException, EOFException {$/;"	m	class:Ping.Client	file:
readPkt	src/kilim/examples/Ping.java	/^        private static void readPkt(SocketChannel ch, ByteBuffer bb) throws IOException, EOFException {$/;"	m	class:Ping.Client	file:
readRequest	src/kilim/http/HttpSession.java	/^    public HttpRequest readRequest(HttpRequest req) throws IOException, Pausable {$/;"	m	class:HttpSession
readTrailers	src/kilim/http/HttpRequest.java	/^    public void readTrailers(EndPoint endpoint) {$/;"	m	class:HttpRequest
reader	src/kilim/tools/Asm.java	/^    private LineNumberReader        reader;$/;"	f	class:Asm	file:
red	src/cn/hnu/eg/util/Signal.java	/^	red,dark$/;"	e	enum:Signal	file:
registrationMbx	src/kilim/nio/NioSelectorScheduler.java	/^    public Mailbox<SockEvent> registrationMbx = new Mailbox<SockEvent>(1000);$/;"	f	class:NioSelectorScheduler
releaseVar	src/kilim/analysis/CallWeaver.java	/^    private void releaseVar(int var, int size) {$/;"	m	class:CallWeaver	file:
remove	src/kilim/Generator.java	/^    public void remove() {$/;"	m	class:Generator
remove	src/kilim/Mailbox.java	/^	public T remove(final int idx) {$/;"	m	class:Mailbox
remove	src/kilim/analysis/FileLister.java	/^    public void remove() {$/;"	m	class:DirIterator
remove	src/kilim/analysis/FileLister.java	/^    public void remove() {$/;"	m	class:JarIterator
removeMsgAvailableListener	src/kilim/Cell.java	/^    public synchronized void removeMsgAvailableListener(EventSubscriber msgSub) {$/;"	m	class:Cell
removeMsgAvailableListener	src/kilim/Mailbox.java	/^    public synchronized void removeMsgAvailableListener(EventSubscriber msgSub) {$/;"	m	class:Mailbox
removeSpaceAvailableListener	src/kilim/Cell.java	/^    public synchronized void removeSpaceAvailableListener(EventSubscriber spcSub) {$/;"	m	class:Cell
removeSpaceAvailableListener	src/kilim/Mailbox.java	/^    public synchronized void removeSpaceAvailableListener(EventSubscriber spcSub) {$/;"	m	class:Mailbox
replyTo	src/kilim/nio/SockEvent.java	/^  public Mailbox<SockEvent> replyTo; $/;"	f	class:SockEvent
reportFlow	src/kilim/tools/FlowAnalyzer.java	/^    private static void reportFlow(MethodFlow method, String className) {$/;"	m	class:FlowAnalyzer	file:
reset	src/kilim/RingQueue.java	/^    public void reset() {$/;"	m	class:RingQueue
reset	src/kilim/analysis/ClassWeaver.java	/^    public static void reset() {$/;"	m	class:ClassWeaver
resetIndentation	src/kilim/analysis/Utils.java	/^    public static void resetIndentation() {$/;"	m	class:Utils
resetLabels	src/kilim/analysis/MethodFlow.java	/^    public void resetLabels() {$/;"	m	class:MethodFlow
restoreNonInstructionNodes	src/kilim/analysis/MethodFlow.java	/^    public void restoreNonInstructionNodes() {$/;"	m	class:MethodFlow
result	src/kilim/ExitMsg.java	/^    public final Object result; \/\/ contains Throwable if exitCode == 1$/;"	f	class:ExitMsg
results	src/kilim/TaskGroup.java	/^    public List<ExitMsg> results = Collections.synchronizedList(new ArrayList<ExitMsg>());$/;"	f	class:TaskGroup
resume	src/kilim/Task.java	/^    public boolean resume() {$/;"	m	class:Task
resumeLabel	src/kilim/analysis/CallWeaver.java	/^    private LabelNode    resumeLabel;$/;"	f	class:CallWeaver	file:
resumeOnScheduler	src/kilim/Task.java	/^    public void resumeOnScheduler(Scheduler s) throws Pausable {$/;"	m	class:Task
retInsn	src/kilim/analysis/CallWeaver.java	/^    static final int[]    retInsn   = { ARETURN, IRETURN, LRETURN, DRETURN,$/;"	f	class:VMType
reuse	src/kilim/http/HttpRequest.java	/^    public void reuse() {$/;"	m	class:HttpRequest
reuse	src/kilim/http/HttpResponse.java	/^    public void reuse() {$/;"	m	class:HttpResponse
root	src/kilim/analysis/FileLister.java	/^    final File root;$/;"	f	class:DirIterator
run	src/examples/Ping.java	/^        public static void run() throws IOException {$/;"	m	class:Ping.Client
run	src/examples/Ping.java	/^        public static void run() throws IOException {$/;"	m	class:Ping.Server
run	src/examples/TestConcurrencyWithJava.java	/^	public void run() {$/;"	m	class:TestConcurrencyWithJava
run	src/kilim/WorkerThread.java	/^    public void run() {$/;"	m	class:WorkerThread
run	src/kilim/examples/Ping.java	/^        public static void run() throws IOException {$/;"	m	class:Ping.Client
run	src/kilim/examples/Ping.java	/^        public static void run() throws IOException {$/;"	m	class:Ping.Server
run	src/kilim/nio/NioSelectorScheduler.java	/^        public void run() {$/;"	m	class:NioSelectorScheduler.SelectorThread
runnableTasks	src/kilim/Scheduler.java	/^    public RingQueue<Task> runnableTasks = new RingQueue<Task>(100);$/;"	f	class:Scheduler
running	src/kilim/Task.java	/^    protected boolean  running = false;$/;"	f	class:Task
runningTask	src/kilim/WorkerThread.java	/^    volatile Task        runningTask;$/;"	f	class:WorkerThread
s	src/kilim/tools/Asm.java	/^    String         s;$/;"	f	class:Line
schedule	src/kilim/Scheduler.java	/^    public void schedule(Task t) {$/;"	m	class:Scheduler
schedule	src/kilim/nio/NioSelectorScheduler.java	/^    public void schedule(Task t) {$/;"	m	class:NioSelectorScheduler
scheduler	src/kilim/Task.java	/^    protected Scheduler        scheduler;$/;"	f	class:Task
scheduler	src/kilim/WorkerThread.java	/^    Scheduler            scheduler;$/;"	f	class:WorkerThread
sel	src/kilim/nio/NioSelectorScheduler.java	/^    public Selector           sel;$/;"	f	class:NioSelectorScheduler
select	src/kilim/Mailbox.java	/^    public static int select(Mailbox... mboxes) throws Pausable {$/;"	m	class:Mailbox
selector	src/kilim/nio/NioSelectorScheduler.java	/^        Selector           selector;$/;"	f	class:NioSelectorScheduler.RegistrationTask
selectorThread	src/kilim/nio/NioSelectorScheduler.java	/^    public SelectorThread     selectorThread;$/;"	f	class:NioSelectorScheduler
self	src/kilim/State.java	/^    public Object self;$/;"	f	class:State
sendDirectory	src/examples/HttpFileServer.java	/^    public void sendDirectory(HttpResponse resp, File file, boolean headOnly) throws Pausable, IOException {$/;"	m	class:HttpFileServer
sendDirectory	src/kilim/examples/HttpFileServer.java	/^    public void sendDirectory(HttpResponse resp, File file, boolean headOnly) throws Pausable, IOException {$/;"	m	class:HttpFileServer
sendFile	src/examples/HttpFileServer.java	/^    public void sendFile(HttpResponse resp, File file, boolean headOnly) throws IOException, Pausable {$/;"	m	class:HttpFileServer
sendFile	src/kilim/examples/HttpFileServer.java	/^    public void sendFile(HttpResponse resp, File file, boolean headOnly) throws IOException, Pausable {$/;"	m	class:HttpFileServer
sendResponse	src/kilim/http/HttpSession.java	/^    public void sendResponse(HttpResponse resp) throws IOException, Pausable {$/;"	m	class:HttpSession
serialVersionUID	src/kilim/KilimException.java	/^    private static final long serialVersionUID = 7856831331381969854L;$/;"	f	class:KilimException	file:
serialVersionUID	src/kilim/NotPausable.java	/^    private static final long serialVersionUID = 1L;$/;"	f	class:NotPausable	file:
serialVersionUID	src/kilim/Pausable.java	/^    private static final long serialVersionUID = 1L;$/;"	f	class:Pausable	file:
serialVersionUID	src/kilim/ReentrantLock.java	/^    private static final long serialVersionUID = 1L;$/;"	f	class:ReentrantLock	file:
serialVersionUID	src/kilim/ShutdownException.java	/^    private static final long serialVersionUID = 1L;$/;"	f	class:ShutdownException	file:
serialVersionUID	src/kilim/analysis/BBList.java	/^    private static final long serialVersionUID = -1768924113292685739L;$/;"	f	class:BBList	file:
serialVersionUID	src/kilim/analysis/CallWeaver.java	/^    private static final long serialVersionUID = -2339264992519046024L;$/;"	f	class:ValInfoList	file:
serialVersionUID	src/kilim/analysis/IncompatibleTypesException.java	/^    private static final long serialVersionUID = 1270645277746840738L;$/;"	f	class:IncompatibleTypesException	file:
serialVersionUID	src/kilim/mirrors/ClassMirrorNotFoundException.java	/^	private static final long serialVersionUID = 5147833200948234264L;$/;"	f	class:ClassMirrorNotFoundException	file:
server	src/examples/Ping.java	/^    static boolean server = false;$/;"	f	class:Ping
server	src/kilim/examples/Ping.java	/^    static boolean server = false;$/;"	f	class:Ping
sessionClass	src/kilim/nio/NioSelectorScheduler.java	/^        Class<? extends SessionTask> sessionClass;$/;"	f	class:NioSelectorScheduler.ListenTask
setAnswer	src/examples/Calculation.java	/^	public void setAnswer(BigDecimal answer) {$/;"	m	class:Calculation
setContentLength	src/kilim/http/HttpResponse.java	/^    public void setContentLength(long length) {$/;"	m	class:HttpResponse
setContentType	src/kilim/http/HttpResponse.java	/^    public void setContentType(String contentType) {$/;"	m	class:HttpResponse
setCount	src/kilim/nio/ExposedBais.java	/^  public void setCount(int n) {$/;"	m	class:ExposedBais
setCount	src/kilim/nio/ExposedBaos.java	/^  public void setCount(int n) {$/;"	m	class:ExposedBaos
setDefaultScheduler	src/kilim/Scheduler.java	/^    public static void setDefaultScheduler(Scheduler s) {$/;"	m	class:Scheduler
setDetector	src/kilim/mirrors/Detector.java	/^    public static Detector setDetector(Detector d) {$/;"	m	class:Detector
setEndPoint	src/kilim/nio/SessionTask.java	/^  public void setEndPoint(EndPoint ep) throws IOException {$/;"	m	class:SessionTask
setFilename	src/cn/hnu/eg/ds/Graph.java	/^	public void setFilename(String filename) {$/;"	m	class:Graph
setFlag	src/kilim/analysis/BasicBlock.java	/^    public void setFlag(int bitFlag) {$/;"	m	class:BasicBlock
setGraph	src/cn/hnu/eg/sys/Master.java	/^	public void setGraph(Graph graph) {$/;"	m	class:Master
setId	src/kilim/analysis/BasicBlock.java	/^    void setId(int aid) {$/;"	m	class:BasicBlock
setInstruction	src/kilim/analysis/BasicBlock.java	/^    void setInstruction(int pos, AbstractInsnNode insn) {$/;"	m	class:BasicBlock
setLabel	src/kilim/analysis/MethodFlow.java	/^    void setLabel(int pos, LabelNode l) {$/;"	m	class:MethodFlow
setListOfVertices	src/cn/hnu/eg/ds/Graph.java	/^	public void setListOfVertices(List<Vertex> listOfVertices) {$/;"	m	class:Graph
setLiveIn	src/kilim/analysis/Usage.java	/^    public void setLiveIn(int var) {$/;"	m	class:Usage
setLocal	src/kilim/analysis/Frame.java	/^    public int setLocal(int local, Value v) {$/;"	m	class:Frame
setMailbox	src/cn/hnu/eg/base/Vertex.java	/^	public void setMailbox(Mailbox<Message> mailbox) {$/;"	m	class:Vertex
setMailbox	src/cn/hnu/eg/sys/Master.java	/^	public void setMailbox(Mailbox<Signal> mailbox) {$/;"	m	class:Master
setNowState	src/cn/hnu/eg/base/Vertex.java	/^	public void setNowState(State nowState) {$/;"	m	class:Vertex
setNumOfHalt	src/cn/hnu/eg/sys/Master.java	/^	public void setNumOfHalt(int numOfHalt) {$/;"	m	class:Master
setNumOfVertices	src/cn/hnu/eg/ds/Graph.java	/^	public void setNumOfVertices(int numOfVertices) {$/;"	m	class:Graph
setPausable	src/kilim/analysis/MethodFlow.java	/^    public void setPausable(boolean isPausable) {$/;"	m	class:MethodFlow
setPauseReason	src/kilim/Task.java	/^    final protected void setPauseReason(PauseReason pr) {$/;"	m	class:Task
setScheduler	src/kilim/Task.java	/^    public synchronized Task setScheduler(Scheduler s) {$/;"	m	class:Task
setState	src/kilim/Fiber.java	/^    public void setState(State state) {$/;"	m	class:Fiber
setStatus	src/kilim/http/HttpResponse.java	/^    public void setStatus(String statusMsg) {$/;"	m	class:HttpResponse
setV_id	src/cn/hnu/eg/base/Vertex.java	/^	public void setV_id(int v_id) {$/;"	m	class:Vertex
setValue	src/cn/hnu/eg/base/Vertex.java	/^	public void setValue(int value) {$/;"	m	class:Vertex
setVertexClassName	src/cn/hnu/eg/ds/Graph.java	/^	public void setVertexClassName(String vertexClassName) {$/;"	m	class:Graph
setYellowBook	src/cn/hnu/eg/base/Vertex.java	/^	public void setYellowBook(List<Mailbox<Message>> yellowBook) {$/;"	m	class:Vertex
shutdown	src/kilim/Scheduler.java	/^    protected volatile boolean shutdown = false;$/;"	f	class:Scheduler
shutdown	src/kilim/Scheduler.java	/^    public void shutdown() {$/;"	m	class:Scheduler
shutdown	src/kilim/nio/NioSelectorScheduler.java	/^    public void shutdown() {$/;"	m	class:NioSelectorScheduler
singleton	src/kilim/mirrors/CachedClassMirrors.java	/^        static DummyAnnotationVisitor singleton = new DummyAnnotationVisitor();$/;"	f	class:CachedClassMirror.DummyAnnotationVisitor
sink	src/kilim/Cell.java	/^    EventSubscriber sink;$/;"	f	class:Cell
sink	src/kilim/Mailbox.java	/^    EventSubscriber sink;$/;"	f	class:Mailbox
sites	src/kilim/analysis/Value.java	/^    private int[] sites;$/;"	f	class:Value	file:
size	src/cn/hnu/eg/ds/Graph.java	/^	public int size() {		$/;"	m	class:Graph
size	src/cn/hnu/eg/util/test/Utils.java	/^ public static int size(final Object o) throws IOException {$/;"	m	class:Utils
size	src/kilim/Mailbox.java	/^    public synchronized int size() {$/;"	m	class:Mailbox
size	src/kilim/RingQueue.java	/^    protected int size;$/;"	f	class:RingQueue
size	src/kilim/RingQueue.java	/^    public int size() {$/;"	m	class:RingQueue
sleep	src/kilim/Task.java	/^    public static void sleep(final long millis) throws Pausable {$/;"	m	class:Task
sockEvMbx	src/kilim/nio/EndPoint.java	/^    public Mailbox<SockEvent>        sockEvMbx;$/;"	f	class:EndPoint
sockch	src/kilim/nio/EndPoint.java	/^    public AbstractSelectableChannel sockch;$/;"	f	class:EndPoint
spaceAvailble	src/kilim/Cell.java	/^    public static final Event spaceAvailble = new Event(MSG_AVAILABLE);$/;"	f	class:Cell
spaceAvailble	src/kilim/Mailbox.java	/^    public static final Event spaceAvailble = new Event(MSG_AVAILABLE);$/;"	f	class:Mailbox
spaces	src/kilim/analysis/Utils.java	/^    public static String spaces    = "                                        ";$/;"	f	class:Utils
split	src/kilim/tools/Asm.java	/^    static String[] split(Pattern p, String s) {$/;"	m	class:Asm
srcCode	src/kilim/tools/Javac.java	/^        public String srcCode;$/;"	f	class:Javac.SourceInfo
srcs	src/kilim/Cell.java	/^    LinkedList<EventSubscriber> srcs = new LinkedList<EventSubscriber>();$/;"	f	class:Cell
srcs	src/kilim/Mailbox.java	/^    LinkedList<EventSubscriber> srcs = new LinkedList<EventSubscriber>();$/;"	f	class:Mailbox
ssc	src/kilim/nio/NioSelectorScheduler.java	/^        ServerSocketChannel          ssc;$/;"	f	class:NioSelectorScheduler.ListenTask
stInsn	src/kilim/analysis/CallWeaver.java	/^    static final int[]    stInsn    = { ASTORE_0, ISTORE_0, LSTORE_0, DSTORE_0,$/;"	f	class:VMType
stack	src/kilim/analysis/FileLister.java	/^    Stack<File> stack = new Stack<File>();$/;"	f	class:DirIterator
stack	src/kilim/analysis/Frame.java	/^    Value[] stack;$/;"	f	class:Frame
stackPattern	src/kilim/tools/Asm.java	/^    static Pattern stackPattern      = Pattern.compile(".limit +stack +([0-9]+)");$/;"	f	class:Asm
stackTrace	src/kilim/tools/FlowAnalyzer.java	/^    private static void stackTrace(Throwable t) {$/;"	m	class:FlowAnalyzer	file:
stacklen	src/kilim/analysis/Frame.java	/^    int stacklen = 0;$/;"	f	class:Frame
start	src/kilim/Task.java	/^    public Task start() {$/;"	m	class:Task
startFrame	src/kilim/analysis/BasicBlock.java	/^    public Frame                  startFrame;$/;"	f	class:BasicBlock
startLabel	src/kilim/analysis/BasicBlock.java	/^    public LabelNode                  startLabel;$/;"	f	class:BasicBlock
startPos	src/kilim/analysis/BasicBlock.java	/^    public int                    startPos = -1;$/;"	f	class:BasicBlock
startsWith	src/kilim/tools/Asm.java	/^    public boolean startsWith(String str) {$/;"	m	class:Line
state	src/cn/hnu/eg/sys/InferiorMessage.java	/^	private State state;$/;"	f	class:InferiorMessage	file:
stateClassName	src/kilim/analysis/CallWeaver.java	/^    private String       stateClassName;$/;"	f	class:CallWeaver	file:
stateClasses_	src/kilim/analysis/ClassWeaver.java	/^    static ThreadLocal<HashMap<String, ClassInfo>> stateClasses_ = $/;"	f	class:ClassWeaver
stateStack	src/kilim/Fiber.java	/^    private State[]            stateStack              = new State[10];$/;"	f	class:Fiber	file:
stateToString	src/kilim/Fiber.java	/^    static private void stateToString(StringBuilder sb, State s) {$/;"	m	class:Fiber	file:
static_test	src/examples/Reflect.java	/^  public static int static_test() throws Pausable {$/;"	m	class:Reflect
static_test	src/kilim/examples/Reflect.java	/^  public static int static_test() throws Pausable {$/;"	m	class:Reflect
status	src/kilim/http/HttpResponse.java	/^    public byte[]                                   status;$/;"	f	class:HttpResponse
statusToStr	src/kilim/mirrors/Detector.java	/^    private static String statusToStr(int st) {$/;"	m	class:Detector	file:
storeInsn	src/kilim/analysis/CallWeaver.java	/^    static final int[]    storeInsn = { ASTORE, ISTORE, LSTORE, DSTORE, FSTORE };$/;"	f	class:VMType
storeVar	src/kilim/analysis/CallWeaver.java	/^    static void storeVar(MethodVisitor mv, int vmt, int var) {$/;"	m	class:VMType
subBlocks	src/kilim/analysis/BasicBlock.java	/^    ArrayList<BasicBlock> subBlocks;$/;"	f	class:BasicBlock
succUsage	src/kilim/analysis/BasicBlock.java	/^    ArrayList<Usage>      succUsage;$/;"	f	class:BasicBlock
successors	src/kilim/analysis/BasicBlock.java	/^    public ArrayList<BasicBlock>  successors         = new ArrayList<BasicBlock>(3);$/;"	f	class:BasicBlock
superClasses	src/kilim/analysis/AsmDetector.java	/^        LinkedList<String> superClasses = new LinkedList<String>();$/;"	f	class:AsmDetector.ClassCache
superName	src/kilim/mirrors/CachedClassMirrors.java	/^    String superName;$/;"	f	class:CachedClassMirror
superPattern	src/kilim/tools/Asm.java	/^    private static Pattern superPattern = Pattern.compile("\\\\.super (" + classNamePatternStr + ")$");$/;"	f	class:Asm	file:
suppressPausableCheck	src/kilim/analysis/MethodFlow.java	/^    private boolean suppressPausableCheck;$/;"	f	class:MethodFlow	file:
swapRunnables	src/kilim/nio/NioSelectorScheduler.java	/^    synchronized RingQueue<Task> swapRunnables(RingQueue<Task> emptyRunnables) {$/;"	m	class:NioSelectorScheduler
task	src/kilim/ExitMsg.java	/^    public final Task task; \/\/ exiting task$/;"	f	class:ExitMsg
task	src/kilim/Fiber.java	/^    public Task                      task;$/;"	f	class:Fiber
task	src/kilim/Fiber.java	/^    public Task task() {$/;"	m	class:Fiber
task	src/kilim/Mailbox.java	/^    final Task task;$/;"	f	class:EmptySet_MsgAvListener
task_id	src/examples/TestConcurrencyWithKilim.java	/^	private int task_id;$/;"	f	class:TestConcurrencyWithKilim	file:
tasks	src/kilim/TaskGroup.java	/^    private HashSet<Task> tasks = new HashSet<Task>();$/;"	f	class:TaskGroup	file:
tasks	src/kilim/WorkerThread.java	/^    RingQueue<Task>      tasks      = new RingQueue<Task>(10);$/;"	f	class:WorkerThread
test	src/examples/Reflect.java	/^  public int test() throws Pausable {$/;"	m	class:Reflect
test	src/kilim/examples/Reflect.java	/^  public int test() throws Pausable {$/;"	m	class:Reflect
thread_id	src/examples/TestConcurrencyWithJava.java	/^	private int thread_id;$/;"	f	class:TestConcurrencyWithJava	file:
throwsPattern	src/kilim/tools/Asm.java	/^    private static Pattern throwsPattern = Pattern.compile("^ *\\\\.throws +(" + classNamePatternStr + ")");$/;"	f	class:Asm	file:
timedOut	src/kilim/Cell.java	/^    public static final Event timedOut = new Event(TIMED_OUT);$/;"	f	class:Cell
timedOut	src/kilim/Mailbox.java	/^    public static final Event timedOut = new Event(TIMED_OUT);$/;"	f	class:Mailbox
timer	src/kilim/Task.java	/^    public final static Timer timer = new Timer(true);$/;"	f	class:Task
tmpMethodList	src/kilim/mirrors/CachedClassMirrors.java	/^    private List<CachedMethodMirror> tmpMethodList; \/\/used only while processing bytecode. $/;"	f	class:CachedClassMirror	file:
to	src/kilim/analysis/Handler.java	/^    public int        to;$/;"	f	class:Handler
to	src/kilim/analysis/Range.java	/^    int to;$/;"	f	class:Range
toArray	src/kilim/tools/Asm.java	/^    public String[] toArray() {$/;"	m	class:StringList
toByteArray	src/kilim/nio/ExposedBais.java	/^  public byte[] toByteArray() {$/;"	m	class:ExposedBais
toByteArray	src/kilim/nio/ExposedBaos.java	/^  public byte[] toByteArray() {$/;"	m	class:ExposedBaos
toByteBuffer	src/kilim/nio/ExposedBaos.java	/^  public ByteBuffer toByteBuffer() {$/;"	m	class:ExposedBaos
toClassName	src/kilim/mirrors/Detector.java	/^    private static String toClassName(String s) {$/;"	m	class:Detector	file:
toDesc	src/kilim/mirrors/Detector.java	/^    private static String toDesc(String name) {$/;"	m	class:Detector	file:
toString	src/cn/hnu/eg/base/Vertex.java	/^	@Override public String toString(){$/;"	m	class:Vertex
toString	src/cn/hnu/eg/sys/InferiorMessage.java	/^	@Override public String toString(){$/;"	m	class:InferiorMessage
toString	src/kilim/Cell.java	/^    public synchronized String toString() {$/;"	m	class:Cell
toString	src/kilim/ExitMsg.java	/^    public String toString() {$/;"	m	class:ExitMsg
toString	src/kilim/Fiber.java	/^    public String toString() {$/;"	m	class:Fiber
toString	src/kilim/Mailbox.java	/^    public synchronized String toString() {$/;"	m	class:Mailbox
toString	src/kilim/RingQueue.java	/^    public String toString() {$/;"	m	class:RingQueue
toString	src/kilim/Task.java	/^    public String toString() {$/;"	m	class:Task
toString	src/kilim/TaskDoneReason.java	/^    public String toString() {$/;"	m	class:TaskDoneReason
toString	src/kilim/YieldReason.java	/^    public String toString() {$/;"	m	class:YieldReason
toString	src/kilim/analysis/AsmDetector.java	/^        public String toString() {$/;"	m	class:AsmDetector.ClassCache
toString	src/kilim/analysis/BasicBlock.java	/^    public String toString() {$/;"	m	class:BasicBlock
toString	src/kilim/analysis/ClassInfo.java	/^    public String toString() {$/;"	m	class:ClassInfo
toString	src/kilim/analysis/Frame.java	/^    public String toString() {$/;"	m	class:Frame
toString	src/kilim/analysis/MethodFlow.java	/^    private String toString(String className, String methName, String desc) {$/;"	m	class:MethodFlow	file:
toString	src/kilim/analysis/MethodFlow.java	/^    public String toString() {$/;"	m	class:MethodFlow
toString	src/kilim/analysis/NopInsn.java	/^    public String toString() {$/;"	m	class:NopInsn
toString	src/kilim/analysis/Usage.java	/^    public String toString() {$/;"	m	class:Usage
toString	src/kilim/analysis/Value.java	/^    public String toString() {$/;"	m	class:Value
toString	src/kilim/http/HttpRequest.java	/^    public String toString() {$/;"	m	class:HttpRequest
toString	src/kilim/http/KeyValues.java	/^  public String toString() {$/;"	m	class:KeyValues
toString	src/kilim/nio/NioSelectorScheduler.java	/^        public String toString() {$/;"	m	class:NioSelectorScheduler.ListenTask
toString	src/kilim/tools/Asm.java	/^    public String toString() {$/;"	m	class:Line
toStringArray	src/kilim/analysis/ClassWeaver.java	/^    static String[] toStringArray(List list) {$/;"	m	class:ClassWeaver
toValue	src/cn/hnu/eg/sys/InferiorMessage.java	/^	public int toValue() {$/;"	m	class:InferiorMessage
toValue	src/cn/hnu/eg/sys/Message.java	/^	public int toValue();	$/;"	m	interface:Message
toVmType	src/kilim/analysis/CallWeaver.java	/^    static int toVmType(String type) {$/;"	m	class:VMType
togglePause	src/kilim/Fiber.java	/^    void togglePause() {$/;"	m	class:Fiber
tryLock	src/kilim/ReentrantLock.java	/^    public boolean tryLock() {$/;"	m	class:ReentrantLock
tryLock	src/kilim/ReentrantLock.java	/^    public boolean tryLock(long timeout, TimeUnit unit)$/;"	m	class:ReentrantLock
type	src/kilim/analysis/Handler.java	/^    public String     type;$/;"	f	class:Handler
type	src/kilim/tools/DumpClass.java	/^    private String type(Object o) {$/;"	m	class:DumpMethodVisitor	file:
typeDesc	src/kilim/analysis/Value.java	/^    private String typeDesc;$/;"	f	class:Value	file:
typelen	src/kilim/analysis/TypeDesc.java	/^    private static int typelen(char[] buf, int off) {$/;"	m	class:TypeDesc	file:
uniqueItems	src/kilim/tools/FlowAnalyzer.java	/^    private static String uniqueItems(BasicBlock bb, Frame f, Usage u, int nStack) {$/;"	m	class:FlowAnalyzer	file:
unlock	src/kilim/ReentrantLock.java	/^    public void unlock() {$/;"	m	class:ReentrantLock
unpinFromThread	src/kilim/Task.java	/^    public void unpinFromThread() {$/;"	m	class:Task
unsetFlag	src/kilim/analysis/BasicBlock.java	/^    public void unsetFlag(int bitFlag) {$/;"	m	class:BasicBlock
untilHasMessage	src/kilim/Mailbox.java	/^	public boolean untilHasMessage(long timeoutMillis) throws Pausable {$/;"	m	class:Mailbox
untilHasMessage	src/kilim/Mailbox.java	/^	public void untilHasMessage() throws Pausable {$/;"	m	class:Mailbox
untilHasMessages	src/kilim/Mailbox.java	/^	public boolean untilHasMessages(int num, long timeoutMillis)$/;"	m	class:Mailbox
untilHasMessages	src/kilim/Mailbox.java	/^	public void untilHasMessages(int num) throws Pausable {$/;"	m	class:Mailbox
up	src/kilim/Fiber.java	/^    public int up() {$/;"	m	class:Fiber
upEx	src/kilim/Fiber.java	/^    public int upEx() {$/;"	m	class:Fiber
uriFragment	src/kilim/http/HttpRequest.java	/^    public String uriFragment() {$/;"	m	class:HttpRequest
uriFragmentRange	src/kilim/http/HttpRequest.java	/^    public int    uriFragmentRange;$/;"	f	class:HttpRequest
uriPath	src/kilim/http/HttpRequest.java	/^    public String uriPath;$/;"	f	class:HttpRequest
urlToPath	src/examples/HttpFileServer.java	/^    private File urlToPath(HttpRequest req) {$/;"	m	class:HttpFileServer	file:
urlToPath	src/kilim/examples/HttpFileServer.java	/^    private File urlToPath(HttpRequest req) {$/;"	m	class:HttpFileServer	file:
usage	src/examples/HttpFileServer.java	/^    public static void usage() {$/;"	m	class:HttpFileServer
usage	src/examples/Ping.java	/^    static private void usage() {$/;"	m	class:Ping	file:
usage	src/kilim/analysis/BasicBlock.java	/^    public Usage                  usage;$/;"	f	class:BasicBlock
usage	src/kilim/examples/HttpFileServer.java	/^    public static void usage() {$/;"	m	class:HttpFileServer
usage	src/kilim/examples/Ping.java	/^    static private void usage() {$/;"	m	class:Ping	file:
usage	src/kilim/tools/Kilim.java	/^    private static void usage() {$/;"	m	class:Kilim	file:
use	src/kilim/analysis/Usage.java	/^    private BitSet use;$/;"	f	class:Usage	file:
v_id	src/cn/hnu/eg/base/Vertex.java	/^	private int v_id;$/;"	f	class:Vertex	file:
val	src/kilim/analysis/CallWeaver.java	/^    Value  val;$/;"	f	class:ValInfo
valInfoList	src/kilim/analysis/CallWeaver.java	/^    private ValInfoList  valInfoList;$/;"	f	class:CallWeaver	file:
value	src/cn/hnu/eg/base/Vertex.java	/^	private int value;$/;"	f	class:Vertex	file:
value	src/cn/hnu/eg/sys/InferiorMessage.java	/^	private int value ;$/;"	f	class:InferiorMessage	file:
valueRanges	src/kilim/http/HttpRequest.java	/^    public int[]  valueRanges;$/;"	f	class:HttpRequest
values	src/kilim/http/HttpResponse.java	/^    public ArrayList<String>                        values                           = new ArrayList<String>();$/;"	f	class:HttpResponse
values	src/kilim/http/KeyValues.java	/^  public String[] values;$/;"	f	class:KeyValues
var	src/kilim/analysis/CallWeaver.java	/^    int    var = -1;$/;"	f	class:ValInfo
varUsage	src/kilim/analysis/CallWeaver.java	/^    BitSet               varUsage;$/;"	f	class:CallWeaver
verbose	src/kilim/tools/Weaver.java	/^    public static boolean verbose = true;$/;"	f	class:Weaver
verifyPausables	src/kilim/analysis/MethodFlow.java	/^    public void verifyPausables() throws KilimException {$/;"	m	class:MethodFlow
version	src/kilim/http/HttpRequest.java	/^    public String version() {$/;"	m	class:HttpRequest
versionRange	src/kilim/http/HttpRequest.java	/^    public int    versionRange;$/;"	f	class:HttpRequest
vertexClassName	src/cn/hnu/eg/ds/Graph.java	/^	private String vertexClassName;$/;"	f	class:Graph	file:
vertexClassName	src/cn/hnu/eg/util/EasyGraphConstant.java	/^	public final static String vertexClassName = "cn.hnu.eg.sys.MaxValueVertex";$/;"	f	interface:EasyGraphConstant
visit	src/kilim/mirrors/CachedClassMirrors.java	/^        public void visit(String name, Object value) {}$/;"	m	class:CachedClassMirror.DummyAnnotationVisitor
visit	src/kilim/mirrors/CachedClassMirrors.java	/^    public void visit(int version, int access, String name, String signature, String superName,$/;"	m	class:CachedClassMirror
visit	src/kilim/tools/DumpClass.java	/^    public void visit(String name, Object value) {$/;"	m	class:DummyAnnotationVisitor
visit	src/kilim/tools/DumpClass.java	/^    public void visit(int version, int access, String name, String signature, $/;"	m	class:DumpClass
visitAnnotation	src/kilim/mirrors/CachedClassMirrors.java	/^        public AnnotationVisitor visitAnnotation(String name, String desc) {return this;}$/;"	m	class:CachedClassMirror.DummyAnnotationVisitor
visitAnnotation	src/kilim/mirrors/CachedClassMirrors.java	/^    public AnnotationVisitor visitAnnotation(String desc, boolean visible) {$/;"	m	class:CachedClassMirror
visitAnnotation	src/kilim/tools/DumpClass.java	/^    public AnnotationVisitor visitAnnotation(String desc, boolean visible) {$/;"	m	class:DumpClass
visitAnnotation	src/kilim/tools/DumpClass.java	/^    public AnnotationVisitor visitAnnotation(String desc, boolean visible) {$/;"	m	class:DumpMethodVisitor
visitAnnotation	src/kilim/tools/DumpClass.java	/^    public AnnotationVisitor visitAnnotation(String name, String desc) {$/;"	m	class:DummyAnnotationVisitor
visitAnnotationDefault	src/kilim/tools/DumpClass.java	/^    public AnnotationVisitor visitAnnotationDefault() {$/;"	m	class:DumpMethodVisitor
visitArray	src/kilim/mirrors/CachedClassMirrors.java	/^        public AnnotationVisitor visitArray(String name) {return DummyAnnotationVisitor.singleton;}$/;"	m	class:CachedClassMirror.DummyAnnotationVisitor
visitArray	src/kilim/tools/DumpClass.java	/^    public AnnotationVisitor visitArray(String name) {$/;"	m	class:DummyAnnotationVisitor
visitAttribute	src/kilim/mirrors/CachedClassMirrors.java	/^    public void visitAttribute(Attribute attr) {}$/;"	m	class:CachedClassMirror
visitAttribute	src/kilim/tools/DumpClass.java	/^    public void visitAttribute(Attribute attr) {$/;"	m	class:DumpMethodVisitor
visitAttribute	src/kilim/tools/DumpClass.java	/^    public void visitAttribute(Attribute attr) {}$/;"	m	class:DumpClass
visitAttrs	src/kilim/analysis/MethodWeaver.java	/^    private void visitAttrs(MethodVisitor mv) {$/;"	m	class:MethodWeaver	file:
visitCode	src/kilim/analysis/MethodWeaver.java	/^    private void visitCode(MethodVisitor mv) {$/;"	m	class:MethodWeaver	file:
visitCode	src/kilim/tools/DumpClass.java	/^    public void visitCode() {$/;"	m	class:DumpMethodVisitor
visitEnd	src/kilim/mirrors/CachedClassMirrors.java	/^        public void visitEnd() {}$/;"	m	class:CachedClassMirror.DummyAnnotationVisitor
visitEnd	src/kilim/mirrors/CachedClassMirrors.java	/^    public void visitEnd() {$/;"	m	class:CachedClassMirror
visitEnd	src/kilim/tools/DumpClass.java	/^    public void visitEnd() {$/;"	m	class:DummyAnnotationVisitor
visitEnd	src/kilim/tools/DumpClass.java	/^    public void visitEnd() {$/;"	m	class:DumpMethodVisitor
visitEnd	src/kilim/tools/DumpClass.java	/^    public void visitEnd() {}$/;"	m	class:DumpClass
visitEnum	src/kilim/mirrors/CachedClassMirrors.java	/^        public void visitEnum(String name, String desc, String value) {}$/;"	m	class:CachedClassMirror.DummyAnnotationVisitor
visitEnum	src/kilim/tools/DumpClass.java	/^    public void visitEnum(String name, String desc, String value) {$/;"	m	class:DummyAnnotationVisitor
visitField	src/kilim/mirrors/CachedClassMirrors.java	/^    public FieldVisitor visitField(int access, String name, String desc, String signature,$/;"	m	class:CachedClassMirror
visitField	src/kilim/tools/DumpClass.java	/^    public FieldVisitor visitField(int access, String name, String desc, String signature, Object value) {$/;"	m	class:DumpClass
visitFieldInsn	src/kilim/tools/DumpClass.java	/^    public void visitFieldInsn(int opcode, String owner, String name, String desc) {$/;"	m	class:DumpMethodVisitor
visitFrame	src/kilim/analysis/MethodFlow.java	/^    public void visitFrame(int type, int nLocal, Object[] local, int nStack,$/;"	m	class:MethodFlow
visitFrame	src/kilim/tools/DumpClass.java	/^    public void visitFrame(int type, int nLocal, Object[] local, int nStack, Object[] stack) {$/;"	m	class:DumpMethodVisitor
visitIincInsn	src/kilim/tools/DumpClass.java	/^    public void visitIincInsn(int var, int increment) {$/;"	m	class:DumpMethodVisitor
visitInnerClass	src/kilim/mirrors/CachedClassMirrors.java	/^    public void visitInnerClass(String name, String outerName, String innerName, int access) {}$/;"	m	class:CachedClassMirror
visitInnerClass	src/kilim/tools/DumpClass.java	/^    public void visitInnerClass(String name, String outerName, String innerName, int access) {$/;"	m	class:DumpClass
visitInsn	src/kilim/tools/DumpClass.java	/^    public void visitInsn(int opcode) {$/;"	m	class:DumpMethodVisitor
visitInstructions	src/kilim/analysis/MethodWeaver.java	/^    private void visitInstructions(MethodVisitor mv) {$/;"	m	class:MethodWeaver	file:
visitIntInsn	src/kilim/tools/DumpClass.java	/^    public void visitIntInsn(int opcode, int operand) {$/;"	m	class:DumpMethodVisitor
visitJumpInsn	src/kilim/tools/DumpClass.java	/^    public void visitJumpInsn(int opcode, Label label) {$/;"	m	class:DumpMethodVisitor
visitLabel	src/kilim/analysis/MethodFlow.java	/^    public void visitLabel(Label label) {$/;"	m	class:MethodFlow
visitLabel	src/kilim/tools/DumpClass.java	/^    public void visitLabel(Label label) {$/;"	m	class:DumpMethodVisitor
visitLdcInsn	src/kilim/tools/DumpClass.java	/^    public void visitLdcInsn(Object cst) {$/;"	m	class:DumpMethodVisitor
visitLineNumber	src/kilim/analysis/MethodFlow.java	/^    public void visitLineNumber(int line, Label start) {$/;"	m	class:MethodFlow
visitLineNumber	src/kilim/tools/DumpClass.java	/^    public void visitLineNumber(int line, Label start) {$/;"	m	class:DumpMethodVisitor
visitLineNumbers	src/kilim/analysis/MethodFlow.java	/^    void visitLineNumbers(MethodVisitor mv) {$/;"	m	class:MethodFlow
visitLineNumbers	src/kilim/analysis/MethodWeaver.java	/^    private void visitLineNumbers(MethodVisitor mv) {$/;"	m	class:MethodWeaver	file:
visitLocalVariable	src/kilim/tools/DumpClass.java	/^    public void visitLocalVariable(String name, String desc, String signature, Label start, Label end, int index) {$/;"	m	class:DumpMethodVisitor
visitLocals	src/kilim/analysis/MethodWeaver.java	/^    private void visitLocals(MethodVisitor mv) {$/;"	m	class:MethodWeaver	file:
visitLookupSwitchInsn	src/kilim/tools/DumpClass.java	/^    public void visitLookupSwitchInsn(Label dflt, int[] keys, Label[] labels) {$/;"	m	class:DumpMethodVisitor
visitMaxs	src/kilim/tools/DumpClass.java	/^    public void visitMaxs(int maxStack, int maxLocals) {$/;"	m	class:DumpMethodVisitor
visitMethod	src/kilim/analysis/ClassFlow.java	/^    public MethodVisitor visitMethod($/;"	m	class:ClassFlow
visitMethod	src/kilim/mirrors/CachedClassMirrors.java	/^    public MethodVisitor visitMethod(int access, String name, String desc, String signature,$/;"	m	class:CachedClassMirror
visitMethod	src/kilim/tools/DumpClass.java	/^    public MethodVisitor visitMethod(int access, String name, String desc, String signature, String[] exceptions) {$/;"	m	class:DumpClass
visitMethodInsn	src/kilim/analysis/MethodFlow.java	/^    public void visitMethodInsn(int opcode, String owner, String name, String desc) {$/;"	m	class:MethodFlow
visitMethodInsn	src/kilim/tools/DumpClass.java	/^    public void visitMethodInsn(int opcode, String owner, String name, String desc) {$/;"	m	class:DumpMethodVisitor
visitMultiANewArrayInsn	src/kilim/tools/DumpClass.java	/^    public void visitMultiANewArrayInsn(String desc, int dims) {$/;"	m	class:DumpMethodVisitor
visitOuterClass	src/kilim/mirrors/CachedClassMirrors.java	/^    public void visitOuterClass(String owner, String name, String desc) {}$/;"	m	class:CachedClassMirror
visitOuterClass	src/kilim/tools/DumpClass.java	/^    public void visitOuterClass(String owner, String name, String desc) {$/;"	m	class:DumpClass
visitParameterAnnotation	src/kilim/tools/DumpClass.java	/^    public AnnotationVisitor visitParameterAnnotation(int parameter, String desc, boolean visible) {$/;"	m	class:DumpMethodVisitor
visitSource	src/kilim/mirrors/CachedClassMirrors.java	/^    public void visitSource(String source, String debug) {}$/;"	m	class:CachedClassMirror
visitSource	src/kilim/tools/DumpClass.java	/^    public void visitSource(String source, String debug) {}$/;"	m	class:DumpClass
visitTableSwitchInsn	src/kilim/tools/DumpClass.java	/^    public void visitTableSwitchInsn(int min, int max, Label dflt, Label... labels) {$/;"	m	class:DumpMethodVisitor
visitTryCatchBlock	src/kilim/tools/DumpClass.java	/^    public void visitTryCatchBlock(Label start, Label end, Label handler, String type) {$/;"	m	class:DumpMethodVisitor
visitTryCatchBlocks	src/kilim/analysis/MethodWeaver.java	/^    void visitTryCatchBlocks(MethodVisitor mv) {$/;"	m	class:MethodWeaver
visitTypeInsn	src/kilim/tools/DumpClass.java	/^    public void visitTypeInsn(int opcode, String desc) {$/;"	m	class:DumpMethodVisitor
visitTypes	src/kilim/tools/Asm.java	/^    private final static byte[]                   visitTypes;$/;"	f	class:Asm	file:
visitVarInsn	src/kilim/tools/DumpClass.java	/^    public void visitVarInsn(int opcode, int var) {$/;"	m	class:DumpMethodVisitor
vmt	src/kilim/analysis/CallWeaver.java	/^    int    vmt;$/;"	f	class:ValInfo
waitForMsgOrSignal	src/kilim/WorkerThread.java	/^    public synchronized void waitForMsgOrSignal() {$/;"	m	class:WorkerThread
waitingThreads	src/kilim/Scheduler.java	/^    public RingQueue<WorkerThread> waitingThreads = new RingQueue<WorkerThread>(10);$/;"	f	class:Scheduler
walk	src/examples/Tree.java	/^    void walk(Tree t) throws Pausable {$/;"	m	class:Post
walk	src/examples/Tree.java	/^    void walk(Tree t) throws Pausable {$/;"	m	class:Pre
walk	src/kilim/examples/Tree.java	/^    void walk(Tree t) throws Pausable {$/;"	m	class:Post
walk	src/kilim/examples/Tree.java	/^    void walk(Tree t) throws Pausable {$/;"	m	class:Pre
weave	src/kilim/analysis/ClassWeaver.java	/^    public void weave() throws KilimException {$/;"	m	class:ClassWeaver
weave	src/kilim/tools/Weaver.java	/^    public List<ClassInfo> weave(ClassInfo cl) throws KilimException {$/;"	m	class:Weaver
weave	src/kilim/tools/Weaver.java	/^    public List<ClassInfo> weave(List<ClassInfo> classes) throws KilimException {$/;"	m	class:Weaver
weaveClass	src/kilim/tools/Weaver.java	/^    static void weaveClass(String name, Detector detector) {$/;"	m	class:Weaver
weaveClass2	src/kilim/tools/Weaver.java	/^    public static void weaveClass2(String name, Detector detector) throws IOException {$/;"	m	class:Weaver
weaveFile	src/kilim/tools/Weaver.java	/^    static void weaveFile(String name, InputStream is, Detector detector) throws IOException {$/;"	m	class:Weaver
weaver	src/kilim/WeavingClassLoader.java	/^    Weaver weaver;$/;"	f	class:WeavingClassLoader
workset	src/kilim/analysis/MethodFlow.java	/^    private PriorityQueue<BasicBlock>          workset;$/;"	f	class:MethodFlow	file:
write	src/kilim/analysis/Usage.java	/^    public void write(int var) {$/;"	m	class:Usage
write	src/kilim/nio/EndPoint.java	/^    public void write(ByteBuffer buf) throws IOException, Pausable {$/;"	m	class:EndPoint
write	src/kilim/nio/EndPoint.java	/^    public void write(FileChannel fc, long start, long length) throws IOException, Pausable {$/;"	m	class:EndPoint
write	src/kilim/tools/Asm.java	/^    private void write() throws IOException {$/;"	m	class:Asm	file:
writeClass	src/kilim/tools/Weaver.java	/^    static void writeClass(ClassInfo ci) throws IOException {$/;"	m	class:Weaver
writeClasses	src/kilim/tools/Weaver.java	/^    static void writeClasses(ClassWeaver cw) throws IOException {$/;"	m	class:Weaver
writeFile	src/kilim/tools/Javac.java	/^    private static void writeFile(File f, byte[] srcCode) throws IOException {$/;"	m	class:Javac	file:
writeHeader	src/kilim/http/HttpResponse.java	/^    public void writeHeader(OutputStream os) throws IOException {$/;"	m	class:HttpResponse
writePkt	src/examples/Ping.java	/^        private static void writePkt(SocketChannel ch, ByteBuffer bb) throws IOException {$/;"	m	class:Ping.Client	file:
writePkt	src/kilim/examples/Ping.java	/^        private static void writePkt(SocketChannel ch, ByteBuffer bb) throws IOException {$/;"	m	class:Ping.Client	file:
writeSolutions	src/cn/hnu/eg/sys/MaxValueVertex.java	/^	private void writeSolutions() throws Pausable {$/;"	m	class:MaxValueVertex	file:
writeTo	src/kilim/http/HttpResponse.java	/^    public void writeTo(EndPoint endpoint) throws IOException, Pausable {$/;"	m	class:HttpResponse
wrongPC	src/kilim/Fiber.java	/^    public void wrongPC() {$/;"	m	class:Fiber
wsPattern	src/kilim/tools/Asm.java	/^    static Pattern                  wsPattern      = Pattern.compile("\\\\s+");$/;"	f	class:Asm
yellowBook	src/cn/hnu/eg/base/Vertex.java	/^	private List<Mailbox<Message>> yellowBook = new LinkedList<Mailbox<Message>>();$/;"	f	class:Vertex	file:
yield	src/kilim/Generator.java	/^    public void yield(T val) throws Pausable {$/;"	m	class:Generator
yield	src/kilim/Task.java	/^    public static void yield() throws Pausable {errNotWoven();}$/;"	m	class:Task
yield	src/kilim/Task.java	/^    public static void yield(Fiber f) {$/;"	m	class:Task
yieldReason	src/kilim/Task.java	/^    static PauseReason         yieldReason = new YieldReason();$/;"	f	class:Task
